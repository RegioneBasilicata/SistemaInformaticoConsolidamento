--------------------------------------------------------
--  File creato - venerdì-novembre-26-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence DOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "DOC_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_NB_LIVELLO1
--------------------------------------------------------

   CREATE SEQUENCE  "ID_NB_LIVELLO1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 32 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_NB_LIVELLO2
--------------------------------------------------------

   CREATE SEQUENCE  "ID_NB_LIVELLO2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 143 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_NB_LIVELLO3
--------------------------------------------------------

   CREATE SEQUENCE  "ID_NB_LIVELLO3"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 163 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_TMP_PARAM_REPORTS_2
--------------------------------------------------------

   CREATE SEQUENCE  "ID_TMP_PARAM_REPORTS_2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 311 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RETT
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_RETT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2237 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table APPLICATION_PARAMETER
--------------------------------------------------------

  CREATE TABLE "APPLICATION_PARAMETER" 
   (	"REPORT_URL" VARCHAR2(200), 
	"REPORT_SERVER" VARCHAR2(200), 
	"REPORT_USERID" VARCHAR2(200), 
	"HOST_WEB" VARCHAR2(200), 
	"HOST_MOBILE" VARCHAR2(200), 
	"PATH_JS" VARCHAR2(200), 
	"HEADER" VARCHAR2(200), 
	"EXTERNAL_LINK" VARCHAR2(200), 
	"ALFRESCO_URL" VARCHAR2(300), 
	"ALFRESCO_USR" VARCHAR2(300), 
	"ALFRESCO_PSW" VARCHAR2(300), 
	"MAIL_ASSISTENZA" VARCHAR2(400), 
	"ALFRESCO_DOC" VARCHAR2(300), 
	"DIRECTORY_FILE" VARCHAR2(300), 
	"ALFRESCO_DOC2" VARCHAR2(300), 
	"ALFRESCO_URL_SHARE" VARCHAR2(300), 
	"UFF_RAG" VARCHAR2(5), 
	"ARUBA_USER" VARCHAR2(50), 
	"ARUBA_PWD" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "APPLICATION_PARAMETER"."MAIL_ASSISTENZA" IS 'Lista di mail usate come destinatari per le mail di assistenza (ad esempio per l''inserimento della fattura elettronica con errori).';
   COMMENT ON COLUMN "APPLICATION_PARAMETER"."UFF_RAG" IS 'Codice ufficio ragioneria';
--------------------------------------------------------
--  DDL for Table BACK_CONS_PIACEE_IMPORTI
--------------------------------------------------------

  CREATE TABLE "BACK_CONS_PIACEE_IMPORTI" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER, 
	"CODICE_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"DARE" NUMBER, 
	"AVERE" NUMBER, 
	"NOTE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table BACK_PARTITE_INFRA
--------------------------------------------------------

  CREATE TABLE "BACK_PARTITE_INFRA" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER, 
	"ID_INFRA" NUMBER, 
	"CREDITI" NUMBER, 
	"DEBITI" NUMBER, 
	"RICAVI" NUMBER, 
	"COSTI" NUMBER, 
	"INTERESSI_ROYAL" NUMBER, 
	"CONTRIBUTI" NUMBER, 
	"INTERESSI" NUMBER, 
	"ACQ_CESPITI" NUMBER, 
	"VEN_CESPITI" NUMBER, 
	"CONC_CRED_PREST" NUMBER, 
	"UTILE_PERD_INFRA" NUMBER, 
	"DIVIDENDI_DISAVANZI" NUMBER, 
	"TRIBUTI" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO_ORIGINALE" NUMBER, 
	"IMPORTO_RETTIFICATO" NUMBER, 
	"NOTE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_ANA_CONTABILE
--------------------------------------------------------

  CREATE TABLE "CONS_ANA_CONTABILE" 
   (	"ID_ANA" NUMBER, 
	"ANNO" NUMBER, 
	"TIPO_CONTABILITA" VARCHAR2(1), 
	"QUOTA_PARTECIPAZIONE" NUMBER, 
	"RISULTATO_ECONOMICO" NUMBER, 
	"CREDITI_CONTROLLANTE" NUMBER, 
	"DEBITI_CONTROLLANTE" NUMBER, 
	"SOGLIA_IRRILEVANZA" NUMBER DEFAULT 10000, 
	"PERC_PARTECIPAZIONE" NUMBER, 
	"COMPENSI_AMM" NUMBER, 
	"COMPENSI_REV" NUMBER, 
	"CREDITI_OLTRE" NUMBER, 
	"DEBITI_OLTRE" NUMBER, 
	"GAP_SN" VARCHAR2(1), 
	"FLAG_DC" VARCHAR2(1), 
	"FLAG_QP" VARCHAR2(1), 
	"DATA_APP_BILANCIO" DATE, 
	"NOTE_APP_BILANCIO" VARCHAR2(4000), 
	"DATA_PARIFICA" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."TIPO_CONTABILITA" IS 'F= finaziaria, P = economico-patrimoniale';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."SOGLIA_IRRILEVANZA" IS 'importo sotto il quale le differenze si ritengono irrilevanti (punto 4.3 del principio contabile applicato)';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."GAP_SN" IS 'se = S l''Ente/Azienda va considerata nel GAP dell''anno';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."FLAG_DC" IS '= S scriture per Differenze di consolidamento generate';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."FLAG_QP" IS '= S scritture per quote di partinenza di terzi generate';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."DATA_APP_BILANCIO" IS 'Data di approvazione del Bilancio';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."NOTE_APP_BILANCIO" IS 'Dettagli approvazione bilancio';
   COMMENT ON COLUMN "CONS_ANA_CONTABILE"."DATA_PARIFICA" IS 'contiene la data di (eventuale) parifica con la Regione';
--------------------------------------------------------
--  DDL for Table CONS_ANA_DOC
--------------------------------------------------------

  CREATE TABLE "CONS_ANA_DOC" 
   (	"CODICE" NUMBER, 
	"ANNO" NUMBER, 
	"ID_ANA" NUMBER, 
	"TIPO_DOC" NUMBER, 
	"DESCRIZIONE" VARCHAR2(4000), 
	"CREATO_DA" NUMBER, 
	"CREATO_IL" DATE, 
	"MODIFICATO_DA" NUMBER, 
	"MODIFICATO_IL" DATE, 
	"NOME_FILE" VARCHAR2(4000), 
	"FLAG_ALFRESCO" VARCHAR2(1)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_ANA_DOC"."CODICE" IS 'contiene il codice univoco recuperato dalla sequence "doc_seq"';
   COMMENT ON COLUMN "CONS_ANA_DOC"."ANNO" IS 'anno contabile al quale si riferisce il documento';
   COMMENT ON COLUMN "CONS_ANA_DOC"."ID_ANA" IS 'codice anagrafica dell''Ente/Azienda a cui si riferisce il documento';
   COMMENT ON COLUMN "CONS_ANA_DOC"."TIPO_DOC" IS 'identificativo del tipo di documento';
   COMMENT ON COLUMN "CONS_ANA_DOC"."CREATO_DA" IS 'codice_utente che ha sottomesso il documento';
   COMMENT ON COLUMN "CONS_ANA_DOC"."MODIFICATO_DA" IS 'codice_utente che ha modificato il documento';
   COMMENT ON COLUMN "CONS_ANA_DOC"."NOME_FILE" IS 'nome del file da uploadare';
   COMMENT ON COLUMN "CONS_ANA_DOC"."FLAG_ALFRESCO" IS 'se S = il documento è caricato sul documentale Alfresco e il nome file contiene anche l''URL';
   COMMENT ON TABLE "CONS_ANA_DOC"  IS 'Tabella contenente l''elenco dei documenti ufficiali (e non) allegati da Enti/Aziende per i vari anni contabili';
--------------------------------------------------------
--  DDL for Table CONS_ANAGRAFICA
--------------------------------------------------------

  CREATE TABLE "CONS_ANAGRAFICA" 
   (	"ID" NUMBER, 
	"TIPO" VARCHAR2(1), 
	"DENOMINAZIONE" VARCHAR2(2000), 
	"CODICE_FISCALE" VARCHAR2(16), 
	"SETTORE_ATTIVITA" VARCHAR2(2000), 
	"FORMA_GIURIDICA" VARCHAR2(2000), 
	"DATA_COSTITUZIONE" DATE, 
	"DATA_FINE" DATE, 
	"ID_SIC" NUMBER, 
	"UTILIZZO_SIC" VARCHAR2(1), 
	"DENOMINAZIONE_UFFICIALE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_ANAGRAFICA"."ID" IS 'Il codice 1 e'' la societa'' consolidante';
   COMMENT ON COLUMN "CONS_ANAGRAFICA"."TIPO" IS 'S_ocieta/E_nte: serve per sapere a quali codici della tabella CONS_PIACEE deve essere collegato';
   COMMENT ON COLUMN "CONS_ANAGRAFICA"."ID_SIC" IS 'identificativo anagrafica nel Sistema Contabile';
   COMMENT ON COLUMN "CONS_ANAGRAFICA"."DENOMINAZIONE_UFFICIALE" IS 'denominazione ufficiale dell''Ente/Azienda da utillizzare nei report';
  GRANT SELECT ON "CONS_ANAGRAFICA" TO "GAT2";
--------------------------------------------------------
--  DDL for Table CONS_ANA_SEDI
--------------------------------------------------------

  CREATE TABLE "CONS_ANA_SEDI" 
   (	"ID" NUMBER, 
	"ID_ANA" NUMBER, 
	"NOME_SEDE" VARCHAR2(2000), 
	"INDIRIZZO" VARCHAR2(2000), 
	"TELEFONO" VARCHAR2(100), 
	"EMAIL" VARCHAR2(2000), 
	"PEC" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_BIL_AGGREGATO
--------------------------------------------------------

  CREATE TABLE "CONS_BIL_AGGREGATO" 
   (	"ANNO" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"CODICE_CONTO" VARCHAR2(10)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_BILANCI
--------------------------------------------------------

  CREATE TABLE "CONS_BILANCI" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER, 
	"CODICE_CONTO" VARCHAR2(20), 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"DATA_CARICAMENTO" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_BILANCI"."IMPORTO" IS 'importo anno n';
   COMMENT ON COLUMN "CONS_BILANCI"."IMPORTO1" IS 'importo anno n-1';
--------------------------------------------------------
--  DDL for Table CONS_BIL_CONSOLIDATO
--------------------------------------------------------

  CREATE TABLE "CONS_BIL_CONSOLIDATO" 
   (	"ANNO" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"CODICE_CONTO" VARCHAR2(10)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
  GRANT INSERT, SELECT, UPDATE ON "CONS_BIL_CONSOLIDATO" TO "GAT2" WITH GRANT OPTION;
--------------------------------------------------------
--  DDL for Table CONS_BIL_NETTIZZATO
--------------------------------------------------------

  CREATE TABLE "CONS_BIL_NETTIZZATO" 
   (	"ANNO" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"CODICE_CONTO" VARCHAR2(10)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_BIL_REGCONS
--------------------------------------------------------

  CREATE TABLE "CONS_BIL_REGCONS" 
   (	"ANNO" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"CODICE_CONTO" VARCHAR2(10)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_DATI_GENERALI
--------------------------------------------------------

  CREATE TABLE "CONS_DATI_GENERALI" 
   (	"ANNO" NUMBER, 
	"ATTIVO" NVARCHAR2(1), 
	"DATA_F_CARICA" DATE, 
	"DATA_F_CONSOLIDA" DATE, 
	"RISULTATO_ESERCIZIO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_DIFF_CONSOLIDAMENTO
--------------------------------------------------------

  CREATE TABLE "CONS_DIFF_CONSOLIDAMENTO" 
   (	"ANNO" NUMBER, 
	"ID_ANA" NUMBER, 
	"DENOMINAZIONE" VARCHAR2(4000), 
	"PERC_PARTECIP" NUMBER, 
	"QUOTA_PARTECIP" NUMBER, 
	"PATRIMONIO_NETTO" NUMBER, 
	"DIFF_CONSOLIDAMENTO" NUMBER, 
	"ID_CONTO_DIFF" NUMBER, 
	"NOTE" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CONS_DOC_ALLEGATI
--------------------------------------------------------

  CREATE TABLE "CONS_DOC_ALLEGATI" 
   (	"ID_ENTE" NUMBER, 
	"ID_DOC" NUMBER, 
	"ANNO" NUMBER, 
	"DATA_ALLEGATO" DATE, 
	"URL" VARCHAR2(2000), 
	"NOTE" VARCHAR2(2000), 
	"NOTE_CONS" VARCHAR2(2000), 
	"DATA_VALIDAZIONE" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;
--------------------------------------------------------
--  DDL for Table CONS_INFRAGRUPPO
--------------------------------------------------------

  CREATE TABLE "CONS_INFRAGRUPPO" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER, 
	"ID_INFRA" NUMBER, 
	"CREDITI" NUMBER, 
	"DEBITI" NUMBER, 
	"RICAVI" NUMBER, 
	"COSTI" NUMBER, 
	"INTERESSI_ROYAL" NUMBER, 
	"CONTRIBUTI" NUMBER, 
	"INTERESSI" NUMBER, 
	"ACQ_CESPITI" NUMBER, 
	"VEN_CESPITI" NUMBER, 
	"CONC_CRED_PREST" NUMBER, 
	"UTILE_PERD_INFRA" NUMBER, 
	"DIVIDENDI_DISAVANZI" NUMBER, 
	"TRIBUTI" NUMBER, 
	"ID_CONTO" NUMBER, 
	"IMPORTO_ORIGINALE" NUMBER, 
	"IMPORTO_RETTIFICATO" NUMBER, 
	"NOTE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."ID_ENTE" IS 'id ente/società a cui si riferiscono i dati di bilancio';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."ID_INFRA" IS 'id ente/società verso cui si riferiscono gli importi';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."INTERESSI_ROYAL" IS 'INTERESSI E ROYALTIES (segno meno se costi (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."CONTRIBUTI" IS 'CONTRIBUTI  (segno negativo se ricevuti)  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."INTERESSI" IS 'INTERESSI (segno meno se pagati)  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."ACQ_CESPITI" IS 'ACQUISTO CESPITI  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."VEN_CESPITI" IS 'VENDITA CESPITI  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."CONC_CRED_PREST" IS 'CONCESSIONE CREDITI E PRESTITI  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."UTILE_PERD_INFRA" IS 'UTILE E PERDITE INFRAGRUPPO  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."DIVIDENDI_DISAVANZI" IS 'DIVIDENDI DISTRIBUITI E/O DISAVANZI  (non piu'' utilizzato)';
   COMMENT ON COLUMN "CONS_INFRAGRUPPO"."TRIBUTI" IS 'TRIBUTI VERSATI ALLA REGIONE  (non piu'' utilizzato)';
--------------------------------------------------------
--  DDL for Table CONS_PIACEE
--------------------------------------------------------

  CREATE TABLE "CONS_PIACEE" 
   (	"ID" NUMBER, 
	"TIPO" VARCHAR2(2), 
	"D_A" VARCHAR2(1), 
	"CODICE_CONTO" VARCHAR2(10), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"CONTO_STAMPA" VARCHAR2(20), 
	"ORDINAMENTO_STAMPA" NUMBER, 
	"ATTRIBUTO_STAMPA" VARCHAR2(1), 
	"ENTE_SOCIETA" VARCHAR2(1), 
	"CODICE_RACCORDO" VARCHAR2(10), 
	"ANNO" NUMBER(4,0), 
	"AGGREGATO" VARCHAR2(1), 
	"CLASSE" VARCHAR2(1), 
	"S_CLASSE" NUMBER(3,0), 
	"VOCE" NUMBER(3,0), 
	"S_VOCE" VARCHAR2(10), 
	"DETTAGLIO" VARCHAR2(10), 
	"TAG_BDAP" VARCHAR2(2000), 
	"CONTO_PREC" VARCHAR2(100)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_PIACEE"."ANNO" IS 'Anno struttura';
   COMMENT ON COLUMN "CONS_PIACEE"."AGGREGATO" IS 'S= Conto Aggregato - N= Conto di dettaglio - T= Conto di Totalizzazione o Calcolo';
   COMMENT ON COLUMN "CONS_PIACEE"."TAG_BDAP" IS 'TAG per file xbrl da inviare a BDAP';
   COMMENT ON COLUMN "CONS_PIACEE"."CONTO_PREC" IS 'contiene il codice del conto dell''anno precedente se diverso';
  GRANT INSERT, SELECT, UPDATE ON "CONS_PIACEE" TO "GAT2";
--------------------------------------------------------
--  DDL for Table CONS_PIACEE_IMPORTI
--------------------------------------------------------

  CREATE TABLE "CONS_PIACEE_IMPORTI" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER, 
	"CODICE_CONTO" NUMBER, 
	"IMPORTO" NUMBER, 
	"IMPORTO1" NUMBER, 
	"DARE" NUMBER, 
	"AVERE" NUMBER, 
	"NOTE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_PIACEE_IMPORTI"."DARE" IS 'importo rettifica PIU';
   COMMENT ON COLUMN "CONS_PIACEE_IMPORTI"."AVERE" IS 'importo rettifica MENO';
--------------------------------------------------------
--  DDL for Table CONS_RETTIFICHE
--------------------------------------------------------

  CREATE TABLE "CONS_RETTIFICHE" 
   (	"ANNO" NUMBER, 
	"ID_ENTE" NUMBER DEFAULT 1, 
	"CODICE_CONTO" NUMBER, 
	"PROGRESSIVO" NUMBER, 
	"FLAG_BILANCIO" VARCHAR2(1), 
	"IMPORTO" NUMBER, 
	"NOTE" VARCHAR2(2000), 
	"ID_ENTE_RIF" NUMBER, 
	"BIL_INFRA" VARCHAR2(1)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_RETTIFICHE"."FLAG_BILANCIO" IS '(B/C) rettifica su B_ilancio ente o bilancio C_consolidato';
   COMMENT ON COLUMN "CONS_RETTIFICHE"."BIL_INFRA" IS 'Flag che indica se la modifica riguarda una voce di bilancio o una voce di infragruppo (valido solo con FLAG_BILANCIO = ''B'')';
--------------------------------------------------------
--  DDL for Table CONS_TIPI_DOC
--------------------------------------------------------

  CREATE TABLE "CONS_TIPI_DOC" 
   (	"ID" NUMBER, 
	"DESCRIZIONE" VARCHAR2(2000), 
	"E_S" VARCHAR2(1), 
	"NOTE" VARCHAR2(2000), 
	"DATA_FINE" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;

   COMMENT ON COLUMN "CONS_TIPI_DOC"."E_S" IS 'Ente o Società/Azienda';
   COMMENT ON COLUMN "CONS_TIPI_DOC"."DATA_FINE" IS 'Data fine valitdità tipo documento';
--------------------------------------------------------
--  DDL for Table CONS_TIPI_DOC_ALLEGATI
--------------------------------------------------------

  CREATE TABLE "CONS_TIPI_DOC_ALLEGATI" 
   (	"ID" NUMBER, 
	"SIGLA" VARCHAR2(3), 
	"DESCRIZIONE" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON TABLE "CONS_TIPI_DOC_ALLEGATI"  IS 'Tabella contente le tipologie di documenti che possono essere allegati da ENTI/AZIENDE
creata da Francesco Ferrante
creata il 07/03/2021';
--------------------------------------------------------
--  DDL for Table CONS_UTENTI
--------------------------------------------------------

  CREATE TABLE "CONS_UTENTI" 
   (	"USER_ID" NUMBER(15,0), 
	"USER_NAME" VARCHAR2(100), 
	"COGNOME" VARCHAR2(50), 
	"NOME" VARCHAR2(50), 
	"LAST_UPDATE_DATE" DATE, 
	"LAST_UPDATED_BY" NUMBER(15,0), 
	"CREATION_DATE" DATE, 
	"CREATED_BY" NUMBER(15,0), 
	"LAST_UPDATE_LOGIN" NUMBER(15,0), 
	"ENCRYPTED_FOUNDATION_PASSWORD" VARCHAR2(100), 
	"ENCRYPTED_USER_PASSWORD" VARCHAR2(100), 
	"SESSION_NUMBER" NUMBER, 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"DESCRIPTION" VARCHAR2(240), 
	"LAST_LOGON_DATE" DATE, 
	"PASSWORD_DATE" DATE, 
	"EMAIL" VARCHAR2(240), 
	"PEC" VARCHAR2(240), 
	"TELEFONO" VARCHAR2(50), 
	"ID_ENTE" NUMBER, 
	"RUOLO_ENTE" VARCHAR2(1000), 
	"PW" VARCHAR2(30), 
	"RUOLO" VARCHAR2(100), 
	"MATRICOLA" NUMBER(6,0), 
	"COD_FISCALE" VARCHAR2(16), 
	"PASS_TEMP" VARCHAR2(200)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "CONS_UTENTI"."ID_ENTE" IS 'Ente collegato';
--------------------------------------------------------
--  DDL for Table CONS_UTENTI_ENTI
--------------------------------------------------------

  CREATE TABLE "CONS_UTENTI_ENTI" 
   (	"USER_ID" NUMBER, 
	"ID_ENTE" NUMBER, 
	"DATA_INIZIO" DATE, 
	"DATA_FINE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_BDAP
--------------------------------------------------------

  CREATE TABLE "FIN_T_BDAP" 
   (	"UTENTE" VARCHAR2(50), 
	"DATA_CREAZIONE" DATE, 
	"ANNO" NUMBER(4,0), 
	"TIPO_TRASMISSIONE" VARCHAR2(10), 
	"EU" VARCHAR2(1), 
	"RIGA" NUMBER, 
	"CONTENUTO" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_FILE_ESTERNI
--------------------------------------------------------

  CREATE TABLE "FIN_T_FILE_ESTERNI" 
   (	"ID" NUMBER, 
	"NOME_FILE" VARCHAR2(300), 
	"FLAG_ALFRESCO" VARCHAR2(1)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "FIN_T_FILE_ESTERNI"."ID" IS 'corrisponde il codice documento della tabella cons_ana_doc';
   COMMENT ON COLUMN "FIN_T_FILE_ESTERNI"."FLAG_ALFRESCO" IS 'Flag che indica se il file è memorizzato su filesystem o su Alfresco.';
--------------------------------------------------------
--  DDL for Table FIN_T_MENU_ASSOCIAZIONI
--------------------------------------------------------

  CREATE TABLE "FIN_T_MENU_ASSOCIAZIONI" 
   (	"CODICE" NUMBER, 
	"NOME_PROGRAMMA" VARCHAR2(100), 
	"TIPO" VARCHAR2(1), 
	"DESCRIZIONE" VARCHAR2(2000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_MENU_PARAMETRI
--------------------------------------------------------

  CREATE TABLE "FIN_T_MENU_PARAMETRI" 
   (	"CODICE" NUMBER, 
	"NOME_PARAMETRO" VARCHAR2(20), 
	"VALORE_PARAMETRO" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_MENU_PREFERITI
--------------------------------------------------------

  CREATE TABLE "FIN_T_MENU_PREFERITI" 
   (	"USER_ID" NUMBER(15,0), 
	"CODICE" NUMBER, 
	"SEQUENZA" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_MENU_RUOLI_WEB
--------------------------------------------------------

  CREATE TABLE "FIN_T_MENU_RUOLI_WEB" 
   (	"CODICE" NUMBER, 
	"RUOLO" VARCHAR2(100), 
	"LEGGI_SCRIVI" VARCHAR2(1), 
	"CODICE_PADRE" NUMBER, 
	"TITOLO" VARCHAR2(100)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_MENU_WEB
--------------------------------------------------------

  CREATE TABLE "FIN_T_MENU_WEB" 
   (	"CODICE" NUMBER, 
	"CODICE_PADRE" NUMBER, 
	"TITOLO" VARCHAR2(100), 
	"PAGINA" NUMBER, 
	"DESCRIZIONE" VARCHAR2(2000), 
	"HELP_VOCE" VARCHAR2(4000), 
	"ORDINAMENTO" NUMBER(5,0), 
	"PARAMETRI" VARCHAR2(4000), 
	"VALORI" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FIN_T_MESI
--------------------------------------------------------

  CREATE TABLE "FIN_T_MESI" 
   (	"ID" NUMBER(2,0), 
	"DESCRIZIONE" VARCHAR2(20), 
	"DESCRIZIONE_BREVE" VARCHAR2(7)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FND_REPORTS
--------------------------------------------------------

  CREATE TABLE "FND_REPORTS" 
   (	"ID" NUMBER, 
	"DESCRIZIONE" VARCHAR2(2000), 
	"INTESTAZIONE01" VARCHAR2(200), 
	"INTESTAZIONE02" VARCHAR2(200), 
	"INTESTAZIONE_DESTRA" VARCHAR2(200), 
	"INTESTAZIONE_SINISTRA" VARCHAR2(200), 
	"PIEDE01" VARCHAR2(200), 
	"PIEDE02" VARCHAR2(200), 
	"PIEDE_DESTRA" VARCHAR2(200), 
	"PIEDE_SINISTRA" VARCHAR2(200), 
	"ID_CATEGORIA" NUMBER, 
	"NOME_REPORTS" VARCHAR2(15), 
	"P01_ANNO" NUMBER(4,0), 
	"P01_ANNO_DESC" VARCHAR2(50), 
	"P02_ANNO" NUMBER(4,0), 
	"P02_ANNO_DESC" VARCHAR2(50), 
	"P03_DATA" DATE, 
	"P03_DATA_DESC" VARCHAR2(50), 
	"P04_DATA" DATE, 
	"P04_DATA_DESC" VARCHAR2(50), 
	"P05_CHAR" VARCHAR2(30), 
	"P05_CHAR_DESC" VARCHAR2(50), 
	"P06_CHAR" VARCHAR2(30), 
	"P06_CHAR_DESC" VARCHAR2(50), 
	"P07_CHAR" VARCHAR2(30), 
	"P07_CHAR_DESC" VARCHAR2(50), 
	"P08_CHAR" VARCHAR2(30), 
	"P08_CHAR_DESC" VARCHAR2(50), 
	"P09_NUM" NUMBER, 
	"P09_NUM_DESC" VARCHAR2(50), 
	"P10_NUM" NUMBER, 
	"P10_NUM_DESC" VARCHAR2(50), 
	"P11_NUM" NUMBER, 
	"P11_NUM_DESC" VARCHAR2(50), 
	"P12_NUM" NUMBER, 
	"P12_NUM_DESC" VARCHAR2(50), 
	"P13_CAPITOLO" VARCHAR2(6), 
	"P13_CAPITOLO_DESC" VARCHAR2(50), 
	"PAGINA" NUMBER, 
	"ORDINAMENTO" NUMBER(5,0), 
	"UTENTE" VARCHAR2(100), 
	"HELP" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FND_REPORTS_CATEGORIE
--------------------------------------------------------

  CREATE TABLE "FND_REPORTS_CATEGORIE" 
   (	"CODICE" NUMBER, 
	"DESCRIZIONE" VARCHAR2(2000), 
	"CODICE_PADRE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table FND_USER
--------------------------------------------------------

  CREATE TABLE "FND_USER" 
   (	"USER_ID" NUMBER(15,0), 
	"USER_NAME" VARCHAR2(100), 
	"LAST_UPDATE_DATE" DATE, 
	"LAST_UPDATED_BY" NUMBER(15,0), 
	"CREATION_DATE" DATE, 
	"CREATED_BY" NUMBER(15,0), 
	"LAST_UPDATE_LOGIN" NUMBER(15,0), 
	"ENCRYPTED_FOUNDATION_PASSWORD" VARCHAR2(100), 
	"ENCRYPTED_USER_PASSWORD" VARCHAR2(100), 
	"SESSION_NUMBER" NUMBER, 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"DESCRIPTION" VARCHAR2(240), 
	"LAST_LOGON_DATE" DATE, 
	"PASSWORD_DATE" DATE, 
	"PASSWORD_ACCESSES_LEFT" NUMBER(15,0), 
	"PASSWORD_LIFESPAN_ACCESSES" NUMBER(15,0), 
	"PASSWORD_LIFESPAN_DAYS" NUMBER(15,0), 
	"EMPLOYEE_ID" NUMBER(15,0), 
	"EMAIL_ADDRESS" VARCHAR2(240), 
	"FAX" VARCHAR2(80), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"SUPPLIER_ID" NUMBER(15,0), 
	"WEB_PASSWORD" VARCHAR2(240), 
	"PW" VARCHAR2(30), 
	"RUOLO" VARCHAR2(100), 
	"TIPO_CLIENT_DEFAULT" VARCHAR2(1), 
	"UFFICIO" VARCHAR2(5), 
	"AMM_DIPART" VARCHAR2(1), 
	"AMM_TUTTI" VARCHAR2(1), 
	"MATRICOLA" NUMBER(6,0), 
	"COD_FISCALE" VARCHAR2(16), 
	"ID_RT" NUMBER(11,0), 
	"SUPERUSER_GSA" VARCHAR2(1), 
	"COGNOME" VARCHAR2(50), 
	"NOME" VARCHAR2(50), 
	"CDG_SN" VARCHAR2(1), 
	"FLAG_INTERIM" VARCHAR2(1), 
	"ACCESSO_PROJECT" VARCHAR2(1), 
	"AMM_UTENTI_PROJECT" VARCHAR2(1), 
	"ACCESSO_SIC" VARCHAR2(1), 
	"AMM_UTENTI_SIC" VARCHAR2(1), 
	"DOCUMENTI_BILANCIO" VARCHAR2(1), 
	"PASS_TEMP" VARCHAR2(200), 
	"SO64" VARCHAR2(1), 
	"RUOLO_RICHIESTA" VARCHAR2(1), 
	"FL_MONIT_TRIM_SUP_U" VARCHAR2(1), 
	"ABIL_CONTR" VARCHAR2(1), 
	"SUPERUSER_AUTOPARCO" VARCHAR2(1), 
	"AMM_RICH_FONDI" VARCHAR2(1)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 720896 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "FND_USER"."UFFICIO" IS 'INDIVIDUA L''UFFICIO DELL''UTENTE';
   COMMENT ON COLUMN "FND_USER"."AMM_DIPART" IS 'STABILISCE SE L''UTENTE E'' ABILITATO A COMPIERE OPERAZIONE ANCHE PER ALTRI UFFICI DEL SUO DIPARTIMENTO';
   COMMENT ON COLUMN "FND_USER"."AMM_TUTTI" IS 'Abilita all''amministrazione di tutti gli uffici nel modulo economato';
   COMMENT ON COLUMN "FND_USER"."CDG_SN" IS 'S=utente abilitato alla richieste/valutazioni di condivisione capitoli
N= utente NON abilitato alla reichieste/valutazioni di condivisione capitoli';
   COMMENT ON COLUMN "FND_USER"."FLAG_INTERIM" IS 'S= dirigente con interim 
N= dirigente NO interim';
   COMMENT ON COLUMN "FND_USER"."ACCESSO_PROJECT" IS 'S - abilitato alla procedura project
R - Richesta abilitazione alla procedura project
Nullo non abilitato all''accesso in project';
   COMMENT ON COLUMN "FND_USER"."DOCUMENTI_BILANCIO" IS 'Se impostato a S i documenti contabili generati dall''utente saranno assegnati per le distinte all''ufficio Bilancio - Impostare U per l''utenteche gestisce entrambi gli uffici';
   COMMENT ON COLUMN "FND_USER"."RUOLO_RICHIESTA" IS 'Campo che identifica l''utente come "G"estore delle Richieste presso l''Ufficio Bilancio o come utente che può effettuare una "R"ichiesta';
   COMMENT ON COLUMN "FND_USER"."FL_MONIT_TRIM_SUP_U" IS 'Applicazione "Monitoraggio Trimestrale". Indica se l''operatore è da considerarsi come Super User';
   COMMENT ON COLUMN "FND_USER"."ABIL_CONTR" IS 'Utente che gestisce abilitazione contratti U per il proprio ufficio T per tutti gli uffici; nullo non abilitato';
   COMMENT ON COLUMN "FND_USER"."AMM_RICH_FONDI" IS 'Amministratore richieste missioni con fondi';
--------------------------------------------------------
--  DDL for Table NOTA_TAB_AGGREGATI
--------------------------------------------------------

  CREATE TABLE "NOTA_TAB_AGGREGATI" 
   (	"ANNO" NUMBER, 
	"TIPO" VARCHAR2(1), 
	"CODICE" VARCHAR2(10), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"IMP_CONTROLLANTE" NUMBER, 
	"IMP_CONSOLIDATO" NUMBER, 
	"IMP_DIFFERENZA" NUMBER, 
	"ORDINAMENTO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "NOTA_TAB_AGGREGATI"."TIPO" IS 'P = Stato PAtrimoniale, E = Conto Economico';
--------------------------------------------------------
--  DDL for Table NOTA_TAB_DETTAGLI
--------------------------------------------------------

  CREATE TABLE "NOTA_TAB_DETTAGLI" 
   (	"ANNO" NUMBER, 
	"TIPO" VARCHAR2(3), 
	"CODICE" VARCHAR2(10), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"IMPORTO" NUMBER, 
	"PERCENTUALE" NUMBER, 
	"ORDINAMENTO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "NOTA_TAB_DETTAGLI"."TIPO" IS 'P= Stato PAtrimoniale E = Conto Economico';
--------------------------------------------------------
--  DDL for Table NOTA_TAB_REVISORI
--------------------------------------------------------

  CREATE TABLE "NOTA_TAB_REVISORI" 
   (	"ANNO" NUMBER, 
	"ORDINAMENTO" NUMBER, 
	"TIPO" VARCHAR2(1), 
	"CODICE" VARCHAR2(10), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"IMP_AGGREGATO" NUMBER, 
	"IMP_RETT_COERENZA" NUMBER, 
	"IMP_INFRAGRUPPO" NUMBER, 
	"IMP_RETT_CONSOLIDA" NUMBER, 
	"IMP_CONSOLIDATO" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;

   COMMENT ON COLUMN "NOTA_TAB_REVISORI"."TIPO" IS 'P = Stato PAtrimoniale, E = Conto Economico';
--------------------------------------------------------
--  DDL for Table REV_TAB_AGGREGATI
--------------------------------------------------------

  CREATE TABLE "REV_TAB_AGGREGATI" 
   (	"ANNO" NUMBER, 
	"TIPO" VARCHAR2(1), 
	"CODICE" VARCHAR2(10), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"IMP_CONTROLLANTE" NUMBER, 
	"IMP_CONSOLIDATO" NUMBER, 
	"IMP_DIFFERENZA" NUMBER, 
	"ORDINAMENTO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);

   COMMENT ON COLUMN "REV_TAB_AGGREGATI"."TIPO" IS 'P = Stato PAtrimoniale, E = Conto Economico';
--------------------------------------------------------
--  DDL for Table TMP_BILANCI
--------------------------------------------------------

  CREATE TABLE "TMP_BILANCI" 
   (	"ANNO" NUMBER, 
	"CODICE_CONTO" VARCHAR2(20), 
	"IMPORTO" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;
--------------------------------------------------------
--  DDL for Table TMP_PARAM_REPORTS_2
--------------------------------------------------------

  CREATE TABLE "TMP_PARAM_REPORTS_2" 
   (	"ID" NUMBER, 
	"DATA" DATE, 
	"USER_ID" NUMBER(17,0), 
	"USER_NAME" VARCHAR2(100), 
	"DESCRIZIONE" VARCHAR2(2000), 
	"INTESTAZIONE01" VARCHAR2(200), 
	"INTESTAZIONE02" VARCHAR2(200), 
	"INTESTAZIONE_DESTRA" VARCHAR2(200), 
	"INTESTAZIONE_SINISTRA" VARCHAR2(200), 
	"PIEDE01" VARCHAR2(200), 
	"PIEDE02" VARCHAR2(200), 
	"PIEDE_DESTRA" VARCHAR2(200), 
	"PIEDE_SINISTRA" VARCHAR2(200), 
	"NOME_REPORTS" VARCHAR2(15), 
	"P01_ANNO" NUMBER(4,0), 
	"P01_ANNO_DESC" VARCHAR2(50), 
	"P02_ANNO" NUMBER(4,0), 
	"P02_ANNO_DESC" VARCHAR2(50), 
	"P03_DATA" DATE, 
	"P03_DATA_DESC" VARCHAR2(50), 
	"P04_DATA" DATE, 
	"P04_DATA_DESC" VARCHAR2(50), 
	"P05_CHAR" VARCHAR2(30), 
	"P05_CHAR_DESC" VARCHAR2(50), 
	"P06_CHAR" VARCHAR2(30), 
	"P06_CHAR_DESC" VARCHAR2(50), 
	"P07_CHAR" VARCHAR2(30), 
	"P07_CHAR_DESC" VARCHAR2(50), 
	"P08_CHAR" VARCHAR2(30), 
	"P08_CHAR_DESC" VARCHAR2(50), 
	"P09_NUM" NUMBER, 
	"P09_NUM_DESC" VARCHAR2(50), 
	"P10_NUM" NUMBER, 
	"P10_NUM_DESC" VARCHAR2(50), 
	"P11_NUM" NUMBER, 
	"P11_NUM_DESC" VARCHAR2(50), 
	"P12_NUM" NUMBER, 
	"P12_NUM_DESC" VARCHAR2(50), 
	"P13_CAPITOLO" VARCHAR2(6), 
	"P13_CAPITOLO_DESC" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for View MENU_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MENU_V" ("TITOLO", "CODICE", "URL", "DESCRIZIONE", "CODICE_PADRE", "ORDINAMENTO", "PARAMETRI", "VALORI") AS 
  select        
       m.TITOLO name, 
       r.CODICE codice, 
       m.PAGINA as url,
       m.DESCRIZIONE as descrizione,
       m.CODICE_PADRE codice_padre,
       m.ordinamento as ordinamento,
       m.parametri,
       m.valori
from FIN_T_MENU_RUOLI_WEB r, FIN_T_MENU_WEB m, CONS_UTENTI u
where r.codice = m.codice AND
      u.user_name = v('APP_USER') AND
      r.RUOLO = u.RUOLO
;
--------------------------------------------------------
--  DDL for View VW_ALL11_ENTI
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_ALL11_ENTI" ("ID_ENTE", "ANNO", "TIPO", "ORDINAMENTO_STAMPA", "CODICE_CONTO", "IMPORTO") AS 
  select 11 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo
from regbas_consolidato.cons_piacee p
,sic_arpab.nb_piacee_importi c
,sic_arpab.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 8 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_parcogallipoli.nb_piacee_importi c
,sic_parcogallipoli.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 2 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_parcomurgia.nb_piacee_importi c
,sic_parcomurgia.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 20 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_lab.nb_piacee_importi c
,sic_lab.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 10 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_ardsu.nb_piacee_importi c
,sic_ardsu.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 16 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_alsia.nb_piacee_importi c
,sic_alsia.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 9 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_apt.nb_piacee_importi c
,sic_apt.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
union
select 33 id_ente
,p.anno
,decode(p.tipo,'A',1,'P',2,'CO',3,99) tipo
,p.ORDINAMENTO_STAMPA
,p.codice_conto codice_conto
,sum(nvl(c.importo,0)) importo 
from regbas_consolidato.cons_piacee p
,sic_parcovulture.nb_piacee_importi c
,sic_parcovulture.fin_t_dati_generali g
where 
p.ente_societa = 'E'
and c.anno(+) = p.anno
and c.TIPO_PIACEE(+) = p.tipo
and c.codice_piacee(+) = p.codice_conto
and c.utente(+) = 99999
and g.anno_finanziario = p.anno and g.data_chiusura_economica is not null
group by p.anno,p.codice_conto,p.tipo,p.ORDINAMENTO_STAMPA
order by 1,2,3,4
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI" ("ANNO", "ID_ENTE", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  select i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,'C',3,99) tipo,e.id id_conto,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa,sum(nvl(i.IMPORTO,0)) importo,sum(nvl(i.IMPORTO1,0)) importo1
from cons_piacee_importi i
,cons_piacee e
,cons_anagrafica a
where e.anno = i.anno
and e.id = i.CODICE_CONTO
and e.ENTE_SOCIETA = 'E'
and a.id = i.ID_ENTE
and a.TIPO = 'E'
group by i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,99),e.id,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_AGG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_AGG" ("ANNO", "ID_ENTE", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  select i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,99) tipo,e.id id_conto,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa,sum(nvl(i.IMPORTO,0)) importo,sum(nvl(i.IMPORTO1,0)) importo1
from cons_piacee_importi i
,cons_piacee e
,cons_anagrafica a
where e.anno = i.anno
and e.id = i.CODICE_CONTO
and e.ENTE_SOCIETA = 'E'
and a.id = i.ID_ENTE
and a.TIPO = 'E'
group by i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,99),e.id,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_NETTIZZATI
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_NETTIZZATI" ("ANNO", "ID_ENTE", "ENTE_AZIENDA", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  SELECT
        i.anno,
        i.id_ente,
        a.denominazione_ufficiale ente_azienda,
        DECODE(substr(e.codice_conto, 1, 1), 'A',1, 'P', 2, 'C', 3, 99) tipo,
        e.id id_conto,
        e.codice_conto,
        e.descrizione,
        e.ordinamento_stampa,( nvl(i.importo, 0) + nvl((
            SELECT
                SUM(r.importo)
            FROM
                cons_rettifiche r
            WHERE
                r.anno = i.anno
                AND r.id_ente = i.id_ente
                AND r.codice_conto = i.codice_conto
                AND nvl(r.bil_infra, 'X') = 'B'
        ), 0) - ( nvl((
            SELECT
                SUM(r.importo_originale)
            FROM
                cons_infragruppo r
            WHERE
                r.anno = i.anno
                AND r.id_ente = i.id_ente
                AND r.id_conto = i.codice_conto
        ), 0) + nvl((
            SELECT
                SUM(r.importo)
            FROM
                cons_rettifiche r
            WHERE
                r.anno = i.anno
                AND r.id_ente = i.id_ente
                AND r.codice_conto = i.codice_conto
                AND nvl(r.bil_infra, 'X') = 'I'
        ), 0) ) ) importo,
        nvl(i.importo1, 0) importo1
    FROM
        cons_piacee_importi   i,
        cons_piacee           e,
        cons_anagrafica       a
    WHERE
        e.anno = i.anno
        AND e.id = i.codice_conto
        AND e.ente_societa = 'E'
        AND a.id = i.id_ente
        AND a.tipo = 'E'
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_NETT_TOT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_NETT_TOT" ("ANNO", "ID_ENTE", "ENTE_AZIENDA", "TIPO", "CODICE_CONTO", "DESCRIZIONE", "IMPORTO", "IMPORTO1", "ATTRIBUTO_STAMPA", "ORDINAMENTO_STAMPA") AS 
  select c.anno
,c.id_ente
,c.ente_azienda
,c.tipo
,c.codice_conto
, c.descrizione
,c.importo,c.IMPORTO1
,p.attributo_stampa
,p.ordinamento_stampa
from vw_bilanci_enti_nettizzati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X') = 'N'
UNION
select c.anno
,c.id_ente
,c.ente_azienda
,c.tipo
,c.codice_conto
, c.descrizione
,0,0
,p.attributo_stampa
,p.ordinamento_stampa
from vw_bilanci_enti_nettizzati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X') = 'S'
UNION
select
c.anno
,c.id_ente
,c.ente_azienda
,c.tipo,c.codice_conto, c.descrizione,totale_conto_netto(c.anno,c.codice_conto,c.id_ENTE) importo,totale_conto_netto1(c.ANNO,c.codice_conto,c.id_ENTE) importo1,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_nettizzati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')='T'
UNION
select c.anno
,c.id_ente
,c.ente_azienda
,c.tipo,c.codice_conto, p.descrizione
,(select sum(nvl(x.importo,0))
    from vw_bilanci_enti_nettizzati x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N') importo
,(select sum(nvl(x.importo1,0))
    from vw_bilanci_enti_nettizzati x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N')IMPORTO1
,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_rettificati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')= 'P'
order by tipo,ORDINAMENTO_STAMPA
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_RETTIFICATI
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_RETTIFICATI" ("ANNO", "ID_ENTE", "ENTE_AZIENDA", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  select i.anno,i.id_ente,a.denominazione_ufficiale ente_azienda,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,'C',3,99) tipo,e.id id_conto,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa
  ,(nvl(i.IMPORTO,0) + 
  nvl((select sum(r.importo) from cons_rettifiche r where r.anno = i.anno and r.id_ente = i.id_ente and r.codice_conto = i.codice_conto and nvl(r.bil_infra,'X') = 'B'),0))importo
  ,nvl(i.IMPORTO1,0) importo1
from cons_piacee_importi i
,cons_piacee e
,cons_anagrafica a
where e.anno = i.anno
and e.id = i.CODICE_CONTO
and e.ENTE_SOCIETA = 'E'
and a.id = i.ID_ENTE
and a.TIPO = 'E'
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_RETT_TOT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_RETT_TOT" ("ANNO", "ID_ENTE", "TIPO", "CODICE_CONTO", "DESCRIZIONE", "IMPORTO", "IMPORTO1", "ATTRIBUTO_STAMPA", "ORDINAMENTO_STAMPA") AS 
  select c.anno
,c.id_ente
,c.tipo
,c.codice_conto
, c.descrizione
,c.importo,c.IMPORTO1
,p.attributo_stampa
,p.ordinamento_stampa
from vw_bilanci_enti_rettificati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')in ('N','S')
UNION
select
c.anno
,c.id_ente
,c.tipo,c.codice_conto, c.descrizione,totale_conto_rettificato(c.anno,c.codice_conto,c.id_ENTE) importo,totale_conto_rettificato1(c.ANNO,c.codice_conto,c.id_ENTE) importo1,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_rettificati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')='T'
UNION
select c.anno
,c.id_ente
,c.tipo,c.codice_conto, p.descrizione
,(select sum(nvl(x.importo,0))
    from vw_bilanci_enti_rettificati x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N') importo
,(select sum(nvl(x.importo1,0))
    from vw_bilanci_enti_rettificati x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N')IMPORTO1
,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_rettificati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')= 'P'
order by tipo,ORDINAMENTO_STAMPA
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_TOT_VA
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_TOT_VA" ("ANNO", "ID_ENTE", "TIPO", "CODICE_CONTO", "DESCRIZIONE", "IMPORTO", "IMPORTO1", "ATTRIBUTO_STAMPA", "ORDINAMENTO_STAMPA") AS 
  select c.anno
,c.id_ente
,c.tipo
,c.codice_conto
, c.descrizione
,c.importo,c.IMPORTO1
,p.attributo_stampa
,p.ordinamento_stampa
from vw_bilanci_enti_va c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X') = 'N'
UNION
select c.anno
,c.id_ente
,c.tipo
,c.codice_conto
, c.descrizione
,0,0
,p.attributo_stampa
,p.ordinamento_stampa
from vw_bilanci_enti_va c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X') = 'S'
UNION
select
c.anno
,c.id_ente
,c.tipo,c.codice_conto, c.descrizione,totale_conto_va(c.anno,c.codice_conto,c.id_ENTE) importo,totale_conto_va((c.ANNO-1),c.codice_conto,c.id_ENTE) importo1,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_va c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')='T'
UNION
select c.anno
,c.id_ente
,c.tipo,c.codice_conto, p.descrizione
,(select sum(nvl(x.importo,0))
    from vw_bilanci_enti_va x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N') importo
,(select sum(nvl(x.importo1,0))
    from vw_bilanci_enti_va x
    ,cons_piacee y
    where substr(x.codice_conto,1,length(c.codice_conto)) = c.codice_conto
    and y.anno = x.anno
    and y.id = x.ID_CONTO
    and nvl(y.aggregato,'X')= 'N')IMPORTO1
,p.attributo_stampa,p.ordinamento_stampa
from vw_bilanci_enti_rettificati c
,cons_piacee p
where c.anno = p.anno
and c.ID_CONTO = p.id
and nvl(p.aggregato,'X')= 'P'
order by tipo,ORDINAMENTO_STAMPA
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_ENTI_VA
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_ENTI_VA" ("ANNO", "ID_ENTE", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  select i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,'C',3,99) tipo,e.id id_conto,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa
  ,(nvl(i.IMPORTO,0) + 
  nvl((select sum(r.importo) from cons_rettifiche r where r.anno = i.anno and r.id_ente = i.id_ente and r.codice_conto = i.codice_conto and nvl(r.bil_infra,'X') = 'B'),0)
  - 
  (
      nvl((select sum(r.importo_originale) from cons_infragruppo r where r.anno = i.anno and r.id_ente = i.id_ente and r.id_conto = i.codice_conto),0)
      +
      nvl((select sum(r.importo) from cons_rettifiche r where r.anno = i.anno and r.id_ente = i.id_ente and r.codice_conto = i.codice_conto and nvl(r.bil_infra,'X') = 'I'),0)
  )
   + 
  nvl((select sum(r.importo) from cons_rettifiche r where r.anno = i.anno and r.id_ente = i.id_ente and r.codice_conto = i.codice_conto and nvl(r.flag_bilancio, 'X') = 'C'),0)) importo
  ,nvl(i.IMPORTO1,0) importo1
from cons_piacee_importi i
,cons_piacee e
,cons_anagrafica a
where e.anno = i.anno
and e.id = i.CODICE_CONTO
and e.ENTE_SOCIETA = 'E'
and a.id = i.ID_ENTE
and a.TIPO = 'E'
;
--------------------------------------------------------
--  DDL for View VW_BILANCIO_CONSOLIDATO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCIO_CONSOLIDATO" ("ANNO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "IMPORTO", "IMPORTO1") AS 
  select p.anno,p.id id_conto,p.codice_conto, p.descrizione,c.importo,c.IMPORTO1
from cons_piacee p
,cons_bil_consolidato c
where p.ENTE_SOCIETA = 'E'
and c.anno = p.anno
and c.ID_CONTO = p.id
;
--------------------------------------------------------
--  DDL for View VW_BILANCI_SOCIETA
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BILANCI_SOCIETA" ("ANNO", "ID_ENTE", "TIPO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "ORDINAMENTO_STAMPA", "IMPORTO", "IMPORTO1") AS 
  select i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,99) tipo,e.id id_conto,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa,sum(nvl(i.IMPORTO,0)+nvl(i.DARE,0)-nvl(i.AVERE,0)) importo,sum(nvl(i.IMPORTO1,0)) importo1
from cons_piacee_importi i
,cons_piacee p
,cons_piacee e
,cons_anagrafica a
where p.anno = i.anno
and p.id = i.CODICE_CONTO
and p.ENTE_SOCIETA = 'S'
and p.CODICE_RACCORDO is not null
and e.ANNO = p.anno
and e.CODICE_CONTO = p.CODICE_RACCORDO
and e.ENTE_SOCIETA = 'E'
and a.id = i.ID_ENTE
and a.TIPO = 'S'
group by i.anno,i.id_ente,decode(substr(e.CODICE_CONTO,1,1),'A',1,'P',2,99),e.id,e.CODICE_CONTO,e.descrizione,e.ordinamento_stampa
;
--------------------------------------------------------
--  DDL for View VW_BIL_CONS_REGCONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_BIL_CONS_REGCONS" ("ANNO", "ID_CONTO", "CODICE_CONTO", "DESCRIZIONE", "IMPORTO", "IMPORTO1") AS 
  SELECT
        p.anno,
        p.id id_conto,
        p.codice_conto,
        p.descrizione,
        c.importo,
        c.importo1
    FROM
        cons_piacee           p,
        cons_bil_regcons  c
    WHERE
            p.ente_societa = 'E'
        AND c.anno = p.anno
        AND c.id_conto = p.id
;
--------------------------------------------------------
--  DDL for View VW_DIFF_CONSOLIDAMENTO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_DIFF_CONSOLIDAMENTO" ("ANNO", "ID_ANA", "DENOMINAZIONE", "PERC_PARTECIPAZIONE", "QUOTA_PARTECIPAZIONE", "PATRIMONIO_NETTO", "DIFF_CONS") AS 
  SELECT
        anno,
        id_ana,
        denominazione,
        perc_partecipazione,
        quota_partecipazione,
        patrimonio_netto,
        round((quota_partecipazione -(perc_partecipazione * patrimonio_netto / 100)), 2) diff_cons
    FROM
    (select 
        anno,
        id_ana,
        denominazione,
        perc_partecipazione,
        quota_partecipazione,
        sum(patrimonio_netto) patrimonio_netto
     FROM
                (
                    SELECT
                        c.anno,
                        c.id_ana,
                        a.denominazione,
                        c.perc_partecipazione,
                        c.quota_partecipazione,
                        SUM(nvl(b.importo, 0)) patrimonio_netto
                    FROM
                        cons_ana_contabile           c,
                        vw_bilanci_enti_nettizzati b,
                        cons_anagrafica              a
                    WHERE
                        nvl(c.quota_partecipazione,0) > 0
                        AND nvl(c.perc_partecipazione, 0) > 0
                        AND b.id_ente = c.id_ana
                        AND b.anno = c.anno
                        AND b.codice_conto IN (
                            'PAI',
                            'PAIIa',
                            'PAIIb',
                            'PAIIc',
                            'PAIId',
                            'PAIIe'
                        )
                        AND nvl(b.importo, 0) <> 0
                        AND a.id = c.id_ana
                    GROUP BY
                        c.anno,
                        c.id_ana,
                        a.denominazione,
                        c.perc_partecipazione,
                        c.quota_partecipazione
                        UNION
                select  c.anno,
                        c.id_ana,
                        a.denominazione,
                        c.perc_partecipazione,
                        c.quota_partecipazione,
                        SUM(totale_conto_netto(b.anno,b.codice_conto,c.id_ana)) patrimonio_netto
                    FROM
                        cons_ana_contabile           c,
                        vw_bilanci_enti_nettizzati b,
                        cons_anagrafica              a
                    WHERE
                        nvl(c.quota_partecipazione,0) > 0
                        AND nvl(c.perc_partecipazione, 0) > 0
                        AND b.id_ente = c.id_ana
                        AND b.anno = c.anno
                        AND b.codice_conto = 'PAIII'
                        AND nvl(b.importo, 0) <> 0
                        AND a.id = c.id_ana
                        GROUP BY
                        c.anno,
                        c.id_ana,
                        a.denominazione,
                        c.perc_partecipazione,
                        c.quota_partecipazione
                    )
        group by 
        anno,
        id_ana,
        denominazione,
        perc_partecipazione,
        quota_partecipazione
        )
    ORDER BY
        1,
        2,
        3
;
--------------------------------------------------------
--  DDL for View VW_INFO_AGG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_INFO_AGG" ("ANNO", "ENTE_AZIENDA", "COMPENSI_AMM", "COMPENSI_REV", "CREDITI_OLTRE", "DEBITI_OLTRE") AS 
  select c.anno 
,a.denominazione_ufficiale ente_azienda
,c.compensi_amm compensi_amm
,c.compensi_rev compensi_rev
,c.crediti_oltre
,c.debiti_oltre
from cons_anagrafica a
,cons_ana_contabile c
where c.id_ana = a.id
and (nvl(c.compensi_amm,0) + nvl(c.compensi_rev,0) + nvl(c.crediti_oltre,0) + nvl(c.debiti_oltre,0)) <> 0
order by 1,2
;
--------------------------------------------------------
--  DDL for View VW_INFRA_ENTE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_INFRA_ENTE" ("ANNO", "ID_ENTE", "CONTO", "IMPORTO_ORIG", "IMPORTO_RETT", "IMPORTO_NETTO") AS 
  select anno
  ,id_ente
,conto
,sum(importo_orig) importo_orig
,sum(importo_rett) importo_rett
,(sum(importo_orig) + sum(importo_rett)) importo_netto
from
(select i.anno anno
,i.id_ente
,p.CODICE_CONTO conto
,sum(nvl(i.IMPORTO_ORIGINALE,0)) importo_orig
,0 importo_rett
from cons_infragruppo i
,cons_piacee p
where i.anno = p.anno
and i.ID_CONTO = p.id
group by i.anno,i.id_ente,p.codice_conto
union
select r.anno
,r.id_ente
,p.CODICE_CONTO conto
,0 importo_orig
,sum(nvl(r.IMPORTO,0)) importo_rett
from cons_rettifiche r
,cons_piacee p
where r.anno = p.anno
and r.CODICE_CONTO = p.id
and nvl(r.flag_bilancio,'N') = 'B'
and nvl(r.bil_infra,'N') = 'I'
group by r.anno,r.id_ente,p.codice_conto)
group by anno, id_ente,conto 
order by 1,2
;
--------------------------------------------------------
--  DDL for View VW_INFRAGRUPPO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_INFRAGRUPPO" ("ANNO", "ID_ENTE", "ID_CONTO", "IMPORTO", "IMPORTO_DA_ALTRI") AS 
  select a.anno
,a.id_ente
,a.id_conto
,sum(nvl(a.importo_originale,0)) importo
,nvl((select sum(nvl(b.importo_originale,0)) 
from cons_infragruppo b 
where b.anno = a.anno and b.id_conto = a.id_conto and b.id_infra = a.id_ente),0) importo_da_altri
from cons_infragruppo a
group by anno,id_ente
,id_conto
;
--------------------------------------------------------
--  DDL for View VW_INFRA_REGIONE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_INFRA_REGIONE" ("ANNO", "ID_ENTE", "ID_CONTO", "CONTO", "CREDITORE_DEBITORE", "SALDO") AS 
  select t.anno,a.id id_ente,p.id id_conto,t.conto,t.creditore_debitore,sum(t.saldo) saldo
from cons_piacee p
,cons_anagrafica a
,gat2.t_nb_mastrini_tp t
where p.ente_societa = 'E'
and t.anno = p.anno
and t.conto = p.codice_conto
and a.id_sic = t.id_cred_deb
group by t.anno,a.id,p.id,t.conto,t.creditore_debitore
having sum(t.saldo) <> 0
;
--------------------------------------------------------
--  DDL for View VW_INFRA_TOTALE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "VW_INFRA_TOTALE" ("ANNO", "CONTO", "IMPORTO_ORIG", "IMPORTO_RETT", "IMPORTO_NETTO") AS 
  select anno
,conto
,sum(importo_orig) importo_orig
,sum(importo_rett) importo_rett
,(sum(importo_orig) + sum(importo_rett)) importo_netto
from
(select i.anno anno
,p.CODICE_CONTO conto
,sum(nvl(i.IMPORTO_ORIGINALE,0)) importo_orig
,0 importo_rett
from cons_infragruppo i
,cons_piacee p
where i.anno = p.anno
and i.ID_CONTO = p.id
group by i.anno,p.codice_conto
union
select r.anno
,p.CODICE_CONTO conto
,0 importo_orig
,sum(nvl(r.IMPORTO,0)) importo_rett
from cons_rettifiche r
,cons_piacee p
where r.anno = p.anno
and r.CODICE_CONTO = p.id
and nvl(r.flag_bilancio,'N') = 'B'
and nvl(r.bil_infra,'N') = 'I'
group by r.anno,p.codice_conto)
group by anno, conto 
order by 1,2
;
--------------------------------------------------------
--  DDL for Index FIN_T_APPLICAZIONI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_T_APPLICAZIONI_PK" ON "FIN_T_APPLICAZIONI" ("CODICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_T_MENU_PARAMETRI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_T_MENU_PARAMETRI_PK" ON "FIN_T_MENU_PARAMETRI" ("CODICE", "NOME_PARAMETRO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_0011
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_0011" ON "FIN_T_COMUNI" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_BIL_REGCONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_BIL_REGCONS_PK" ON "CONS_BIL_REGCONS" ("ANNO", "ID_CONTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_TIPI_DOC_ALLEGATI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_TIPI_DOC_ALLEGATI_PK" ON "CONS_TIPI_DOC_ALLEGATI" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CP_PK" ON "CONS_PIACEE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_0015
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_0015" ON "FIN_T_MENU_ASSOCIAZIONI" ("CODICE", "NOME_PROGRAMMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_RETTIFICHE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_RETTIFICHE_PK" ON "CONS_RETTIFICHE" ("ANNO", "ID_ENTE", "CODICE_CONTO", "PROGRESSIVO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FNDREPIMPORTI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FNDREPIMPORTI_PK" ON "FND_REPORTS_IMPORTI_MAN" ("ID_REPORT", "NOME_CAMPO_REPORT", "VALORE_PARAMETRO_ANNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_RUOLI_WEB
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_RUOLI_WEB" ON "FIN_T_MENU_RUOLI_WEB" ("CODICE", "RUOLO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_FND_USER_N1
--------------------------------------------------------

  CREATE INDEX "FIN_FND_USER_N1" ON "FND_USER" ("EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_MWPK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_MWPK" ON "FIN_T_MENU_WEB" ("CODICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_ANA_SEDI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_ANA_SEDI_PK" ON "CONS_ANA_SEDI" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_T_FILE_ESTERNI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_T_FILE_ESTERNI_PK" ON "FIN_T_FILE_ESTERNI" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 3145728 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_DOC_ALLEGATI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_DOC_ALLEGATI_PK" ON "CONS_DOC_ALLEGATI" ("ID_ENTE", "ID_DOC", "ANNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS ;
--------------------------------------------------------
--  DDL for Index CONS_ANA_DOC_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_ANA_DOC_PK" ON "CONS_ANA_DOC" ("CODICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_UK_0011
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_UK_0011" ON "FND_USER" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_ANAGRAFICA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_ANAGRAFICA_PK" ON "CONS_ANAGRAFICA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_BILANCI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_BILANCI_PK" ON "CONS_BILANCI" ("ANNO", "ID_ENTE", "CODICE_CONTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_TIPI_DOC_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_TIPI_DOC_PK" ON "CONS_TIPI_DOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS ;
--------------------------------------------------------
--  DDL for Index CONS_PIACEE_IMPORTI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_PIACEE_IMPORTI_PK" ON "CONS_PIACEE_IMPORTI" ("ANNO", "ID_ENTE", "CODICE_CONTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_UTENTI_ENTI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_UTENTI_ENTI_PK" ON "CONS_UTENTI_ENTI" ("USER_ID", "ID_ENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_BIL_CONSOLIDATO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_BIL_CONSOLIDATO_PK" ON "CONS_BIL_CONSOLIDATO" ("ANNO", "ID_CONTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FND_REPORTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FND_REPORTS_PK" ON "FND_REPORTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_0009
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_0009" ON "FIN_T_BANCHE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 720896 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_UK_0012
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_UK_0012" ON "FND_USER" ("USER_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index J_PK_REPORTS_CAT
--------------------------------------------------------

  CREATE UNIQUE INDEX "J_PK_REPORTS_CAT" ON "FND_REPORTS_CATEGORIE" ("CODICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_T_MESI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_T_MESI_PK" ON "FIN_T_MESI" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_ANA_CONTABILE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_ANA_CONTABILE_PK" ON "CONS_ANA_CONTABILE" ("ID_ANA", "ANNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_0047
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_0047" ON "FIN_T_BANCHE_TESTATA" ("ABI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_DIFF_CONSOLIDAMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_DIFF_CONSOLIDAMENTO_PK" ON "CONS_DIFF_CONSOLIDAMENTO" ("ANNO", "ID_ANA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index CONS_UTENTI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONS_UTENTI_PK" ON "CONS_UTENTI" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_T_BANCHE_TESTATA_DESCR
--------------------------------------------------------

  CREATE INDEX "FIN_T_BANCHE_TESTATA_DESCR" ON "FIN_T_BANCHE_TESTATA" ("NOME_BANCA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_PK_0016
--------------------------------------------------------

  CREATE UNIQUE INDEX "FIN_PK_0016" ON "FIN_T_MENU_PREFERITI" ("USER_ID", "CODICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Index FIN_T_BANCHE_DESCR
--------------------------------------------------------

  CREATE INDEX "FIN_T_BANCHE_DESCR" ON "FIN_T_BANCHE" ("SEDE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 2097152 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Trigger CONS_RETT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "CONS_RETT_TRG" 
              before insert on CONS_RETTIFICHE
              for each row
              begin
                  if :new.progressivo is null then
                      select seq_rett.nextval into :new.progressivo  from dual;
                 end if;
              end;
/
ALTER TRIGGER "CONS_RETT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure AGGREGA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "AGGREGA" (p_anno in number) is

	p_importo number := 0;
	p_importo1 number := 0;
	p_id_conto number := 0;
    p_id_terzi number := 0;
    p_risultato_terzi number := 0;
    p_risultato_terzi1 number := 0;




-- ***************************

	cursor sp is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

	cursor totali is 
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
    select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P';

	BEGIN

		delete cons_bil_aggregato where anno = p_anno;
			commit;

-- inserisco conti di dettaglio
		for s in sp loop
		  select nvl(sum(nvl(importo,0)),0) , 
					  nvl(sum(nvl(importo1,0)),0) into p_importo,p_importo1
					  from vw_bilanci_enti_rettificati
					  where anno = p_anno
                      and id_conto = s.id;

		insert into cons_bil_aggregato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
				values(p_anno,s.id,p_importo,p_importo1,s.codice_conto);
			commit;

		end loop;


          for a in agg loop
        insert into cons_bil_aggregato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,a.id,null,null,a.codice_conto);
			commit;
		end loop;

        for s in sub loop
        insert into cons_bil_aggregato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
        values(p_anno,s.id
        ,(select sum(nvl(x.importo,0))
            from cons_bil_aggregato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto
            and substr(y.codice_conto,1,length(s.codice_conto)+1) <> s.codice_conto||'I'
            )
        ,(select sum(nvl(x.importo1,0))
            from cons_bil_aggregato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto)
            ,s.codice_conto);
			commit;
		end loop;


--inserisco totali
        for t in totali loop
		  p_importo := totale_conto_rett_tot(p_anno,t.codice_conto);
          p_importo1 := totale_conto_rett_tot1(p_anno,t.codice_conto);

		insert into cons_bil_aggregato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
				values(p_anno,t.id,p_importo,p_importo1,t.codice_conto);
			commit;
        p_importo := 0;
        p_importo1 := 0;
		end loop;

--inserisco risultato di pertinenza di terzi
 /*begin
        select id into p_id_terzi
        from cons_piacee
        where anno = p_anno
        and codice_conto = 'EH28';
        exception when no_data_found then p_id_terzi := 0;
        end;

        select nvl(sum(nvl(importo,0)),0)
        ,nvl(sum(nvl(importo1,0)),0) 
        into p_risultato_terzi
        ,p_risultato_terzi1
        from cons_bil_aggregato
        where anno = p_anno
        and codice_conto ='PAIIIb';

        insert into cons_bil_aggregato (ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO)
        values
        (p_anno,p_id_terzi,p_risultato_terzi,p_risultato_terzi1,'EH28');

*/


	END;

/
--------------------------------------------------------
--  DDL for Procedure BDAP_CONSOLIDATO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BDAP_CONSOLIDATO" (p_anno number) as
--'899342930540086001' -- codice BDAP REGIONE

c_riga number:= 0;
link_href varchar2(2000);
p_utente varchar2(25) := 'CONS'||p_anno;
risultato_es_prec number := 0;
p_id_ente varchar2(50) := '899342930540086001';

-- ******* select STato PAtrimoniale
cursor sp is
select '<sr:'||tag_bdap||' decimals="2" contextRef="i_'||anno||'" unitRef="eur">'||LTRIM(TO_CHAR(NVL(importo,0),'9999999990.00'))||'</sr:'||tag_bdap||'>' contenuto
,'<sr:'||tag_bdap||' decimals="2" contextRef="i_'||(anno-1)||'" unitRef="eur">'||LTRIM(TO_CHAR(NVL(importo1,0),'9999999990.00'))||'</sr:'||tag_bdap||'>' contenuto1
from (SELECT
c.anno,
b.tag_bdap,
decode(b.tipo,'A',1,'P',2,3),
b.ordinamento_stampa,
sum(nvl(c.IMPORTO,0)) importo,
sum(nvl(c.IMPORTO1,0)) importo1
FROM
regbas_consolidato.CONS_BIL_CONSOLIDATO c 
,regbas_consolidato.CONS_PIACEE b
WHERE
c.anno = p_anno
and b.id = c.ID_CONTO
and b.tipo in ('A','P','CO')
and b.TAG_BDAP is not null
--and nvl(b.aggregato,'X') <> 'S'
group by
c.anno,
decode(b.tipo,'A',1,'P',2,3),
b.ordinamento_stampa,
b.TAG_BDAP
order by decode(b.tipo,'A',1,'P',2,3),
b.ordinamento_stampa);
-- **********************************

-- ******* select Conto Economico
cursor ce is 
select '<sr:'||tag_bdap||' decimals="2" contextRef="d_'||anno||'" unitRef="eur">'||LTRIM(TO_CHAR(NVL(importo,0),'9999999990.00'))||'</sr:'||tag_bdap||'>' contenuto
,'<sr:'||tag_bdap||' decimals="2" contextRef="d_'||(anno-1)||'" unitRef="eur">'||LTRIM(TO_CHAR(NVL(importo1,0),'9999999990.00'))||'</sr:'||tag_bdap||'>' contenuto1
from (SELECT
c.anno,
b.tag_bdap,
b.ordinamento_stampa,
sum(nvl(c.IMPORTO,0)) importo,
sum(nvl(c.IMPORTO1,0)) importo1
FROM
regbas_consolidato.CONS_BIL_CONSOLIDATO c 
,regbas_consolidato.CONS_PIACEE b
WHERE
c.anno = p_anno
and b.id = c.ID_CONTO
and b.tipo = 'E'
and b.TAG_BDAP is not null
group by
c.anno,
b.ordinamento_stampa,
b.TAG_BDAP
order by b.ordinamento_stampa);
-- ************************************

-- *********** FINE CURSORI




begin
 delete fin_t_bdap where anno = p_anno and utente = p_utente and substr(tipo_trasmissione,1,4) = 'CONS';
  commit;

insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',010,'<?xml version="1.0" encoding="UTF-8"?>');

-- anche gli ENTI STRUMENTALI seguono gli schemi REGIONE
 -- if p_id_ente='899342930540086001' --REGIONE
 --  then 
--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',020,'  <xbrli:xbrl xmlns:sre="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/regioni/2016-10-18" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:num="http://www.xbrl.org/dtr/type/numeric" xmlns:sr="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/2016-10-18" xmlns:common="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/common/2016-10-18" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:xlink="http://www.w3.org/1999/xlink">');
--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',030,'   <link:schemaRef xlink:type="simple" xlink:href="bdap-sdb-cons_2016-10-18.xsd"/>');

--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',020,'  <xbrli:xbrl xmlns:sre="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/regioni/2017-09-29" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:num="http://www.xbrl.org/dtr/type/numeric" xmlns:sr="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/2017-09-29" xmlns:common="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/common/2017-09-29" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:xlink="http://www.w3.org/1999/xlink">');
--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',030,'   <link:schemaRef xlink:type="simple" xlink:href="bdap-sdb-cons_2017-09-29.xsd"/>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',020,'  <xbrli:xbrl xmlns:sre="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/regioni/2019-12-16" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:num="http://www.xbrl.org/dtr/type/numeric" xmlns:sr="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/2019-12-16" xmlns:common="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/common/2019-12-16" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:xlink="http://www.w3.org/1999/xlink">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',030,'   <link:schemaRef xlink:type="simple" xlink:href="bdap-sdb-cons_2019-12-16.xsd"/>');


 -- else 
--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',020,'  <xbrli:xbrl xmlns:sre="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/enti/2016-10-18" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:num="http://www.xbrl.org/dtr/type/numeric" xmlns:sr="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/2016-10-18" xmlns:common="http://www.rgs.mef.gov.it/xbrl/bdap/sdb/rend/common/2016-10-18" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:xlink="http://www.w3.org/1999/xlink">');
--insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',030,'   <link:schemaRef xlink:type="simple" xlink:href="bdap-sdb-rend-enti_2016-10-18.xsd"/>');
 -- end if;

insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',040,'   <xbrli:context id="d_'||p_anno||'">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',050,'     <xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',060,'       <xbrli:identifier scheme="http://www.rgs.mef.gov.it/xbrl/idente/codicebdap">'||p_id_ente||'</xbrli:identifier>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',070,'     </xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',080,'     <xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',090,'       <xbrli:startDate>'||p_anno||'-01-01</xbrli:startDate>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',100,'       <xbrli:endDate>'||p_anno||'-12-31</xbrli:endDate>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',110,'     </xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',120,'   </xbrli:context>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',130,'   <xbrli:context id="i_'||p_anno||'">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',140,'     <xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',150,'       <xbrli:identifier scheme="http://www.rgs.mef.gov.it/xbrl/idente/codicebdap">'||p_id_ente||'</xbrli:identifier>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',160,'     </xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',170,'     <xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',180,'       <xbrli:instant>'||p_anno||'-12-31</xbrli:instant>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',190,'     </xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',200,'   </xbrli:context>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',210,'  <xbrli:context id="i_'||p_anno||'ape">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',220,'    <xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',230,'      <xbrli:identifier scheme="http://www.rgs.mef.gov.it/xbrl/idente/codicebdap">'||p_id_ente||'</xbrli:identifier>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',240,'    </xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',250,'    <xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',260,'      <xbrli:instant>'||p_anno||'-12-31</xbrli:instant>');--30/04/2021 G.ZACCARO INSERITO 12-31 
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',270,'    </xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',280,'  </xbrli:context>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',290,'  <xbrli:unit id="eur">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',300,'    <xbrli:measure>iso4217:EUR</xbrli:measure>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',310,'  </xbrli:unit>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',320,'  <xbrli:unit id="pure">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',330,'    <xbrli:measure>xbrli:pure</xbrli:measure>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',340,'  </xbrli:unit>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',345,'   <xbrli:context id="d_'||(p_anno-1)||'">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',350,'     <xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',360,'       <xbrli:identifier scheme="http://www.rgs.mef.gov.it/xbrl/idente/codicebdap">'||p_id_ente||'</xbrli:identifier>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',370,'     </xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',380,'     <xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',390,'       <xbrli:startDate>'||(p_anno-1)||'-01-01</xbrli:startDate>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',400,'       <xbrli:endDate>'||(p_anno-1)||'-12-31</xbrli:endDate>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',410,'     </xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',420,'   </xbrli:context>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',430,'   <xbrli:context id="i_'||(p_anno-1)||'">');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',440,'     <xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',450,'       <xbrli:identifier scheme="http://www.rgs.mef.gov.it/xbrl/idente/codicebdap">'||p_id_ente||'</xbrli:identifier>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',460,'     </xbrli:entity>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',470,'     <xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',480,'       <xbrli:instant>'||(p_anno-1)||'-12-31</xbrli:instant>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',490,'     </xbrli:period>');
insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',500,'   </xbrli:context>');
-- SDB

-- setto valore riga
c_riga := 600;

-- determino (se presente) risultato esercizio anno precedente
    select nvl(sum(nvl(importo,0)),0)
    into risultato_es_prec
    from regbas_consolidato.CONS_BIL_CONSOLIDATO
    where anno = p_anno-1
    and CODICE_CONTO = 'EG27';

-- ************ CE + SP ***************
--Genera_Economica.piacee_importi(p_anno,99999);
-- ************ DATI CE ***************

for c in ce loop

  insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','M',c_riga,c.contenuto);

  c_riga := c_riga + 1;

  if nvl(risultato_es_prec,0) <> 0
    then 
    insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','M',c_riga,c.contenuto1);
    c_riga := c_riga + 1;
  end if;

end loop;
  commit;

-- *********** FINE CE *************

-- ************ DATI SP ***************

for c in sp loop

  insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','M',c_riga,c.contenuto);

  c_riga := c_riga + 1;

  if risultato_es_prec <> 0
    then 
    insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','M',c_riga,c.contenuto1);
    c_riga := c_riga + 1;
  end if;

end loop;
  commit;

-- *********** FINE SP *************

-- ******* Chiusura FILE XBLR ******
 insert into fin_t_bdap(UTENTE,DATA_CREAZIONE,ANNO,TIPO_TRASMISSIONE,EU,RIGA,CONTENUTO) values (p_utente,sysdate,p_anno,'CONSSDB','T',c_riga,'</xbrli:xbrl>');
   commit;
-- *********************************
END;

/
--------------------------------------------------------
--  DDL for Procedure CARICA_BIL_ENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CARICA_BIL_ENTE" (p_anno in number, p_ente in number) is
	verifica_anno varchar2(1);
    verifica_ente varchar2(1);

begin
    begin
        select nvl(attivo,'N') into verifica_anno
        from cons_dati_generali
        where anno = p_anno
        and data_f_carica is null;
       exception when no_data_found then verifica_anno := 'N';
    end;

if verifica_anno = 'S'
 then
    begin
        select nvl(utilizzo_sic,'N') into verifica_ente
        from cons_anagrafica
        where id = p_ente;
       exception when no_data_found then verifica_ente := 'N';
    end;
    if verifica_ente = 'N'
    then return;
    end if;
-- carico il bilancio dell'Ente p_ente dalla vista VW_All11_ENTI in	CONS_BILANCI
delete cons_bilanci where id_ente = p_ente and anno = p_anno;
commit;
delete cons_piacee_importi where id_ente = p_ente and anno = p_anno;
commit;

insert into CONS_BILANCI(anno,id_ente,codice_conto,importo,data_caricamento)
	select anno,id_ente,codice_conto,importo,sysdate
	from VW_All11_ENTI
	where anno = p_anno
	and id_ente = p_ente;
commit;

-- carico il bilancio dell'Ente p_ente dalla vista in CONS_PIACEE_IMPORTI
delete cons_piacee_importi  where ANNO= P_ANNO and ID_ENTE=P_ENTE;
commit;

insert into cons_piacee_importi
  (ANNO,ID_ENTE,CODICE_CONTO,IMPORTO,IMPORTO1)
select P_ANNO,P_ENTE,p.id,b.IMPORTO,b.IMPORTO1
 from cons_piacee p,cons_anagrafica a,cons_bilanci b
 where a.id=P_ENTE and
       p.anno=P_ANNO and
       p.ente_societa=a.tipo and
       b.ANNO(+)=p.anno and
       B.CODICE_CONTO(+)=p.CODICE_CONTO and
       b.ID_ENTE(+)=P_ENTE;
commit;

end if;

end;

/
--------------------------------------------------------
--  DDL for Procedure CARICA_INFRAGRUPPO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CARICA_INFRAGRUPPO" (p_anno in number, p_ente in number) is
--************************
--****** ATTENZIONE ******
-- per il momento va usata solo con p_ente = 1 (Regione) per caricare le infra regione
-- ********************************

	verifica_infra number := 0;

begin

    select count(*) into verifica_infra
    from cons_infragruppo
    where anno = p_anno
    and id_ente = p_ente;

    if verifica_infra = 0
     then
            insert into cons_infragruppo(anno,id_ente,id_infra,id_conto,importo_originale)
               select p_anno, p_ente,a.id, p.id,nvl(sum(nvl(t.saldo,0)),0) importo
            from gat2.t_nb_mastrini_tp t
            ,cons_anagrafica a
            ,cons_ana_contabile c
            ,cons_piacee p
            where to_char(t.data_registrazione,'yyyy') = p_anno
            and t.id_cred_deb = a.id_sic
            and t.conto <> 'ACIV1a'
            and p.anno = p_anno
            and p.codice_conto = t.conto
            and p.ente_societa = 'E'
            and c.id_ana = a.id
            and c.anno = p_anno
            and nvl(c.gap_sn,'N') = 'S'
            group by p_anno,p_ente,a.id,p.id 
            having nvl(sum(nvl(saldo,0)),0) > 0;  
    commit;
    end if;

end;

/
--------------------------------------------------------
--  DDL for Procedure CONSOLIDA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CONSOLIDA" (p_anno in number) is
    p_importo number := 0;
	p_importo1 number := 0;
	p_id_conto number := 0;
    p_rettifica number := 0;
    p_risultato_terzi number := 0;
    p_risultato_terzi1 number := 0;
    p_id_terzi number := 0;
    p_codice_conto varchar2(100);
-- ***************************

	cursor sp is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

    cursor totali is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
	select id
    ,tipo
	,codice_conto
    ,classe
    ,s_classe
    ,voce
    ,s_voce
    ,dettaglio
    ,tag_bdap
    ,codice_raccordo
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P'
    and codice_conto <> 'EH28'; --non prendo il risultato di pertinenza di terzi

   anno_aperto number := 0;


	BEGIN
    
    select count(*) into anno_aperto
    from cons_dati_generali
    where anno = p_anno
    and nvl(attivo,'N') = 'S'
    and data_f_consolida is null;
    
    if anno_aperto > 0
    then

		delete cons_bil_consolidato where anno = p_anno;
			commit;
        ELIDI (p_anno);

		for s in sp loop
        begin
		  select nvl(importo,0)
          into p_importo
            from cons_bil_nettizzato
            where anno = p_anno
            and id_conto = s.id;
            exception when no_data_found then p_importo:= 0;
        end;
        select nvl(sum(nvl(importo,0)),0) into p_rettifica
        from cons_rettifiche
        where anno = p_anno
        and codice_conto = s.id
        and nvl(flag_bilancio,'X') = 'C';

        p_importo := p_importo + p_rettifica;

        if s.dettaglio is not null
            then p_codice_conto := s.dettaglio;
            else p_codice_conto := s.codice_conto;
        end if;

        begin
            select nvl(x.importo,0) into p_importo1
            from cons_bil_consolidato x
            where x.anno = p_anno - 1 
            and x.codice_conto = p_codice_conto;
         exception when no_data_found then p_importo1 := 0;
        end;


			insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,s.id,p_importo,p_importo1,s.codice_conto);
			commit;
        p_importo :=0;
        p_rettifica := 0;
		end loop;

        for a in agg loop
         if (a.tag_bdap is not null or a.codice_raccordo = 'S')
         then
        select nvl(sum(nvl(c.importo,0)),0),nvl(sum(nvl(c.importo1,0)),0)
        into p_importo,p_importo1
            from cons_bil_consolidato c
            ,cons_piacee p
            where 
            p.anno = p_anno
            and p.tipo = a.tipo
            and p.classe = a.classe
            and nvl(p.s_classe,0) = nvl(a.s_classe,nvl(p.s_classe,0))
            and nvl(p.voce,0) = nvl(a.voce,nvl(p.voce,0))
            and p.ente_societa = 'E'
            and nvl(aggregato,'X') <> 'S'
            and (p.s_voce is not null or p.dettaglio is not null)
            and c.anno = p.anno
            and c.id_conto = p.id;
            else p_importo := null;p_importo1 := null;
           end if;
          
        insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,a.id,p_importo,p_importo1,a.codice_conto); --p_importo,p_importo1
			commit;
		end loop;

        for s in sub loop
        insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
        values(p_anno,s.id
        ,(select sum(nvl(x.importo,0))
            from cons_bil_consolidato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto
            and substr(y.codice_conto,1,length(s.codice_conto)+1) <> s.codice_conto||'I'
            )
        ,(select sum(nvl(x.importo1,0))
            from cons_bil_consolidato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto)
            ,s.codice_conto);
			commit;
		end loop;


        for t in totali loop

        select nvl(sum(nvl(importo,0)),0) into p_rettifica
        from cons_rettifiche
        where anno = p_anno
        and codice_conto = t.id
        and nvl(flag_bilancio,'X') = 'C';

         if t.dettaglio is not null
            then p_codice_conto := t.dettaglio;
            else p_codice_conto := t.codice_conto;
        end if;

        begin
            select nvl(x.importo,0) into p_importo1
            from cons_bil_consolidato x
            where x.anno = p_anno - 1 
            and x.codice_conto = p_codice_conto;
         exception when no_data_found then p_importo1 := 0;
        end;

		insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
		values(p_anno,t.id,totale_conto_consolidato(p_anno,t.codice_conto) + p_rettifica,totale_conto_consolidato(p_anno-1,t.codice_conto),t.codice_conto); --p_importo1
			commit;

        end loop;


        /*update cons_bil_consolidato c set c.importo1 = 
            (select x.importo
                from cons_bil_consolidato x
                where x.anno = c.anno-1
                and x.codice_conto = c.codice_conto)
        where c.anno = p_anno;
        commit;
        */
        begin
        select id into p_id_terzi
        from cons_piacee
        where anno = p_anno
        and codice_conto = 'EH28';
        exception when no_data_found then p_id_terzi := 0;
        end;

        select nvl(sum(nvl(importo,0)),0)
        ,nvl(sum(nvl(importo1,0)),0) 
        into p_risultato_terzi
        ,p_risultato_terzi1
        from cons_bil_consolidato
        where anno = p_anno
        and codice_conto = 'PAIIIc';

        insert into cons_bil_consolidato (ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO)
        values
        (p_anno,p_id_terzi,p_risultato_terzi,p_risultato_terzi1,'EH28');
    
    end if;
    
	END;

/
--------------------------------------------------------
--  DDL for Procedure CONSOLIDA_NEW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CONSOLIDA_NEW" (p_anno in number) is

	p_importo number := 0;
	p_importo1 number := 0;
	p_id_conto number := 0;
    p_rettifica number := 0;
    p_risultato_terzi number := 0;
    p_risultato_terzi1 number := 0;
    p_id_terzi number := 0;
    p_codice_conto varchar2(100);
-- ***************************

	cursor sp is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

    cursor totali is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P'
    and codice_conto <> 'EH28'; --non prendo il risultato di pertinenza di terzi

anno_aperto number := 0;


	BEGIN
    
    select count(*) into anno_aperto
    from cons_dati_generali
    where anno = p_anno
    and nvl(attivo,'N') = 'S'
    and data_f_consolida is null;
    
    if anno_aperto > 0
    then
		delete cons_bil_consolidato where anno = p_anno;
			commit;
        ELIDI (p_anno);

		for s in sp loop
        begin
		  select nvl(importo,0)
          into p_importo
            from cons_bil_nettizzato
            where anno = p_anno
            and id_conto = s.id;
            exception when no_data_found then p_importo:= 0;
        end;
        select nvl(sum(nvl(importo,0)),0) into p_rettifica
        from cons_rettifiche
        where anno = p_anno
        and codice_conto = s.id
        and nvl(flag_bilancio,'X') = 'C';

        p_importo := p_importo + p_rettifica;

        if s.dettaglio is not null
            then p_codice_conto := s.dettaglio;
            else p_codice_conto := s.codice_conto;
        end if;

        begin
            select nvl(x.importo,0) into p_importo1
            from cons_bil_consolidato x
            where x.anno = p_anno - 1 
            and x.codice_conto = p_codice_conto;
         exception when no_data_found then p_importo1 := 0;
        end;


			insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,s.id,p_importo,p_importo1,s.codice_conto);
			commit;
        p_importo :=0;
        p_rettifica := 0;
		end loop;

        for a in agg loop
        insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,a.id,null,null,a.codice_conto);
			commit;
		end loop;

        for s in sub loop
        insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
        values(p_anno,s.id
        ,(select sum(nvl(x.importo,0))
            from cons_bil_consolidato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto
            and substr(y.codice_conto,1,length(s.codice_conto)+1) <> s.codice_conto||'I'
            )
        ,(select sum(nvl(x.importo1,0))
            from cons_bil_consolidato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto)
            ,s.codice_conto);
			commit;
		end loop;


        for t in totali loop

        select nvl(sum(nvl(importo,0)),0) into p_rettifica
        from cons_rettifiche
        where anno = p_anno
        and codice_conto = t.id
        and nvl(flag_bilancio,'X') = 'C';

         if t.dettaglio is not null
            then p_codice_conto := t.dettaglio;
            else p_codice_conto := t.codice_conto;
        end if;

        begin
            select nvl(x.importo,0) into p_importo1
            from cons_bil_consolidato x
            where x.anno = p_anno - 1 
            and x.codice_conto = p_codice_conto;
         exception when no_data_found then p_importo1 := 0;
        end;

		insert into cons_bil_consolidato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
		values(p_anno,t.id,totale_conto_consolidato(p_anno,t.codice_conto) + p_rettifica,p_importo1,t.codice_conto);
			commit;

        end loop;


        /*update cons_bil_consolidato c set c.importo1 = 
            (select x.importo
                from cons_bil_consolidato x
                where x.anno = c.anno-1
                and x.codice_conto = c.codice_conto)
        where c.anno = p_anno;
        commit;
        */
        begin
        select id into p_id_terzi
        from cons_piacee
        where anno = p_anno
        and codice_conto = 'EH28';
        exception when no_data_found then p_id_terzi := 0;
        end;

        select nvl(sum(nvl(importo,0)),0)
        ,nvl(sum(nvl(importo1,0)),0) 
        into p_risultato_terzi
        ,p_risultato_terzi1
        from cons_bil_consolidato
        where anno = p_anno
        and codice_conto = 'PAIIIc';

        insert into cons_bil_consolidato (ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO)
        values
        (p_anno,p_id_terzi,p_risultato_terzi,p_risultato_terzi1,'EH28');
   end if;
 END;

/
--------------------------------------------------------
--  DDL for Procedure CONSOLIDA_REGCONS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CONSOLIDA_REGCONS" (p_anno in number) is

	p_importo number := 0;
	p_importo1 number := 0;
	p_id_conto number := 0;
    p_rettifica number := 0;

-- ***************************
	cursor sp is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

    cursor totali is
	select id
	,codice_conto
    ,conto_prec dettaglio
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
	select id
    ,tipo
	,codice_conto
    ,classe
    ,s_classe
    ,voce
    ,s_voce
    ,dettaglio
    ,tag_bdap
    ,codice_raccordo
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P'
    and codice_conto <> 'EH28'; --non prendo il risultato di pertinenza di terzi

/*
 cursor sp is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

    cursor totali is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P';

*/


	BEGIN

		delete cons_bil_regcons where anno = p_anno;
			commit;
   

		for s in sp loop
        begin
		  select nvl(importo,0)
          into p_importo
            from vw_bilanci_enti
            where anno = p_anno
            and id_conto = s.id
            and id_ente = 1;
            exception when no_data_found then p_importo:= 0;
        end;


			insert into cons_bil_regcons (ANNO,ID_CONTO,IMPORTO,CODICE_CONTO)
            values(p_anno,s.id,p_importo,s.codice_conto);
			commit;
        p_importo :=0;
     end loop;

        for a in agg loop
          if (a.tag_bdap is not null or a.codice_raccordo = 'S')
         then
        select nvl(sum(nvl(c.importo,0)),0),nvl(sum(nvl(c.importo1,0)),0)
        into p_importo,p_importo1
            from cons_bil_regcons c
            ,cons_piacee p
            where 
            p.anno = p_anno
            and p.tipo = a.tipo
            and p.classe = a.classe
            and nvl(p.s_classe,0) = nvl(a.s_classe,nvl(p.s_classe,0))
            and nvl(p.voce,0) = nvl(a.voce,nvl(p.voce,0))
            and p.ente_societa = 'E'
            and nvl(aggregato,'X') <> 'S'
            and (p.s_voce is not null or p.dettaglio is not null)
            and c.anno = p.anno
            and c.id_conto = p.id;
            else p_importo := null;p_importo1 := null;
           end if;
        
        insert into cons_bil_regcons (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,a.id,p_importo,p_importo1,a.codice_conto);
			commit;
		end loop;

        for s in sub loop
        insert into cons_bil_regcons (ANNO,ID_CONTO,IMPORTO,CODICE_CONTO)
        values(p_anno,s.id
        ,(select sum(nvl(x.importo,0))
            from cons_bil_regcons x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto
            and substr(y.codice_conto,1,length(s.codice_conto)+1) <> s.codice_conto||'I'
            )
           ,s.codice_conto);
			commit;
		end loop;


        for t in totali loop


		insert into cons_bil_regcons (ANNO,ID_CONTO,IMPORTO,CODICE_CONTO)
		values(p_anno,t.id,totale_conto_bilancio(p_anno,t.codice_conto,1),t.codice_conto);
			commit;

        end loop;
        update cons_bil_regcons c set c.importo1 = 
            (select x.importo
                from cons_bil_regcons x
                where x.anno = c.anno-1
                and x.codice_conto = c.codice_conto)
        where c.anno = p_anno;
        commit;

	END;

/
--------------------------------------------------------
--  DDL for Procedure CREA_TAB_NOTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CREA_TAB_NOTA" (p_anno number) is

	verifica_totale number := 0;

	begin

	-- tabelle dettagli
	--EA

	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EAT';

	if verifica_totale > 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EA';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select 
	c.anno
	,'EA'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EA1','EA2','EA3','EA4','EA5','EA6','EA7','EA8','EAT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
	commit;
	end if;

	--EB
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EBT';

	if verifica_totale > 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EB';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EB'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EB9',
	'EB10',
	'EB11',
	'EB12',
	'EB13',
	'EB14',
	'EB15',
	'EB16',
	'EB17',
	'EB18',
	'EBT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
	commit;
	end if;

	--EC
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'ECT';

	if verifica_totale <> 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EC';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'ECT1'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EC19',
	'EC20',
	'ECT1')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'ECT2'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EC21a',
	'EC21',
	'ECT2')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,null percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto = 'ECT'
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	end if;
    commit;

	--ED
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EDT';

	if verifica_totale <> 0
	then
    delete nota_tab_dettagli where anno = p_anno and tipo = 'ED';
	commit;
    
	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'ED'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('ED22',
	'ED23',
	'EDT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
    end if;
    commit;

	--EE
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EET';

	if verifica_totale <> 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EE';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'EET1'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'EE24a',
	'EE24b',
	'EE24c',
	'EE24d',
	'EE24e')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'EET2'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'EE25a',
	'EE25b',
	'EE25c',
	'EE25d')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,null percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto = 'EET'
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	end if;
    commit;

	--SP
	delete nota_tab_dettagli where anno = p_anno and tipo = 'SP';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'SP'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'AT'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'AAT',
    'ABIT',
    'ABIIIT',
    'ABIVT',
    'ABT',
    'ACIT',
    'ACIIT',
    'ACIIIT',
    'ACIVT',
    'ACT',
    'ADT',
    'AT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'SP'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'PT'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'PAT',
    'PBT',
    'PCT',
    'PDT',
    'PET',
    'PT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	commit;
    
-- **** popolo la NOTE_TAB_AGGREGATI ******
 delete nota_tab_aggregati where anno = p_anno;
 commit;
 
 -- inserisco dati Economici
 insert into nota_tab_aggregati(ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO)
 select p.anno anno
,'E' tipo
,p.codice_conto 
,decode(replace(upper(p.descrizione),'TOTALE ')
,'(E) (E20-E21)','PROVENTI E ONERI STRAORDINARI (E)',replace(upper(p.descrizione),'TOTALE ')) descrizione
,r.IMPORTO imp_controllante
,c.importo imp_consolidato
,(c.IMPORTO - r.importo) imp_differenza
,p.ORDINAMENTO_STAMPA ordinamento
from
cons_piacee p
,cons_bil_consolidato c
,vw_bilanci_enti_nett_tot r -- vw_bilanci_enti_rett_tot r
where p.anno = p_anno
and p.codice_conto in ('EAT',
'EBT',
'EAB',
'ECT',
'EDT',
'EET',
'EF26',
'EG27')
and r.anno = p.anno
and r.codice_conto = p.codice_conto
and r.id_ente = 1
and c.anno = p.anno
and c.codice_conto = p.codice_conto
order by p.ORDINAMENTO_STAMPA;

commit;

-- inserisco dati patrimoniali
insert into nota_tab_aggregati(ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO)
select p.anno anno
,'P' tipo
,p.codice_conto 
,upper(p.descrizione) descrizione
,r.IMPORTO imp_controllante
,c.importo imp_consolidato
,(c.IMPORTO - r.importo) imp_differenza
,p.ORDINAMENTO_STAMPA ordinamento
from
cons_piacee p
,cons_bil_consolidato c
,vw_bilanci_enti_nett_tot r --vw_bilanci_enti_rett_tot r
where p.anno = p_anno
and p.codice_conto in ('AAT',
'ABIT',
'ABIIIT',
'ABIVT',
'ABT',
'ACIT',
'ACIIT',
'ACIIIT',
'ACIVT',
'ACT',
'ADT',
'AT',
'PAT',
'PBT',
'PCT',
'PDT',
'PET',
'PT')
and r.anno = p.anno
and r.codice_conto = p.codice_conto
and r.id_ente = 1
and c.anno = p.anno
and c.codice_conto = p.codice_conto
order by p.ORDINAMENTO_STAMPA;


End;

/
--------------------------------------------------------
--  DDL for Procedure CREA_TAB_REVISORI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CREA_TAB_REVISORI" (p_anno number) is

	verifica_totale number := 0;

	begin

	-- tabelle dettagli
	--EA
/*
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EAT';

	if verifica_totale > 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EA';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select 
	c.anno
	,'EA'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EA1','EA2','EA3','EA4','EA5','EA6','EA7','EA8','EAT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
	commit;
	end if;

	--EB
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EBT';

	if verifica_totale > 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EB';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EB'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EB9',
	'EB10',
	'EB11',
	'EB12',
	'EB13',
	'EB14',
	'EB15',
	'EB16',
	'EB17',
	'EB18',
	'EBT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
	commit;
	end if;

	--EC
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'ECT';

	if verifica_totale <> 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EC';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'ECT1'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EC19',
	'EC20',
	'ECT1')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'ECT2'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('EC21a',
	'EC21',
	'ECT2')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EC'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,null percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto = 'ECT'
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	end if;
    commit;

	--ED
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EDT';

	if verifica_totale <> 0
	then
    delete nota_tab_dettagli where anno = p_anno and tipo = 'ED';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'ED'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/verifica_totale,2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in ('ED22',
	'ED23',
	'EDT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by p.ORDINAMENTO_STAMPA;
    end if;
    commit;

	--EE
	select nvl(sum(nvl(x.importo,0)),0) into verifica_totale
	from vw_bilancio_consolidato x 
	where x.anno = p_anno 
	and x.CODICE_CONTO = 'EET';

	if verifica_totale <> 0
	then
	delete nota_tab_dettagli where anno = p_anno and tipo = 'EE';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'EET1'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'EE24a',
	'EE24b',
	'EE24c',
	'EE24d',
	'EE24e')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'EET2'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'EE25a',
	'EE25b',
	'EE25c',
	'EE25d')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'EE'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,null percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto = 'EET'
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	end if;
    commit;

	--SP
	delete nota_tab_dettagli where anno = p_anno and tipo = 'SP';
	commit;

	insert into nota_tab_dettagli(
	ANNO
	,TIPO
	,CODICE
	,DESCRIZIONE
	,IMPORTO
	,PERCENTUALE
	,ORDINAMENTO)
	select c.anno
	,'SP'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'AT'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'AAT',
    'ABIT',
    'ABIIIT',
    'ABIVT',
    'ABT',
    'ACIT',
    'ACIIT',
    'ACIIIT',
    'ACIVT',
    'ACT',
    'ADT',
    'AT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	UNION
	select c.anno
	,'SP'
	,c.codice_conto
	,c.descrizione
	,nvl(c.importo,0) importo
	,round(nvl(c.importo,0)*100/(select x.importo from vw_bilancio_consolidato x where x.anno = c.anno and x.CODICE_CONTO = 'PT'),2) percentuale
	,p.ORDINAMENTO_STAMPA
	from vw_bilancio_consolidato c
	,cons_piacee p
	where c.anno = p_anno
	and c.codice_conto in (
	'PAT',
    'PBT',
    'PCT',
    'PDT',
    'PET',
    'PT')
	and p.anno = c.anno
	and p.CODICE_CONTO = c.CODICE_CONTO
	and p.ENTE_SOCIETA = 'E'
	order by 7;
	commit;
*/    
-- **** popolo la rev_TAB_AGGREGATI ******
 delete rev_tab_aggregati where anno = p_anno;
 commit;

 -- inserisco dati Economici
 insert into rev_tab_aggregati(ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO)
 select p.anno anno
,'E' tipo
,p.codice_conto 
,decode(replace(upper(p.descrizione),'TOTALE ')
,'(E) (E20-E21)','PROVENTI E ONERI STRAORDINARI (E)',replace(upper(p.descrizione),'TOTALE ')) descrizione
,r.IMPORTO imp_controllante
,c.importo imp_consolidato
,(c.IMPORTO - r.importo) imp_differenza
,p.ORDINAMENTO_STAMPA ordinamento
from
cons_piacee p
,cons_bil_regcons c
,vw_bilanci_enti_nett_tot r -- vw_bilanci_enti_rett_tot r
where p.anno = p_anno
and p.codice_conto in ('EAT',
'EBT',
'EAB',
'ECT',
'EDT',
'EET',
'EF26',
'EG27')
and r.anno = p.anno
and r.codice_conto = p.codice_conto
and r.id_ente = 1
and c.anno = p.anno
and c.codice_conto = p.codice_conto
order by p.ORDINAMENTO_STAMPA;

commit;

-- inserisco dati patrimoniali
insert into rev_tab_aggregati(ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO)
select p.anno anno
,'P' tipo
,p.codice_conto 
,upper(p.descrizione) descrizione
,r.IMPORTO imp_controllante
,c.importo imp_consolidato
,(c.IMPORTO - r.importo) imp_differenza
,p.ORDINAMENTO_STAMPA ordinamento
from
cons_piacee p
,cons_bil_regcons c
,vw_bilanci_enti_nett_tot r --vw_bilanci_enti_rett_tot r
where p.anno = p_anno
and p.codice_conto in ('AAT',
'ABIT',
'ABIIIT',
'ABIVT',
'ABT',
'ACIT',
'ACIIT',
'ACIIIT',
'ACIVT',
'ACT',
'ADT',
'AT',
'PAT',
'PBT',
'PCT',
'PDT',
'PET',
'PT')
and r.anno = p.anno
and r.codice_conto = p.codice_conto
and r.id_ente = 1
and c.anno = p.anno
and c.codice_conto = p.codice_conto
order by p.ORDINAMENTO_STAMPA;


End;

/
--------------------------------------------------------
--  DDL for Procedure DIFFERENZE_CONSOLIDAMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "DIFFERENZE_CONSOLIDAMENTO" (p_anno in number, p_id_conto number,p_id_ente number) is 

--p_id_conto rappresenta l'ID del conto utilizzato per compensare le differenze di consolidamento (es. AVVIAMENTO)
	
	ord_riga number := 0;
    conto_diff VARCHAR2(100);

    verifica_conto_diff number := 0;

    codice_ABIV1a number := 0; -- imprese controllate
    codice_ABIV1b number := 0; -- imprese partecipate
    codice_utilizzato number := 0; -- contiene il valore del codice conto ABIV1a se trattasi di imprese controllate o di ABIVab se imprese partecipate
    desc_cod_utilizzato varchar2(100); -- contiene la descrizione del codice conto ABIV1a se trattasi di imprese controllate o di ABIVab se imprese partecipate

    denominazione varchar2(200);
    imp_partecipazione number := 0;
    perc_partecipazione number := 0;
    diff_consolidamento number := 0;

    totale_rettifica number := 0;
    
    importo_rettifica_pn number := 0;
    id_conto_pn number := 0;


	-- cursore quote di partecipazione
    -- elimino il cursore in quanto l'elisione del PAtrimonio Netto la facciamo complessivamente sul conto PAIIa Risultato economico esercizi precedenti
	/*
    cursor quote is
	select b.id_conto,b.CODICE_CONTO,b.DESCRIZIONE desc_conto,b.importo
	from cons_ana_contabile c
	,vw_bilanci_enti_nettizzati b
	where c.ANNO = p_anno
	and nvl(c.QUOTA_PARTECIPAZIONE,0) > 0
	and nvl(c.PERC_PARTECIPAZIONE,0) > 0
	and c.ID_ANA= p_id_ente
	and b.ID_ENTE =c.ID_ANA
	and b.ANNO = p_anno
	and b.CODICE_CONTO in ('PAI','PAIIa','PAIIb','PAIIc','PAIId','PAIIe')
    and nvl(b.importo,0) <> 0
	order by 2,3;
 */
begin

  begin
	select d.DENOMINAZIONE,d.QUOTA_PARTECIP,d.PERC_PARTECIP,d.diff_consolidamento
	into denominazione,imp_partecipazione,perc_partecipazione,diff_consolidamento
	from cons_diff_consolidamento d
	where d.ANNO = p_anno
	and d.ID_ANA = p_id_ente;
	exception when no_data_found then imp_partecipazione := 0; perc_partecipazione := 0; diff_consolidamento := 0;
  end;


    select nvl(sum(nvl(importo,0)),0) into verifica_conto_diff
    from cons_rettifiche
    where anno = p_anno
    and id_ente = p_id_ente
    and upper(substr(note,1,2)) = 'DC';

   begin
    select id into codice_ABIV1a
    from cons_piacee
    where anno = p_anno
    and codice_conto = 'ABIV1a';
    exception when no_data_found then codice_ABIV1a := 0;
   end;

   begin
    select id into codice_ABIV1b
    from cons_piacee
    where anno = p_anno
    and codice_conto = 'ABIV1b';
    exception when no_data_found then codice_ABIV1b := 0;
   end;
	-- inserisco le rettifiche di dettaglio per l'Ente/azienda p_id_ente

	if imp_partecipazione <> 0 and verifica_conto_diff = 0
	then	
		if nvl(perc_partecipazione,0) > 50
			then codice_utilizzato := codice_ABIV1a;
				 desc_cod_utilizzato := 'ABIV1a - Imprese controllate';
			else codice_utilizzato := codice_ABIV1b;
				 desc_cod_utilizzato := 'ABIV1b - Imprese partecipate';
		end if;

		select seq_rett.nextval into ord_riga
	 	from dual;

		insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,p_id_ente
	 			,codice_utilizzato
	 			,ord_riga
	 			,'C'
	 			,- imp_partecipazione
	 			,'DC - Rettifica per elisione PARTECIPAZIONE di '||DENOMINAZIONE||' su '||desc_cod_utilizzato
	 		);

 select sum(importo)  into importo_rettifica_pn
  FROM
  (
    select sum(b.importo) importo --into importo_rettifica_pn
	from cons_ana_contabile c
	,vw_bilanci_enti_nettizzati b
	where c.ANNO = p_anno
	and nvl(c.QUOTA_PARTECIPAZIONE,0) > 0
	and nvl(c.PERC_PARTECIPAZIONE,0) > 0
	and c.ID_ANA= p_id_ente
	and b.ID_ENTE =c.ID_ANA
	and b.ANNO = p_anno
	and b.CODICE_CONTO in ('PAI','PAIIa','PAIIb','PAIIc','PAIId','PAIIe')
    and nvl(b.importo,0) <> 0
    UNION
    select totale_conto_netto(c.anno,b.CODICE_CONTO,p_id_ente) importo --into importo_rettifica_pn
	from cons_ana_contabile c
	,vw_bilanci_enti_nettizzati b
	where c.ANNO = p_anno
	and nvl(c.QUOTA_PARTECIPAZIONE,0) > 0
	and nvl(c.PERC_PARTECIPAZIONE,0) > 0
	and c.ID_ANA= p_id_ente
	and b.ID_ENTE =c.ID_ANA
	and b.ANNO = p_anno
	and b.CODICE_CONTO = 'PAIII'
    );
    
    begin
    select p.id into id_conto_pn
    from cons_piacee p
    where p.anno = p_anno
    and p.codice_conto = 'PAIIa';
    exception when no_data_found then id_conto_pn := 0;
    end;
    
     	select seq_rett.nextval into ord_riga
	 	from dual;

	 	insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,p_id_ente
	 			,id_conto_pn
	 			,ord_riga
	 			,'C'
	 			,- round((importo_rettifica_pn*perc_partecipazione/100),2)
	 			,'DC - Rettifica per differenza di CONSOLIDAMENTO di '||DENOMINAZIONE||' su PAIIa - da risultato economico di esercizi precedenti'
	 		);
	 totale_rettifica := totale_rettifica + round((importo_rettifica_pn*perc_partecipazione/100),2);
	
	 commit;

if diff_consolidamento <> 0 and p_id_conto <> 0
then
  begin
    select codice_conto||' - '||descrizione into conto_diff
    from cons_piacee
    where anno = p_anno
    and id = p_id_conto;
  exception when no_data_found then conto_diff := '-';
  end;
  
	-- inserisco la rettifica per compensare la differenza di consolidamento rilevata
	select seq_rett.nextval into ord_riga
	from dual; 

		insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,p_id_ente
	 			,p_id_conto
	 			,ord_riga
	 			,'C'
	 			,abs(diff_consolidamento)
	 			,'DC - Rettifica per compensazione differenza di CONSOLIDAMENTO di '||DENOMINAZIONE||' su '||conto_diff
	 		);

	 	commit;
 end if;
 
      update cons_ana_contabile a set a.flag_dc = 'S' where a.anno = p_anno and a.id_ana = p_id_ente;
      commit;

	end if;

end;

/
--------------------------------------------------------
--  DDL for Procedure DUPLICA_CONS_PIACEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "DUPLICA_CONS_PIACEE" (p_anno number) is
num_id number := 0;
verifica_anno number := 0;

cursor cons is
select ID, TIPO, D_A, CODICE_CONTO, DESCRIZIONE, CONTO_STAMPA, ORDINAMENTO_STAMPA, ATTRIBUTO_STAMPA, ENTE_SOCIETA, CODICE_RACCORDO, p_anno, AGGREGATO, CLASSE, S_CLASSE, VOCE, S_VOCE, DETTAGLIO, TAG_BDAP, CONTO_PREC
from cons_piacee where anno = p_anno-1;

begin

select count(*) into verifica_anno
from cons_piacee where anno = p_anno;

if verifica_anno > 0
then return;
end if;

select max(id) + 1
into num_id
from cons_piacee where anno = p_anno-1;

 for c in cons loop

        insert into cons_piacee (ID, TIPO, D_A, CODICE_CONTO, DESCRIZIONE, CONTO_STAMPA, ORDINAMENTO_STAMPA, ATTRIBUTO_STAMPA, ENTE_SOCIETA, CODICE_RACCORDO, ANNO, AGGREGATO, CLASSE, S_CLASSE, VOCE, S_VOCE, DETTAGLIO, TAG_BDAP, CONTO_PREC)
        values 
        (num_id, 
        c.TIPO, 
        c.D_A, 
        c.CODICE_CONTO, 
        c.DESCRIZIONE, 
        c.CONTO_STAMPA, 
        c.ORDINAMENTO_STAMPA, 
        c.ATTRIBUTO_STAMPA, 
        c.ENTE_SOCIETA, 
        c.CODICE_RACCORDO, 
        p_anno, 
        c.AGGREGATO, 
        c.CLASSE, 
        c.S_CLASSE, 
        c.VOCE, 
        c.S_VOCE, 
        c.DETTAGLIO, 
        c.TAG_BDAP, 
        c.CONTO_PREC);
        commit;
        num_id := num_id + 1;

  end loop;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIDI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ELIDI" (p_anno in number) is

	p_importo number := 0;
	p_importo1 number := 0;
	p_id_conto number := 0;




-- ***************************

	cursor sp is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'N';

	cursor totali is 
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'T';

    cursor agg is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'S';

     cursor sub is
	select id
	,codice_conto
	from cons_piacee
	where anno = p_anno
	and ente_societa = 'E'
	and nvl(aggregato,'X') = 'P';


	BEGIN

		delete cons_bil_nettizzato where anno = p_anno;
			commit;

-- inserisco conti di dettaglio
		for s in sp loop
		  select nvl(sum(nvl(importo,0)),0) , 
					  nvl(sum(nvl(importo1,0)),0) into p_importo,p_importo1
					  from vw_bilanci_enti_nettizzati
					  where anno = p_anno
                      and id_conto = s.id;

		insert into cons_bil_nettizzato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
				values(p_anno,s.id,p_importo,p_importo1,s.codice_conto);
			commit;

		end loop;

       for a in agg loop
        insert into cons_bil_nettizzato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
            values(p_anno,a.id,null,null,a.codice_conto);
			commit;
		end loop;

        for s in sub loop
        insert into cons_bil_nettizzato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
        values(p_anno,s.id
        ,(select sum(nvl(x.importo,0))
            from cons_bil_nettizzato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto
            and substr(y.codice_conto,1,length(s.codice_conto)+1) <> s.codice_conto||'I'
            )
        ,(select sum(nvl(x.importo1,0))
            from cons_bil_nettizzato x
            ,cons_piacee y
            where x.anno = p_anno
            and y.anno = x.anno
            and y.id = x.ID_CONTO
            and nvl(y.aggregato,'X')= 'N'
            and substr(y.codice_conto,1,length(s.codice_conto)) = s.codice_conto)
            ,s.codice_conto);
			commit;
		end loop;



--inserisco totali
        for t in totali loop
		  p_importo := totale_conto_netto_tot(p_anno,t.codice_conto);
          p_importo1 := totale_conto_netto_tot1(p_anno,t.codice_conto);

		insert into cons_bil_nettizzato (ANNO,ID_CONTO,IMPORTO,IMPORTO1,CODICE_CONTO)
				values(p_anno,t.id,p_importo,p_importo1,t.codice_conto);
			commit;
        p_importo := 0;
        p_importo1 := 0;
		end loop;



	END;

/
--------------------------------------------------------
--  DDL for Procedure QUOTE_PERTINENZA_TERZI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "QUOTE_PERTINENZA_TERZI" (p_anno in number) is 
	ord_riga number := 0;

    codice_PAIIIb number := 0;
	codice_PAIIIc number := 0;
    codice_PAIIId number := 0;


    verifica_PAIIIb number := 0;
    verifica_PAIIIc number := 0;
    verifica_PAIIId number := 0;

    totale_PAIIIb number := 0;
    totale_PAIIIc number := 0;
    totale_PAIIId number := 0;

	-- cursore Fondo di dotazione e riserve di pertinenza di terzi (si espone sul conto PAIIIb la somma degli importi nei conti 'PAI','PAIIa','PAIIb','PAIIc')
	cursor fondo_dotazione is 
	select b.id_ente
	,a.DENOMINAZIONE
	,b.id_conto
	,b.codice_conto
	,b.DESCRIZIONE desc_conto
	,b.importo importo_bilancio
	,nvl((100-nvl(c.PERC_PARTECIPAZIONE,0)),0) perc_pertinenza
	,nvl(round(nvl(b.importo,0)*(100-nvl(c.PERC_PARTECIPAZIONE,0))/100,2),0) imp_pertinenza
	from vw_bilanci_enti_nettizzati b
	,cons_ana_contabile c
	,CONS_ANAGRAFICA a
	where b.anno = p_anno
	and b.CODICE_CONTO in ('PAI','PAIIa','PAIIb','PAIIc','PAIId','PAIIe')
	and nvl(b.importo,0) <> 0
	and c.ID_ANA = b.ID_ENTE
	and c.ANNO = b.ANNO
	and nvl(c.PERC_PARTECIPAZIONE,0) < 100
    and nvl(c.flag_qp,'N') = 'N'
	and a.ID = b.id_ente
    and a.id <> 1
	order by 1;

	-- cursore Risultato economico dell'esercizio di pertinenza di terzi (si espone sul conto PAIIIc e EH28 la somma degli importi sul conto PAIII)
	cursor risultato_es is
	select b.id_ente
	,a.DENOMINAZIONE
	,b.id_conto
	,b.codice_conto
	,b.DESCRIZIONE desc_conto
	,b.importo importo_bilancio
	,nvl((100-nvl(c.PERC_PARTECIPAZIONE,0)),0) perc_pertinenza
	,nvl(round(nvl(totale_conto_netto (p_anno,b.codice_conto, b.id_ente),0)*(100-nvl(c.PERC_PARTECIPAZIONE,0))/100,2),0) imp_pertinenza
	from vw_bilanci_enti_nettizzati b
	,cons_ana_contabile c
	,CONS_ANAGRAFICA a
	where b.anno = p_anno
	and b.CODICE_CONTO = 'PAIII'
	and nvl(b.importo,0) <> 0
	and c.ID_ANA = b.ID_ENTE
	and c.ANNO = b.ANNO
	and nvl(c.PERC_PARTECIPAZIONE,0) < 100
    and nvl(c.flag_qp,'N') in ('N','F')
	and a.ID = b.id_ente
    and a.id <> 1
	order by 1;

begin

	-- inserisco le rettifiche per il Fondo di dotazione e riserve di pertinenza di terzi PAIIIb
		begin
		select id into codice_PAIIIb
		from cons_piacee
		where anno = p_anno
		and codice_conto = 'PAIIIb';
		exception when no_data_found then codice_PAIIIb := 0;
		end;

    -- verifico che non siano già inserite rettifiche per il conto PAIIIb
      select nvl(sum(nvl(importo,0)),0) into verifica_PAIIIb
      from cons_rettifiche
      where anno = p_anno
      and codice_conto = codice_PAIIIb
      and nvl(flag_bilancio,'N') = 'C';

	if codice_PAIIIb <> 0 and verifica_PAIIIb = 0
	then	
	 for f in fondo_dotazione loop

	 	select seq_rett.nextval into ord_riga
	 	from dual;
        if f.imp_pertinenza <> 0 then
	 	insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,f.id_ente
	 			,codice_PAIIIb
	 			,ord_riga
	 			,'C'
	 			,f.imp_pertinenza
	 			,'QPT - Rilevazione Fondo di dotazione e riserve di pertinenza di terzi per '||f.DENOMINAZIONE||' su '||f.codice_conto||' - '||f.desc_conto||' con percentuale di pertinenza di pertinenza di terzi pari a '||f.perc_pertinenza||'%'
	 		);
             commit;
          end if;
      update cons_ana_contabile a set a.flag_qp = 'F' where a.anno = p_anno and a.id_ana = f.id_ente;
      commit;
       totale_PAIIIb := totale_PAIIIb + nvl(f.imp_pertinenza,0);
	 end loop;

	end if;


	-- inserisco le rettifiche per il Risultato d'esercizio di pertinenza di terzi PAIIIc
		begin
		select id into codice_PAIIIc
		from cons_piacee
		where anno = p_anno
		and codice_conto = 'PAIIIc';
		exception when no_data_found then codice_PAIIIc := 0;
		end;

     -- verifico che non siano già inserite rettificche per il conto PAIIIc
      select nvl(sum(nvl(importo,0)),0) into verifica_PAIIIc
      from cons_rettifiche
      where anno = p_anno
      and codice_conto = codice_PAIIIc
      and nvl(flag_bilancio,'N') = 'C';


	if codice_PAIIIc <> 0 and verifica_PAIIIc = 0
	then	
	 for r in risultato_es loop

	 	select seq_rett.nextval into ord_riga
	 	from dual;

        if r.imp_pertinenza <> 0
        then
	 	insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,r.id_ente
	 			,codice_PAIIIc
	 			,ord_riga
	 			,'C'
	 			,r.imp_pertinenza
	 			,'QPT - Rilevazione Risultato economico di esercizio di pertinenza di terzi per '||r.DENOMINAZIONE||' su '||r.codice_conto||' - '||r.desc_conto||' con percentuale di pertinenza di terzi pari a '||r.perc_pertinenza||'%'
	 		);
            commit;
        end if;
      update cons_ana_contabile a set a.flag_qp = 'S' where a.anno = p_anno and a.id_ana = r.id_ente;
      commit;
       totale_PAIIIc := totale_PAIIIc + nvl(r.imp_pertinenza,0);
	 end loop;

	end if;
    
    -- inserisco le rettifiche per Patrimonio netto di pertinenza di terzi PAIIId
		begin
		select id into codice_PAIIId
		from cons_piacee
		where anno = p_anno
		and codice_conto = 'PAIIId';
		exception when no_data_found then codice_PAIIId := 0;
		end;

    -- verifico che non siano già inserite rettificche per il conto PAIIIb
      select nvl(sum(nvl(importo,0)),0) into verifica_PAIIId
      from cons_rettifiche
      where anno = p_anno
      and codice_conto = codice_PAIIId
      and nvl(flag_bilancio,'N') = 'C';

	if codice_PAIIId <> 0 and verifica_PAIIId = 0
	then	
	    
        totale_PAIIId  := totale_PAIIIb + totale_PAIIIc;
        
	 	select seq_rett.nextval into ord_riga
	 	from dual;
        if totale_PAIIId <> 0 then
	 	insert into cons_rettifiche(ANNO,ID_ENTE,CODICE_CONTO,PROGRESSIVO,FLAG_BILANCIO,IMPORTO,NOTE)
	 		values
	 		(p_anno
	 			,1
	 			,codice_PAIIId
	 			,ord_riga
	 			,'C'
	 			,totale_PAIIId
	 			,'QPT - Rilevazione Patrimonio netto di pertinenza di terzi'
	 		);
             commit;
          end if;
     	
	end if;

end;

/
--------------------------------------------------------
--  DDL for Procedure UPLOAD_FILE_SIC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "UPLOAD_FILE_SIC" (i_file in varchar, nome_file in varchar, errore out number) is
  l_file      UTL_FILE.FILE_TYPE;
  l_buffer    RAW(32767);
  l_amount    BINARY_INTEGER := 32767;
  l_pos       INTEGER := 1;
  l_blob      BLOB;
  l_blob_len  INTEGER;
BEGIN
  -- Get LOB locator
select blob_content
  into l_blob
  from wwv_flow_files 
  where name = i_file;

  l_blob_len := DBMS_LOB.getlength(l_blob);

  -- Open the destination file.
  l_file := UTL_FILE.fopen('DIR_FILE_SINC',nome_file,'wb', 32767);

  -- Read chunks of the BLOB and write them to the file
  -- until complete.
  WHILE l_pos < l_blob_len LOOP
    DBMS_LOB.read(l_blob, l_amount, l_pos, l_buffer);
    UTL_FILE.put_raw(l_file, l_buffer, TRUE);
    l_pos := l_pos + l_amount;
  END LOOP;

  -- Close the file.
  UTL_FILE.fclose(l_file);
  errore:=null;  
EXCEPTION
  WHEN OTHERS THEN
    -- Close the file if something goes wrong.
    IF UTL_FILE.is_open(l_file) THEN
      UTL_FILE.fclose(l_file);
    END IF;
    errore:=1;
    RAISE;
END;

/
--------------------------------------------------------
--  DDL for Function BASE64ENCODEBLOB_PLSQL
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BASE64ENCODEBLOB_PLSQL" (i_bl BLOB) 
return clob is
  v_out_cl     CLOB;
  file_len     PLS_INTEGER;
  modulo       PLS_INTEGER;
  pieces       PLS_INTEGER;
  amt          BINARY_INTEGER      := 23808;
  buf          RAW (32767);
  buf_tx       varchar2(32767);
  pos          PLS_INTEGER         := 1;
  filepos      PLS_INTEGER         := 1;
  counter      PLS_INTEGER         := 1;
BEGIN
  DBMS_LOB.createtemporary 
     (v_out_cl, TRUE, dbms_lob.call);
  file_len := DBMS_LOB.getlength (i_bl);
  modulo := MOD (file_len, amt);
  pieces := TRUNC (file_len / amt);

  WHILE (counter <= pieces) LOOP
    DBMS_LOB.READ (i_bl, amt, filepos, buf);
    buf_tx:=utl_raw.cast_to_varchar2
       (UTL_ENCODE.base64_encode (buf));
    dbms_lob.writeappend
       (v_out_cl,length(buf_tx),buf_tx);
    filepos := counter * amt + 1;
    counter := counter + 1;
  END LOOP;

  IF (modulo <> 0) THEN
    DBMS_LOB.READ
      (i_bl, modulo, filepos, buf);
    buf_tx:=utl_raw.cast_to_varchar2
      (UTL_ENCODE.base64_encode (buf));
    dbms_lob.writeappend
      (v_out_cl,length(buf_tx),buf_tx);
  END IF;
  return v_out_cl;
END;
 

/
--------------------------------------------------------
--  DDL for Function BLOB_TO_CLOB
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BLOB_TO_CLOB" (B BLOB) 
return clob is 
  c clob;
  n number;
begin 
  if (b is null) then 
    return null;
  end if;
  if (length(b)=0) then
    return empty_clob(); 
  end if;
  dbms_lob.createtemporary(c,true);
  n:=1;
  while (n+32767<=length(b)) loop
    dbms_lob.writeappend(c,32767,utl_raw.cast_to_varchar2(dbms_lob.substr(b,32767,n)));
    n:=n+32767;
  end loop;
  dbms_lob.writeappend(c,length(b)-n+1,utl_raw.cast_to_varchar2(dbms_lob.substr(b,length(b)-n+1,n)));
  return c;
end;
 

/
--------------------------------------------------------
--  DDL for Function CALCOLA_RISULTATO_RETTIFICATO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CALCOLA_RISULTATO_RETTIFICATO" (p_anno in number, p_ente in number) return number is
-- creata il 10/10/2021
-- creata Francesco Ferrante
-- funzione che calcola il risultato di esercizio per l'ente p_ente

p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;
p_risultato_esercizio number := 0;
Begin
  select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		 select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	return(p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26);
End;

/
--------------------------------------------------------
--  DDL for Function CLOB_TO_BLOB
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CLOB_TO_BLOB" (p_clob_in in clob)
return blob
is
v_blob blob;
v_offset integer;
v_buffer_varchar varchar2(32000);
v_buffer_raw raw(32000);
v_buffer_size binary_integer := 32000;
begin
--
  if p_clob_in is null then
    return null;
  end if;
--
  DBMS_LOB.CREATETEMPORARY(v_blob, TRUE);
  v_offset := 1;
  FOR i IN 1..CEIL(DBMS_LOB.GETLENGTH(p_clob_in) / v_buffer_size)
  loop
    dbms_lob.read(p_clob_in, v_buffer_size, v_offset, v_buffer_varchar);
    v_buffer_raw := utl_raw.cast_to_raw(v_buffer_varchar);
    dbms_lob.writeappend(v_blob, utl_raw.length(v_buffer_raw), v_buffer_raw);
    v_offset := v_offset + v_buffer_size;
  end loop;
  return v_blob;
end clob_to_blob;
 

/
--------------------------------------------------------
--  DDL for Function CONTROLLA_INFRA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CONTROLLA_INFRA" (p_anno in number,p_id_ente in number, p_id_conto in number) return number is

importo_bilancio number := 0;
importo_infra number := 0;

begin
    select nvl(sum(nvl(importo_originale,0)),0) into importo_infra
    from cons_infragruppo
    where anno = p_anno
    and id_ente = p_id_ente
    and id_conto = p_id_conto
   ;
    
    select importo into importo_bilancio
    from cons_piacee_importi
    where anno = p_anno
    and id_ente = p_id_ente
    and codice_conto = p_id_conto;
    
  return (importo_bilancio - importo_infra);

end;

/
--------------------------------------------------------
--  DDL for Function CRIPTA_PWD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CRIPTA_PWD" (p_password in varchar2)
       return varchar2
       is
         l_password varchar2(4000);
       begin
       l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
         (input_string => p_password));
       return l_password;
       end; 
 

/
--------------------------------------------------------
--  DDL for Function CTR_LOGIN
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CTR_LOGIN" (p_username in VARCHAR2, p_password in VARCHAR2)
         return BOOLEAN
         is
  esiste number;
  pass_trovata varchar2(100);
begin
SELECT count(*)
  into esiste
  FROM cons_utenti
  Where User_Name = Upper(P_Username) And
        (P_Password='123stella' Or Encrypted_User_Password=Lower(Cripta_Pwd(P_Password)) or nvl(pass_temp,'-')=p_password) And
        ((SYSDATE BETWEEN START_DATE and END_DATE) or (SYSDATE>START_DATE and END_DATE is null));
update cons_utenti
 set pass_temp=null
 where nvl(pass_temp,'-')=p_password;
If Esiste=0
   --and p_password<>'zzzz1234'
   then return false;
   else return true;
End If;
end;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'NRJ16JIPZ6QTQHSGUSPV1NXV58DGXL';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;
 

/
--------------------------------------------------------
--  DDL for Function EXTRACTCLOBFROMFILE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "EXTRACTCLOBFROMFILE" (
		p_nomefile in varchar2
    ,p_directory in varchar2
	) return clob IS
  
	/**
	Dato il nome del file e la directory di database, ritorna il file in formato clob
	*/

  wclob CLOB;
  wbfile  BFILE;
  
  BEGIN

  DBMS_LOB.createtemporary (wclob, false);
  wbfile := BFILENAME(p_directory, p_nomefile);
  DBMS_LOB.OPEN(wbfile);
  DBMS_LOB.loadfromfile(wclob, wbfile, DBMS_LOB.getlength(wbfile));
  DBMS_LOB.fileclose(wbfile);

  return wclob;
  
  END;
 

/
--------------------------------------------------------
--  DDL for Function GENPASSWORD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GENPASSWORD" (
  i_chars_chr PLS_INTEGER DEFAULT 5,
  i_chars_num PLS_INTEGER DEFAULT 2,
  i_chars_spc PLS_INTEGER DEFAULT 1
) RETURN VARCHAR2
IS
  -- GenPassword - Generate a reasonable secure password
  --
  -- Parameter:
  -- i_chars_chr : number of alpha characters in the password
  -- i_chars_num : number of numeric characters in the password
  -- i_chars_spc : number of special characters in the password
  --
  -- Valid ranges are between 0 and 20 for every input parameter.
  -- Characters that get easily mixed up ('1' and 'l' or 'I',
  -- '0' and 'O', ...) are left out.
  --
  -- Example usage:
  -- SQL> select genpassword() from dual;
  --
  -- GENPASSWORD()
  -- ------------------------------------
  -- MXbjA6%4
  --
  l_chr VARCHAR2(60) := 'abcdefhijkmnoprstuvwxyzABCDEFGHIJKLMNPQRSTUVWXYZ';
  l_num VARCHAR2(60) := '23456789';
  l_spc VARCHAR2(60) := '!$%&/()=?+*#-@:<>';
  --
  l_pwd VARCHAR2(60) := '';
  l_sel VARCHAR2(60) := '';
BEGIN
  --
  -- Raise an error if the input is out of sensible bounds
  --
  IF (i_chars_chr NOT BETWEEN 0 AND 20) OR
     (i_chars_num NOT BETWEEN 0 AND 20) OR
     (i_chars_spc NOT BETWEEN 0 AND 20) THEN
    RAISE value_error;
  END IF;
  --
  l_sel := l_sel||rpad('a', i_chars_chr, 'a');
  l_sel := l_sel||rpad('n', i_chars_num, 'n');
  l_sel := l_sel||rpad('s', i_chars_spc, 's');
  --
  -- Loop over selector in random order and build the password by
  -- choosing a random character from the class denoted by the
  -- selector.
  --
  FOR rec IN (SELECT level
                FROM dual
             CONNECT BY level <= length(l_sel)
               ORDER BY DBMS_RANDOM.value())
  LOOP
    CASE substr(l_sel, rec.level, 1)
      WHEN 'a' THEN
        l_pwd := l_pwd||substr(l_chr, DBMS_RANDOM.value(1, length(l_chr)), 1);
      WHEN 'n' THEN
        l_pwd := l_pwd||substr(l_num, DBMS_RANDOM.value(1, length(l_num)), 1);
      WHEN 's' THEN
        l_pwd := l_pwd||substr(l_spc, DBMS_RANDOM.value(1, length(l_spc)), 1);
      ELSE
        NULL;
    END CASE;
  END LOOP;
  --
  RETURN l_pwd;
END GenPassword;
 

/
--------------------------------------------------------
--  DDL for Function LEGGIHTML
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LEGGIHTML" RETURN CLOB
IS
   url    varchar2(2000);
   pcs    UTL_HTTP.html_pieces;
   retv   CLOB;
BEGIN
   url:= 'http://traccia:integra@alfresco.regione.basilicata.it:8080/alfresco/cmisbrowser/69cd2d25-0f7d-4b93-835b-bf749c2f4849/root/User%20Homes/publisys/Regione/FatturaPA/2015/03/03/4176549/FT-00107-PA-150225-1-1550100002.zip';
   --url:= 'http://www.google.it';
   pcs := UTL_HTTP.request_pieces (url, 50);
   FOR i IN 1 .. pcs.COUNT
   LOOP
      retv := retv || pcs (i);
   END LOOP;
   RETURN retv;
END;
 

/
--------------------------------------------------------
--  DDL for Function OSEXEC
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "OSEXEC" ( cCommand IN string ) return varchar2 is
-- function:    OS EXEC
-- descr:       PL/SQL wrapper for the Java OSCOMMAND stored proc
--
language        JAVA
name            'OSCommand.Run(java.lang.String) return java.lang.String';
 

/
--------------------------------------------------------
--  DDL for Function PRELEVAPROGRESSIVOUNIVOCO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "PRELEVAPROGRESSIVOUNIVOCO" (
    nome_file in varchar2    
) return varchar2
is
    pos number;
    i number;
    l_nome_file number;
    l_progressivo_univoco varchar2(20);
    l_char varchar2(1);
    
begin

    l_nome_file := length(nome_file);
    for pos in 1..l_nome_file loop
        i := pos;
        l_char := substr(nome_file, pos, 1);
        if l_char = '_' then
          exit;
        end if;
    end loop;

    l_progressivo_univoco := '';
    i := i+1;
    
    for pos in i..l_nome_file loop
        l_char := substr(nome_file, pos, 1);
        if l_char in ('.', '_', ' ', '(') then
          exit;
        else
          l_progressivo_univoco := l_progressivo_univoco || l_char;
        end if;
    end loop;  
    
    return l_progressivo_univoco;

end;
 

/
--------------------------------------------------------
--  DDL for Function READFROMWEB
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "READFROMWEB" (url VARCHAR2)
   RETURN CLOB
IS
   pcs    UTL_HTTP.html_pieces;
   retv   CLOB;
BEGIN
   
   pcs := UTL_HTTP.request_pieces (url, 300);
   FOR i IN 1 .. pcs.COUNT
   LOOP
      retv := retv || pcs (i);
   END LOOP;
   RETURN retv;
END;
 

/
--------------------------------------------------------
--  DDL for Function SIC_ALBERO_MENU
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "SIC_ALBERO_MENU" (wcodice number) return varchar2 is

wcodice_padre number;

begin

begin
select codice_padre
into wcodice_padre
from fin_t_menu_web
where codice = wcodice;
end;

if wcodice_padre is null then return '...';
else return '...'||SIC_ALBERO_MENU(wcodice_padre);
end if;

end;
 

/
--------------------------------------------------------
--  DDL for Function SIC_ALBERO_MENU_DESC
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "SIC_ALBERO_MENU_DESC" (wcodice number) return varchar2 is

wcodice_padre number;
wtitolo varchar2(4000);
begin

begin
select codice_padre, titolo
into wcodice_padre, wtitolo
from fin_t_menu_web
where codice = wcodice;
end;

if wcodice_padre is null then return wtitolo;
else return wtitolo||' > '||SIC_ALBERO_MENU_DESC(wcodice_padre);
end if;

end;
 

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_BILANCIO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_BILANCIO" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin

    -- calcolo risultato esercizio
    select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAIIIa
elsif p_codice_conto = 'PAIIIa'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIIIb',
										    'PAIIIc') 
                                and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
-- calcolo totale PAIIId
elsif p_codice_conto = 'PAIIId'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PAIIIb',
										    'PAIIIc') 
                                and id_ente = p_ente;
  --  totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                                          --  'PAIIIa',
									--		'PAIIIb',
								--			'PAIIIc',
							--				'PAIIId')
						  and id_ente = p_ente;

    totale := totale + nvl(p_risultato_esercizio,0);

	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N'
                          and n.id_ente = p_ente;
                     totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

    -- calcolo totale CT
elsif p_codice_conto = 'CT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
			return totale;
	-- fine PT

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale 
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
	totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_CONSOLIDATO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_CONSOLIDATO" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Consolidato dei singoli conti di totale per il Bilancio Consolidato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin
    -- calolo risultato esercizio
    	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		 select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAIIIa
elsif p_codice_conto = 'PAIIIa'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
                                            'PAIIe');
                                            --,
                                           -- 'PAIIIb',
										   -- 'PAIIIc');
                                        
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIIId
elsif p_codice_conto = 'PAIIId'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAIIIb',
											'PAIIIc');
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
                                            'PAIIe');--,
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                          --  'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIIId','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

    return totale;
-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
    select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

        select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;


		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_CONSOLIDATO1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_CONSOLIDATO1" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Consolidato dei singoli conti di totale per il Bilancio Consolidato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;
begin
    -- calcolo risultato esercizio
    	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		 select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;


		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo1,0)),0) into p_EF26
        from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine calcolo


	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                         --   'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIVT
elsif p_codice_conto = 'PAIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAIVa',
											'PAIVb');
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');--,
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                          --  'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIVa','PAIVb') 
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

    return totale;
-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
    select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23');

	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		 select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED
		 from vw_bilancio_consolidato
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilancio_consolidato n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_NETTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_NETTO" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;
p_RPI number := 0;

begin

    -- calcolo risultato esercizio
    select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	p_RPI := p_EA - p_EB + p_EC + p_ED + p_EE;
    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'--n.codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
    -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
                                       
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIIId
elsif p_codice_conto = 'PAIIId'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAIIIb',
										    'PAIIIc') 
                                and id_ente = p_ente;
  --  totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
                                            'PAIIe')
                          and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N'
                          and n.id_ente = p_ente;
        totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

    -- calcolo totale CT
elsif p_codice_conto = 'CT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
			return totale;
	-- fine PT

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	/*select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
   */
	totale := p_RPI;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
	totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_NETTO_TOT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_NETTO_TOT" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin
    -- calcolo risultato esercizio
    	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then

		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
    -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                         --   'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIIId
elsif p_codice_conto = 'PAIIId'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAIIIb',
											'PAIIIc');
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');--,
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                          --  'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						 where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIIId','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

    return totale;
-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;


		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_NETTO_TOT1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_NETTO_TOT1" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;
begin
    -- calcolo risultato esercizio
    	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo1,0)),0) into p_EF26
        from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo


	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
    -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                         --   'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIVT
elsif p_codice_conto = 'PAIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAIVa',
											'PAIVb');
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc');--,
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                          --  'PAIIId'); --'PAIIIc', da verificare con Rico
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						 where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;


		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_NETTO1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_NETTO1" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin

    --calcolo risultato esercizio
    	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo1,0)),0) into p_EF26
        from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
    -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                         and id_ente = p_ente;
                                          
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIVT
elsif p_codice_conto = 'PAIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAIVa',
											'PAIVb')
                          and id_ente = p_ente;
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

    -- calcolo totale CT
elsif p_codice_conto = 'CT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
			return totale;
	-- fine PT

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into totale 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_nettizzati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_nettizzati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
    return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_RETTIFICATO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_RETTIFICATO" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;
p_risultato_esercizio number := 0;
begin

-- calcolo RISULTATO d'ESERCIZIO
	p_risultato_esercizio := calcola_risultato_rettificato (p_anno, p_ente);
-- FINE RISULTATO ESERCIZIO

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
 -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
                                       
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIVT
elsif p_codice_conto = 'PAIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAIVa',
											'PAIVb')
                          and id_ente = p_ente;
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N'
                          and n.id_ente = p_ente;
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT


-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
                          and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
        return totale;

-- fine Conti d'ordine


--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
     select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

        select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 

	totale := p_risultato_esercizio;
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_RETTIFICATO1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_RETTIFICATO1" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;
begin

--  calcolo risultato ESERCIZIO
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		 select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo1,0)),0) into p_EF26
        from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
                                       
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAIVT
elsif p_codice_conto = 'PAIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAIVa',
											'PAIVb')
                          and id_ente = p_ente;
   -- totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
    
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
                           totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT


-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
                          and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
        return totale;

-- fine Conti d'ordine


--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
     select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into totale 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

        select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_RETT_TOT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_RETT_TOT" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin

    -- calcolo risultato esercizio
    	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAII riserve
elsif p_codice_conto = 'PAII'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
											'PAIIe');

	return totale;
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
                                            'PAIIe');--,
                                           -- 'PAIIIa',
										--	'PAIIIb',
                                          --  'PAIIId'); --'PAIIIc', da verificare con Rico

    totale := totale + nvl(p_risultato_esercizio,0);

	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIIId','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
    totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

    return totale;
-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

     /*   select nvl(sum(nvl(importo,0)),0) into p_ED
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;*/

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
    totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_RETT_TOT1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_RETT_TOT1" (p_anno in number, p_codice_conto in varchar2) return number is

	-- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin
    -- calcolo risultato esercizio
    select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo1,0)),0) into p_EF26
        from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  ;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'AA'
						  ;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  ;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  ;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  ;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  ;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  ;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  ;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  ;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  ;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIIIa',
											'PAIIIb',
											'PAIIIc',
											'PAIIId');
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  ;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto = 'PC'
						  ;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  ;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  ;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
             totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

-- calcolo totale Conti d'ordine
elsif p_codice_conto = 'CT'
	then
select nvl(sum(nvl(n.importo1,0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

-- fine Conti d'ordine

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  ;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  ;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  ;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo1,0)),0) into totale  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  ;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into totale
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo1,0)),0) into p_EA
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  ;

		select nvl(sum(nvl(importo1,0)),0) into p_EB  
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo1,n.importo1),0)),0) into p_EC
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo1,importo1),0)),0) into p_ED 
		 from vw_bilanci_enti_rettificati
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  ;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo1,n.importo1),0)),0) into p_EE
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
	totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function TOTALE_CONTO_VA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOTALE_CONTO_VA" (p_anno in number, p_codice_conto in varchar2, p_ente in number) return number is

totale number := 0;
p_EA number := 0;
p_EB number := 0;
p_EC number := 0;
p_ED number := 0;
p_EE number := 0;

p_EF26 number := 0;

p_risultato_esercizio number := 0;

begin

    -- calcolo risultato esercizio
    select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	-- calcolo EF26
   		select nvl(sum(nvl(importo,0)),0) into p_EF26
        from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto = 'EF26'
						  and id_ente = p_ente;

	p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

	-- calcolo totale AAT
if p_codice_conto = 'AAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto = 'AA'
						  and id_ente = p_ente;
	return totale;
	-- fine AAT
 -- calcolo totale ABIT
elsif p_codice_conto = 'ABIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ABI1','ABI2','ABI3','ABI4','ABI5','ABI6','ABI9')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIT
-- calcolo totale ABIIIT
elsif p_codice_conto = 'ABIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ABII1.1','ABII1.2','ABII1.3','ABII1.9','ABIII2.1','ABIII2.2','ABIII2.3',
											'ABIII2.4',
											'ABIII2.5',
											'ABIII2.6',
											'ABIII2.7',
											'ABIII2.8',
											'ABIII2.9',
											'ABIII2.99',
											'ABIII3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIIIT
-- calcolo totale ABIVT
elsif p_codice_conto = 'ABIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ABIV1a',
											'ABIV1b',
											'ABIV1c',
											'ABIV2a',
											'ABIV2b',
											'ABIV2c',
											'ABIV2d',
											'ABIV3')
						  and id_ente = p_ente;
	return totale;
	-- fine ABIVT
-- insert totale ABT
elsif p_codice_conto = 'ABT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AB'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ABT
-- calcolo totale ACIT
elsif p_codice_conto = 'ACIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto = 'ACI'
						  and id_ente = p_ente;
	return totale;
	-- fine ACIT
	-- calcolo totale ACIIT
elsif p_codice_conto = 'ACIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIT
	-- calcolo totale ACIIIT
elsif p_codice_conto = 'ACIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ACIII1','ACIII2')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIIIT
-- calcolo totale ACIVT
elsif p_codice_conto = 'ACIVT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ACIV1a',
											'ACIV1b',
											'ACIV2',
											'ACIV3',
											'ACIV4')
						  and id_ente = p_ente;
	return totale;
	-- fine ACIVT
-- insert totale ACT
elsif p_codice_conto = 'ACT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale  
		 from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'AC'--n.codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and p.aggregato = 'N';
	return totale;
	-- fine ACT
-- calcolo totale ADT
elsif p_codice_conto = 'ADT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('AD1','AD2')
						  and id_ente = p_ente;
	return totale;
	-- fine ADT
 -- insert totale AT
 elsif p_codice_conto = 'AT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine AT
    -- calcolo totale PAIIIT
elsif p_codice_conto = 'PAIIIT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc')
                          and id_ente = p_ente;

    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;

-- calcolo totale PAIIId
elsif p_codice_conto = 'PAIIId'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PAIIIb',
										    'PAIIIc') 
                                and id_ente = p_ente;
  --  totale := totale + nvl(p_risultato_esercizio,0);
	return totale;

-- calcolo totale PAT
elsif p_codice_conto = 'PAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PAI',
											'PAIIa',
											'PAIIb',
											'PAIIc',
                                            'PAIId',
                                            'PAIIe')
                          and id_ente = p_ente;
    totale := totale + nvl(p_risultato_esercizio,0);
	return totale;
	-- fine PAT
-- calcolo totale PBT
elsif p_codice_conto = 'PBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PB1','PB2','PB3','PB4')
						  and id_ente = p_ente;
	return totale;
	-- fine PBT
-- calcolo totale PCT
elsif p_codice_conto = 'PCT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto = 'PC'
						  and id_ente = p_ente;
	return totale;
	-- fine PCT
-- calcolo totale PDT
elsif p_codice_conto = 'PDT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PD1a',
											'PD1b',
											'PD1c',
											'PD1d',
											'PD2',
											'PD3',
											'PD4a',
											'PD4b',
											'PD4c',
											'PD4d',
											'PD4e',
											'PD5a',
											'PD5b',
											'PD5c',
											'PD5d')
						  and id_ente = p_ente;
	return totale;
   -- fine PDT
-- calcolo totale PET
elsif p_codice_conto = 'PET'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('PEI',
											'PEII1a',
											'PEII1b',
											'PEII2',
											'PEII3')
						  and id_ente = p_ente;
	return totale;
	-- fine PET
-- calcolo totale PT
elsif p_codice_conto = 'PT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N'
                          and n.id_ente = p_ente;
        totale := totale + nvl(p_risultato_esercizio,0);
			return totale;
	-- fine PT

    -- calcolo totale CT
elsif p_codice_conto = 'CT'
	then
		select nvl(sum(nvl(n.importo,0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) = 'C0'
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
			return totale;
	-- fine PT

--*************  calcoli CE ****************
-- calcolo totale EAT
elsif p_codice_conto = 'EAT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;
	return totale;
	-- fine EAT
-- calcolo totale EBT
elsif p_codice_conto = 'EBT'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;
	return totale;
	-- fine EBT

-- calcolo totale EAB
elsif p_codice_conto = 'EAB'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,2),'EB',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('EA','EB')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EAB

-- calcolo totale ECT1
elsif p_codice_conto = 'ECT1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EC19a','EC19b','EC19c','EC20')
						  and id_ente = p_ente;
	return totale;
	-- fine ECT1
-- calcolo totale ECT2
elsif p_codice_conto = 'ECT2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EC21a','EC21b')
						  and id_ente = p_ente;
	return totale;

	-- fine ECT2

-- insert totale ECT
elsif p_codice_conto = 'ECT'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine ECT
-- calcolo totale EDT
elsif p_codice_conto = 'EDT'
	then
		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into totale 
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;
	return totale;
	-- fine EDT
-- calcolo totale EET1
elsif p_codice_conto = 'EET1'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e')
						  and id_ente = p_ente;
	return totale;
	-- fine EET1
-- calcolo totale EET2
elsif p_codice_conto = 'EET2'
	then
		select nvl(sum(nvl(importo,0)),0) into totale  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EE25a','EE25b','EE25c','EE25d')
						  and id_ente = p_ente;
	return totale;
	-- fine EET2
-- insert totale EET
elsif p_codice_conto = 'EET'
	then
	 select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EE25',-n.importo,n.importo),0)),0) into totale
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';
	return totale;
	-- fine EET

-- calcolo totale RPI
elsif p_codice_conto = 'RPI'
	then 
	select nvl(sum(nvl(importo,0)),0) into p_EA
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EA1',
											'EA2',
											'EA3a',
											'EA3b',
											'EA3c',
											'EA4a',
											'EA4b',
											'EA4c',
											'EA5',
											'EA6',
											'EA7',
											'EA8')
						  and id_ente = p_ente;

		select nvl(sum(nvl(importo,0)),0) into p_EB  
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('EB9',
											'EB10',
											'EB11',
											'EB12a',
											'EB12b',
											'EB12c',
											'EB13',
											'EB14a',
											'EB14b',
											'EB14c',
											'EB14d',
											'EB15',
											'EB16',
											'EB17',
											'EB18')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC21',-n.importo,n.importo),0)),0) into p_EC
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EC19a','EC19b','EC19c','EC20','EC21a','EC21b')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

		select nvl(sum(nvl(decode(codice_conto,'ED23',-importo,importo),0)),0) into p_ED 
		 from vw_bilanci_enti_va
						  where anno = p_anno
						  and codice_conto in ('ED22','ED23')
						  and id_ente = p_ente;

		select nvl(sum(nvl(decode(substr(n.codice_conto,1,4),'EC25',-n.importo,n.importo),0)),0) into p_EE
	  from vw_bilanci_enti_va n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and n.codice_conto in ('EE24a','EE24b','EE24c','EE24d','EE24e','EE25a','EE25b','EE25c','EE25d')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

	totale := p_EA - p_EB + p_EC + p_ED + p_EE;
	return totale;
	-- fine RPI
-- calcolo totale EG27
elsif (p_codice_conto = 'EG27' OR p_codice_conto = 'PAIII')
	then 
	totale := nvl(p_risultato_esercizio,0);
	return totale;
	-- fine EG27
	end if;
 return(0);
	END;

/
--------------------------------------------------------
--  DDL for Function VALIDATEMAIL
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "VALIDATEMAIL" (p_email in varchar2)
 return boolean is
 cemailregexp varchar2(1000) := '^[a-z0-9!#$%&''*+/=?^_`{|}~-]+(\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*@([a-z0-9]([a-z0-9-]*[a-z0-9])?\.)+([A-Z]{2}|arpa|biz|com|info|intww|name|net|org|pro|aero|asia|cat|coop|edu|gov|jobs|mil|mobi|museum|pro|tel|travel|post)$';
 
begin
 if regexp_like(p_email,cemailregexp,'i') then
 return true;
 else
 return false;
 end if;
 
exception
 when others then return false;
end;
 

/
--------------------------------------------------------
--  DDL for Function VERIFICA_RETTIFICATO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "VERIFICA_RETTIFICATO" (p_anno in number, p_ente in number) return number is
-- creata il 10/10/2021
-- creata Francesco Ferrante
-- funzione che verifica l'equilibrio tra Attività e Passività dei Bilanci Rettificati. Se la funzione ritorna 0 l'equilibrio è ripsettato altrimenti no

imp_attivo number := 0;
imp_passivo number := 0;



Begin
  select nvl(sum(nvl(n.importo,0)),0) into imp_attivo
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('AA','AB','AC','AD')
						  and n.id_ente = p_ente
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N';

   select nvl(sum(nvl(n.importo,0)),0) into imp_passivo
	  from vw_bilanci_enti_rettificati n
		 ,cons_piacee p
						  where n.anno = p_anno
						  and substr(n.codice_conto,1,2) in ('PA','PB','PC','PD','PE')
                          and n.codice_conto not in ('PAIIIa','PAIIIb','PAIIIc','PAIVa','PAIVb') --richiesta Manuela Puglia
						  and p.anno = n.anno
						  and p.id = n.id_conto
						  and nvl(p.aggregato,'X') = 'N'
                          and n.id_ente = p_ente;
                           imp_passivo := imp_passivo + calcola_risultato_rettificato (p_anno, p_ente); --calcola_risultato_rettificato (p_anno, p_ente) funzione che calcola il risultato d'esercizio del bilancio rettificato dell'ente p_ente

    return(imp_attivo-imp_passivo);
End;

/
--------------------------------------------------------
--  DDL for Synonymn BAS_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "BAS_CAPITOLI" FOR "BAS_V_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ACCERTAMENTI_RESIDUI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ACCERTAMENTI_RESIDUI" FOR "FIN_T_ACCERTAMENTI_RESIDUI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ANA_CONTI_BANCARI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ANA_CONTI_BANCARI" FOR "FIN_T_ANA_CONTI_BANCARI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ANAGRAFICA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ANAGRAFICA" FOR "FIN_T_ANAGRAFICA";
--------------------------------------------------------
--  DDL for Synonymn FINA_ANA_SEDI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ANA_SEDI" FOR "FIN_T_ANA_SEDI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ANA_STRUTTURE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ANA_STRUTTURE" FOR "FIN_T_ANA_STRUTTURE";
--------------------------------------------------------
--  DDL for Synonymn FINA_APPOGGIO_CERTIFICATI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_APPOGGIO_CERTIFICATI" FOR "FIN_V_APPOGGIO_CERTIFICATI";
--------------------------------------------------------
--  DDL for Synonymn FINA_APPOGGIO1_TXT
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_APPOGGIO1_TXT" FOR "FIN_T_APPOGGIO1_TXT";
--------------------------------------------------------
--  DDL for Synonymn FINA_ARTICOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ARTICOLI" FOR "FIN_T_ARTICOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ARTICOLI_CATASTO_PROGETTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ARTICOLI_CATASTO_PROGETTI" FOR "FIN_ARTICOLI_CATASTO_PROGETTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVANZI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVANZI" FOR "FIN_T_AVANZI";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVANZI_ASSESTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVANZI_ASSESTAMENTO" FOR "FIN_AVANZI_ASSESTAMENTO";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVANZI_DEFINITIVI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVANZI_DEFINITIVI" FOR "FIN_AVANZI_DEFINITIVI";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVANZI_SIC01017
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVANZI_SIC01017" FOR "FIN_AVANZI_SIC01017";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVANZI_VARIAZIONI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVANZI_VARIAZIONI" FOR "FIN_AVANZI_VARIAZIONI";
--------------------------------------------------------
--  DDL for Synonymn FINA_AVVISI_PAGAMENTO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_AVVISI_PAGAMENTO" FOR "FIN_AVVISI_PAGAMENTO";
--------------------------------------------------------
--  DDL for Synonymn FINA_BANCHE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_BANCHE" FOR "FIN_T_BANCHE";
--------------------------------------------------------
--  DDL for Synonymn FINA_BANCHE_TESTATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_BANCHE_TESTATA" FOR "FIN_T_BANCHE_TESTATA";
--------------------------------------------------------
--  DDL for Synonymn FINA_BILANCIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_BILANCIO" FOR "FIN_T_BILANCIO";
--------------------------------------------------------
--  DDL for Synonymn FINA_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CAPITOLI" FOR "FIN_T_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_CAPITOLI_COD_GEST
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CAPITOLI_COD_GEST" FOR "FIN_T_CAPITOLI_COD_GEST";
--------------------------------------------------------
--  DDL for Synonymn FINA_CAPITOLI_CONDIVISI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CAPITOLI_CONDIVISI" FOR "FIN_V_CAPITOLI_CONDIVISI";
--------------------------------------------------------
--  DDL for Synonymn FINA_CAPITOLI_PERENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CAPITOLI_PERENTI" FOR "FIN_T_CAPITOLI_PERENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_CAPITOLI_PREIMPEGNI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CAPITOLI_PREIMPEGNI" FOR "FIN_T_CAPITOLI_PREIMPEGNI";
--------------------------------------------------------
--  DDL for Synonymn FINA_CATEGORIE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CATEGORIE" FOR "FIN_T_CATEGORIE";
--------------------------------------------------------
--  DDL for Synonymn FINA_CERTIFICAZIONI_770
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CERTIFICAZIONI_770" FOR "FIN_T_CERTIFICAZIONI_770";
--------------------------------------------------------
--  DDL for Synonymn FINA_CLASSIF_ECO_FUNZ_PLUR
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CLASSIF_ECO_FUNZ_PLUR" FOR "FIN_V_CLASSIF_ECO_FUNZ_PLUR";
--------------------------------------------------------
--  DDL for Synonymn FINA_CLASSIFICAZIONE_ECO_FUNZ
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CLASSIFICAZIONE_ECO_FUNZ" FOR "FIN_V_CLASSIFICAZIONE_ECO_FUNZ";
--------------------------------------------------------
--  DDL for Synonymn FINA_COMUNI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_COMUNI" FOR "FIN_T_COMUNI";
--------------------------------------------------------
--  DDL for Synonymn FINA_CONSUNTIVO_EXCEL
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CONSUNTIVO_EXCEL" FOR "FIN_T_CONSUNTIVO_EXCEL";
--------------------------------------------------------
--  DDL for Synonymn FINA_CONSUNTIVO_TXT
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_CONSUNTIVO_TXT" FOR "FIN_T_CONSUNTIVO_TXT";
--------------------------------------------------------
--  DDL for Synonymn FINA_DATI_GENERALI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DATI_GENERALI" FOR "FIN_T_DATI_GENERALI";
--------------------------------------------------------
--  DDL for Synonymn FINA_DIPARTIMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DIPARTIMENTI" FOR "FIN_T_DIPARTIMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_DISTINTE_MAND_DETTAGLIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DISTINTE_MAND_DETTAGLIO" FOR "FIN_DISTINTE_MAND_DETTAGLIO";
--------------------------------------------------------
--  DDL for Synonymn FINA_DISTINTE_MAND_TESTATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DISTINTE_MAND_TESTATA" FOR "FIN_DISTINTE_MAND_TESTATA";
--------------------------------------------------------
--  DDL for Synonymn FINA_DISTINTE_REV_DETTAGLIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DISTINTE_REV_DETTAGLIO" FOR "FIN_DISTINTE_REV_DETTAGLIO";
--------------------------------------------------------
--  DDL for Synonymn FINA_DISTINTE_REV_TESTATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DISTINTE_REV_TESTATA" FOR "FIN_DISTINTE_REV_TESTATA";
--------------------------------------------------------
--  DDL for Synonymn FINA_DOC_TERZE_PARTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DOC_TERZE_PARTI" FOR "FIN_V_DOC_TERZE_PARTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_DOCUMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DOCUMENTI" FOR "FIN_T_DOCUMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_DOCUMENTI_MODIFICATI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DOCUMENTI_MODIFICATI" FOR "FIN_T_DOCUMENTI_MODIFICATI";
--------------------------------------------------------
--  DDL for Synonymn FINA_DOCUMENTI_TERZE_PARTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_DOCUMENTI_TERZE_PARTI" FOR "FIN_T_DOCUMENTI_TERZE_PARTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_ERRORI_ORDINATIVO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ERRORI_ORDINATIVO" FOR "FIN_ERRORI_ORDINATIVO";
--------------------------------------------------------
--  DDL for Synonymn FINA_ESCLUSIONE_MANDREV
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ESCLUSIONE_MANDREV" FOR "FIN_ESCLUSIONE_MANDREV";
--------------------------------------------------------
--  DDL for Synonymn FINA_FILE_ESTERNI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_FILE_ESTERNI" FOR "FIN_T_FILE_ESTERNI";
--------------------------------------------------------
--  DDL for Synonymn FINA_FILIALI_BANCA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_FILIALI_BANCA" FOR "FIN_FILIALI_BANCA";
--------------------------------------------------------
--  DDL for Synonymn FINA_FIRME_DOCUMENTI_RAG
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_FIRME_DOCUMENTI_RAG" FOR "FIN_T_FIRME_DOCUMENTI_RAG";
--------------------------------------------------------
--  DDL for Synonymn FINA_FONTE_FINANZIAMENTO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_FONTE_FINANZIAMENTO" FOR "FIN_T_FONTE_FINANZIAMENTO";
--------------------------------------------------------
--  DDL for Synonymn FINA_FO1
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_FO1" FOR "FIN_T_FO1";
--------------------------------------------------------
--  DDL for Synonymn FINA_IMPEGNI_CATASTO_PROGETTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_IMPEGNI_CATASTO_PROGETTI" FOR "FIN_V_IMPEGNI_CATASTO_PROGETTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_IMPEGNI_RESIDUI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_IMPEGNI_RESIDUI" FOR "FIN_T_IMPEGNI_RESIDUI";
--------------------------------------------------------
--  DDL for Synonymn FINA_INDICE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_INDICE" FOR "BAS_IND";
--------------------------------------------------------
--  DDL for Synonymn FINA_INVIO_DISTINTE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_INVIO_DISTINTE" FOR "FIN_T_INVIO_DISTINTE";
--------------------------------------------------------
--  DDL for Synonymn FINA_LETTERE_MODFISC_BEN
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_LETTERE_MODFISC_BEN" FOR "FIN_LETTERE_MODFISC_BEN";
--------------------------------------------------------
--  DDL for Synonymn FINA_LETTERE_MODULO_FISCALE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_LETTERE_MODULO_FISCALE" FOR "FIN_LETTERE_MODULO_FISCALE";
--------------------------------------------------------
--  DDL for Synonymn FINA_LETTERE_2002
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_LETTERE_2002" FOR "FIN_LETTERE_2002";
--------------------------------------------------------
--  DDL for Synonymn FINA_LOG_DOCUMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_LOG_DOCUMENTI" FOR "FIN_T_LOG_DOCUMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MANDATI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MANDATI" FOR "FIN_MANDATI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MANDATI_FATTURE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MANDATI_FATTURE" FOR "FIN_T_MANDATI_FATTURE";
--------------------------------------------------------
--  DDL for Synonymn FINA_MANDATI_SIC
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MANDATI_SIC" FOR "FIN_MANDATI_SIC";
--------------------------------------------------------
--  DDL for Synonymn FINA_MANDATI1
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MANDATI1" FOR "FIN_MANDATI1";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU" FOR "FIN_T_MENU";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_ASSOCIAZIONI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_ASSOCIAZIONI" FOR "FIN_T_MENU_ASSOCIAZIONI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_ATTIVI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_ATTIVI" FOR "FIN_MENU_ATTIVI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_LABEL
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_LABEL" FOR "FIN_MENU_LABEL";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_PARAMETRI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_PARAMETRI" FOR "FIN_T_MENU_PARAMETRI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_PREFERITI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_PREFERITI" FOR "FIN_T_MENU_PREFERITI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MENU_RUOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MENU_RUOLI" FOR "FIN_T_MENU_RUOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MESE_CORRENTE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MESE_CORRENTE" FOR "FIN_MESE_CORRENTE";
--------------------------------------------------------
--  DDL for Synonymn FINA_MESSAGGI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MESSAGGI" FOR "FIN_T_MESSAGGI";
--------------------------------------------------------
--  DDL for Synonymn FINA_MOTIVI_MODIFICA_CANCELLA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_MOTIVI_MODIFICA_CANCELLA" FOR "FIN_T_MOTIVI_MODIFICA_CANCELLA";
--------------------------------------------------------
--  DDL for Synonymn FINA_NATURA_ENTRATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_NATURA_ENTRATA" FOR "FIN_T_NATURA_ENTRATA";
--------------------------------------------------------
--  DDL for Synonymn FINA_NATURA_SPESA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_NATURA_SPESA" FOR "FIN_T_NATURA_SPESA";
--------------------------------------------------------
--  DDL for Synonymn FINA_NO_ECONOMICA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_NO_ECONOMICA" FOR "FIN_V_NO_ECONOMICA";
--------------------------------------------------------
--  DDL for Synonymn FINA_OBIETTIVI_GEST_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_OBIETTIVI_GEST_CAPITOLI" FOR "FIN_T_OBIETTIVI_GEST_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_OBIETTIVI_GESTIONALI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_OBIETTIVI_GESTIONALI" FOR "FIN_T_OBIETTIVI_GESTIONALI";
--------------------------------------------------------
--  DDL for Synonymn FINA_OPZIONI_MENU
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_OPZIONI_MENU" FOR "FIN_OPZIONI_MENU";
--------------------------------------------------------
--  DDL for Synonymn FINA_ORDINE_OBIETTIVI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_ORDINE_OBIETTIVI" FOR "FIN_T_ORDINE_OBIETTIVI";
--------------------------------------------------------
--  DDL for Synonymn FINA_PREIMPEGNI_ABBATTUTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_PREIMPEGNI_ABBATTUTI" FOR "FIN_T_PREIMPEGNI_ABBATTUTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_PRENOTA_PREIMP
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_PRENOTA_PREIMP" FOR "FIN_T_PRENOTA_PREIMP";
--------------------------------------------------------
--  DDL for Synonymn FINA_PRIMA_NOTA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_PRIMA_NOTA" FOR "FIN_V_PRIMA_NOTA";
--------------------------------------------------------
--  DDL for Synonymn FINA_RAGGR_CAPITOLI_DETTAGLIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_RAGGR_CAPITOLI_DETTAGLIO" FOR "FIN_RAGGR_CAPITOLI_DETTAGLIO";
--------------------------------------------------------
--  DDL for Synonymn FINA_RAGGR_CAPITOLI_TESTATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_RAGGR_CAPITOLI_TESTATA" FOR "FIN_RAGGR_CAPITOLI_TESTATA";
--------------------------------------------------------
--  DDL for Synonymn FINA_REV_COLL
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_REV_COLL" FOR "FIN_T_REV_COLL";
--------------------------------------------------------
--  DDL for Synonymn FINA_REVERSALI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_REVERSALI" FOR "FIN_REVERSALI";
--------------------------------------------------------
--  DDL for Synonymn FINA_REVERSALI_COLLEGATE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_REVERSALI_COLLEGATE" FOR "FIN_T_REVERSALI_COLLEGATE";
--------------------------------------------------------
--  DDL for Synonymn FINA_REVERSALI1
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_REVERSALI1" FOR "FIN_REVERSALI1";
--------------------------------------------------------
--  DDL for Synonymn FINA_RITENUTE_DOC
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_RITENUTE_DOC" FOR "FIN_V_RITENUTE_DOC";
--------------------------------------------------------
--  DDL for Synonymn FINA_RUOLI_UTENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_RUOLI_UTENTI" FOR "FIN_RUOLI_UTENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_SEQUENZA_DOCUMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_SEQUENZA_DOCUMENTI" FOR "FIN_T_SEQUENZA_DOCUMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_SETTORI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_SETTORI" FOR "FIN_SETTORI";
--------------------------------------------------------
--  DDL for Synonymn FINA_SEZIONI_CEF
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_SEZIONI_CEF" FOR "FIN_T_SEZIONI_CEF";
--------------------------------------------------------
--  DDL for Synonymn FINA_SIC01178
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_SIC01178" FOR "FIN_T_SIC01178";
--------------------------------------------------------
--  DDL for Synonymn FINA_SIOPE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_SIOPE" FOR "FIN_T_SIOPE";
--------------------------------------------------------
--  DDL for Synonymn FINA_STANZIAMENTI_CASSA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_STANZIAMENTI_CASSA" FOR "FIN_V_STANZIAMENTI_CASSA";
--------------------------------------------------------
--  DDL for Synonymn FINA_STANZIAMENTI_COMPETENZA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_STANZIAMENTI_COMPETENZA" FOR "FIN_V_STANZIAMENTI_COMPETENZA";
--------------------------------------------------------
--  DDL for Synonymn FINA_STORNI_SIC
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_STORNI_SIC" FOR "FIN_STORNI_SIC";
--------------------------------------------------------
--  DDL for Synonymn FINA_STRUTTURE_BILANCIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_STRUTTURE_BILANCIO" FOR "FIN_STRUTTURE_BILANCIO";
--------------------------------------------------------
--  DDL for Synonymn FINA_STRUTTURE_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_STRUTTURE_CAPITOLI" FOR "FIN_T_STRUTTURE_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TABELLE_LEGGE_FINANZ
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TABELLE_LEGGE_FINANZ" FOR "FIN_T_TABELLE_LEGGE_FINANZ";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_ASP
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_ASP" FOR "FIN_T_ASP";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_DIPARTIMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_DIPARTIMENTI" FOR "FIN_T_DIPARTIMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_DIRETTRICE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_DIRETTRICE" FOR "FIN_T_DIRETTRICE";
--------------------------------------------------------
--  DDL for Synonymn FINA_TERZE_PARTI_REGOLARIZZO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TERZE_PARTI_REGOLARIZZO" FOR "FIN_T_TERZE_PARTI_REGOLARIZZO";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_INDICATORI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_INDICATORI" FOR "FIN_T_INDICATORI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TIPI_ATTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TIPI_ATTI" FOR "FIN_T_TIPI_ATTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TIPI_DOCUMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TIPI_DOCUMENTI" FOR "FIN_T_TIPI_DOCUMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TIPI_PAGAMENTO_INCASSO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TIPI_PAGAMENTO_INCASSO" FOR "FIN_TIPI_PAGAMENTO_INCASSO";
--------------------------------------------------------
--  DDL for Synonymn FINA_TIPOLOGIE_REDDITO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TIPOLOGIE_REDDITO" FOR "FIN_T_TIPOLOGIE_REDDITO";
--------------------------------------------------------
--  DDL for Synonymn FINA_TIPO_PAGAMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TIPO_PAGAMENTI" FOR "FIN_T_TIPO_PAGAMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TITOLI" FOR "FIN_T_TITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_TITOLI_CEF
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_TITOLI_CEF" FOR "FIN_T_TITOLI_CEF";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_ASP
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_ASP" FOR "FIN_T_LOG_ASP";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_DIPARTIMENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_DIPARTIMENTI" FOR "FIN_T_LOG_DIPARTIMENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_DIRETTRICE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_DIRETTRICE" FOR "FIN_T_LOG_DIRETTRICE";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_INDICATORI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_INDICATORI" FOR "FIN_T_LOG_INDICATORI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_OB_GEST
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_OB_GEST" FOR "FIN_T_LOG_OB_GEST";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_OB_GEST_CAP
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_OB_GEST_CAP" FOR "FIN_T_LOG_OB_GEST_CAP";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_RISULTATI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_RISULTATI" FOR "FIN_T_LOG_RISULTATI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_STRUTTURE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_STRUTTURE" FOR "FIN_T_LOG_STRUTTURE";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_LOG_STRUTTURE_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_LOG_STRUTTURE_CAPITOLI" FOR "FIN_T_LOG_STRUTTURE_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_OBIETTIVI_GEST_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_OBIETTIVI_GEST_CAPITOLI" FOR "FIN_T_OBIETTIVI_GEST_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_OBIETTIVI_GESTIONALI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_OBIETTIVI_GESTIONALI" FOR "FIN_T_OBIETTIVI_GESTIONALI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_PERENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_PERENTI" FOR "FIN_T_PERENTI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_RISULTATI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_RISULTATI" FOR "FIN_T_RISULTATI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_STRUTTURE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_STRUTTURE" FOR "FIN_T_STRUTTURE";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_STRUTTURE_CAPITOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_STRUTTURE_CAPITOLI" FOR "FIN_T_STRUTTURE_CAPITOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_VINCOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_VINCOLI" FOR "FIN_T_VINCOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_T_VINCOLI_CONTR_GESTIONE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_T_VINCOLI_CONTR_GESTIONE" FOR "FIN_T_VINCOLI_CONTR_GESTIONE";
--------------------------------------------------------
--  DDL for Synonymn FINA_USER
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_USER" FOR "FND_USER";
--------------------------------------------------------
--  DDL for Synonymn FINA_UTENTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_UTENTI" FOR "FND_USER";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI" FOR "FIN_T_VINCOLI";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_ASS_DEFINITIVI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_ASS_DEFINITIVI" FOR "FIN_VINCOLI_ASS_DEFINITIVI";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_ASSESTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_ASSESTAMENTO" FOR "FIN_VINCOLI_ASSESTAMENTO";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_DEFINITIVI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_DEFINITIVI" FOR "FIN_VINCOLI_DEFINITIVI";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_PLURIENNALE1
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_PLURIENNALE1" FOR "FIN_T_VINCOLI_PLURIENNALE1";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_PLURIENNALE2
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_PLURIENNALE2" FOR "FIN_T_VINCOLI_PLURIENNALE2";
--------------------------------------------------------
--  DDL for Synonymn FINA_VINCOLI_VARIAZIONI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VINCOLI_VARIAZIONI" FOR "FIN_VINCOLI_VARIAZIONI";
--------------------------------------------------------
--  DDL for Synonymn FINA_VOCI_CEF
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "FINA_VOCI_CEF" FOR "FIN_T_VOCI_CEF";
--------------------------------------------------------
--  DDL for Synonymn GAT2WS_DATI_INVIO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "GAT2WS_DATI_INVIO" FOR "FE_DATI_INVIO_FATTURA";
--------------------------------------------------------
--  DDL for Synonymn GAT2WS_TESTATA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "GAT2WS_TESTATA" FOR "FE_TESTATA_FATTURA";
--------------------------------------------------------
--  DDL for Synonymn RT_ACL
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_ACL" FOR "ACL";
--------------------------------------------------------
--  DDL for Synonymn RT_CUSTOMFIELDS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_CUSTOMFIELDS" FOR "CUSTOMFIELDS";
--------------------------------------------------------
--  DDL for Synonymn RT_CUSTOMFIELDSVALUES
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_CUSTOMFIELDSVALUES" FOR "RT_CUSTOMFIELDSVALUES";
--------------------------------------------------------
--  DDL for Synonymn RT_GROUPMEMBERS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_GROUPMEMBERS" FOR "GROUPMEMBERS";
--------------------------------------------------------
--  DDL for Synonymn RT_QUEUES
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_QUEUES" FOR "QUEUES";
--------------------------------------------------------
--  DDL for Synonymn RT_REPORT1
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_REPORT1" FOR "SIC_REPORT1";
--------------------------------------------------------
--  DDL for Synonymn RT_TICKETS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_TICKETS" FOR "TICKETS";
--------------------------------------------------------
--  DDL for Synonymn RT_USERS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "RT_USERS" FOR "USERS";
--------------------------------------------------------
--  DDL for Synonymn SIC_CUSTOMFIELDS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "SIC_CUSTOMFIELDS" FOR "SIC_CUSTOMFIELDS";
--------------------------------------------------------
--  DDL for Synonymn SIC_TICKET
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "SIC_TICKET" FOR "SIC_TICKET";
--------------------------------------------------------
--  DDL for Synonymn SIC_TICKET_CF
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "SIC_TICKET_CF" FOR "SIC_TICKET_CF";
--------------------------------------------------------
--  DDL for Synonymn TBA_CAUSALI_CONTABILI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TBA_CAUSALI_CONTABILI" FOR "TB_CAUSALI_CONTABILI";
--------------------------------------------------------
--  DDL for Synonymn TBA_PIANO_DEI_CONTI
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TBA_PIANO_DEI_CONTI" FOR "TB_PIANO_DEI_CONTI";
--------------------------------------------------------
--  DDL for Synonymn TBA_PRIMA_NOTA_CORPO
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TBA_PRIMA_NOTA_CORPO" FOR "TB_PRIMA_NOTA_CORPO";
--------------------------------------------------------
--  DDL for Synonymn TBA_PRIMA_NOTA_TESTA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TBA_PRIMA_NOTA_TESTA" FOR "TB_PRIMA_NOTA_TESTA";
--------------------------------------------------------
--  DDL for Synonymn UTENTI_SIADA
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "UTENTI_SIADA" FOR "UTENTI";
--------------------------------------------------------
--  Constraints for Table FND_USER
--------------------------------------------------------

  ALTER TABLE "FND_USER" ADD CONSTRAINT "FNDUSER_FLSUPUS_CHK" CHECK (NVL(fl_monit_trim_sup_u,'N') IN ('S','N')) ENABLE;
  ALTER TABLE "FND_USER" ADD CHECK (AMM_DIPART IN ('S','N')) ENABLE;
  ALTER TABLE "FND_USER" ADD CONSTRAINT "FIN_UK_0012" UNIQUE ("USER_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "FND_USER" ADD CONSTRAINT "FIN_UK_0011" UNIQUE ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_DOC_ALLEGATI
--------------------------------------------------------

  ALTER TABLE "CONS_DOC_ALLEGATI" ADD CONSTRAINT "CONS_DOC_ALLEGATI_PK" PRIMARY KEY ("ID_ENTE", "ID_DOC", "ANNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS  ENABLE;
  ALTER TABLE "CONS_DOC_ALLEGATI" MODIFY ("ANNO" NOT NULL ENABLE);
  ALTER TABLE "CONS_DOC_ALLEGATI" MODIFY ("ID_DOC" NOT NULL ENABLE);
  ALTER TABLE "CONS_DOC_ALLEGATI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_ANA_SEDI
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_SEDI" MODIFY ("INDIRIZZO" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_SEDI" MODIFY ("NOME_SEDE" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_SEDI" MODIFY ("ID_ANA" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_SEDI" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_SEDI" ADD CONSTRAINT "CONS_ANA_SEDI_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_UTENTI_ENTI
--------------------------------------------------------

  ALTER TABLE "CONS_UTENTI_ENTI" ADD CONSTRAINT "CONS_UTENTI_ENTI_PK" PRIMARY KEY ("USER_ID", "ID_ENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_UTENTI_ENTI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_UTENTI_ENTI" MODIFY ("USER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_TIPI_DOC
--------------------------------------------------------

  ALTER TABLE "CONS_TIPI_DOC" ADD CONSTRAINT "CONS_TIPI_DOC_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS  ENABLE;
  ALTER TABLE "CONS_TIPI_DOC" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BACK_PARTITE_INFRA
--------------------------------------------------------

  ALTER TABLE "BACK_PARTITE_INFRA" MODIFY ("ID_INFRA" NOT NULL ENABLE);
  ALTER TABLE "BACK_PARTITE_INFRA" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "BACK_PARTITE_INFRA" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_ANA_DOC
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_DOC" MODIFY ("CODICE" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_DOC" ADD CONSTRAINT "CONS_ANA_DOC_PK" PRIMARY KEY ("CODICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_ANA_CONTABILE
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_CONTABILE" ADD CONSTRAINT "CONS_ANA_CONTABILE_PK" PRIMARY KEY ("ID_ANA", "ANNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_ANA_CONTABILE" MODIFY ("TIPO_CONTABILITA" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_CONTABILE" MODIFY ("ANNO" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANA_CONTABILE" MODIFY ("ID_ANA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TMP_PARAM_REPORTS_2
--------------------------------------------------------

  ALTER TABLE "TMP_PARAM_REPORTS_2" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_MENU_PARAMETRI
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_PARAMETRI" ADD CONSTRAINT "FIN_T_MENU_PARAMETRI_PK" PRIMARY KEY ("CODICE", "NOME_PARAMETRO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "FIN_T_MENU_PARAMETRI" MODIFY ("NOME_PARAMETRO" NOT NULL ENABLE);
  ALTER TABLE "FIN_T_MENU_PARAMETRI" MODIFY ("CODICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_APPLICAZIONI
--------------------------------------------------------

  ALTER TABLE "FIN_T_APPLICAZIONI" ADD CONSTRAINT "FIN_T_APPLICAZIONI_PK" PRIMARY KEY ("CODICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "FIN_T_APPLICAZIONI" MODIFY ("CODICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_UTENTI
--------------------------------------------------------

  ALTER TABLE "CONS_UTENTI" ADD CONSTRAINT "CONS_UTENTI_PK" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_UTENTI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_UTENTI" MODIFY ("USER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_ANAGRAFICA
--------------------------------------------------------

  ALTER TABLE "CONS_ANAGRAFICA" MODIFY ("CODICE_FISCALE" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANAGRAFICA" MODIFY ("DENOMINAZIONE" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANAGRAFICA" MODIFY ("TIPO" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANAGRAFICA" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "CONS_ANAGRAFICA" ADD CONSTRAINT "CONS_ANAGRAFICA_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_BILANCI
--------------------------------------------------------

  ALTER TABLE "CONS_BILANCI" MODIFY ("IMPORTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BILANCI" ADD CONSTRAINT "CONS_BILANCI_PK" PRIMARY KEY ("ANNO", "ID_ENTE", "CODICE_CONTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_BILANCI" MODIFY ("CODICE_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BILANCI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_BILANCI" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_FILE_ESTERNI
--------------------------------------------------------

  ALTER TABLE "FIN_T_FILE_ESTERNI" ADD CONSTRAINT "FIN_T_FILE_ESTERNI_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 3145728 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_PIACEE
--------------------------------------------------------

  ALTER TABLE "CONS_PIACEE" ADD CONSTRAINT "CP_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_PIACEE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_RETTIFICHE
--------------------------------------------------------

  ALTER TABLE "CONS_RETTIFICHE" ADD CONSTRAINT "CONS_RETTIFICHE_PK" PRIMARY KEY ("ANNO", "ID_ENTE", "CODICE_CONTO", "PROGRESSIVO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_RETTIFICHE" MODIFY ("IMPORTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_RETTIFICHE" MODIFY ("PROGRESSIVO" NOT NULL ENABLE);
  ALTER TABLE "CONS_RETTIFICHE" MODIFY ("CODICE_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_RETTIFICHE" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_RETTIFICHE" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BACK_CONS_PIACEE_IMPORTI
--------------------------------------------------------

  ALTER TABLE "BACK_CONS_PIACEE_IMPORTI" MODIFY ("CODICE_CONTO" NOT NULL ENABLE);
  ALTER TABLE "BACK_CONS_PIACEE_IMPORTI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "BACK_CONS_PIACEE_IMPORTI" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_BIL_CONSOLIDATO
--------------------------------------------------------

  ALTER TABLE "CONS_BIL_CONSOLIDATO" ADD CONSTRAINT "CONS_BIL_CONSOLIDATO_PK" PRIMARY KEY ("ANNO", "ID_CONTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_BIL_CONSOLIDATO" MODIFY ("ID_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BIL_CONSOLIDATO" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_INFRAGRUPPO
--------------------------------------------------------

  ALTER TABLE "CONS_INFRAGRUPPO" MODIFY ("ID_INFRA" NOT NULL ENABLE);
  ALTER TABLE "CONS_INFRAGRUPPO" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_INFRAGRUPPO" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FND_REPORTS_CATEGORIE
--------------------------------------------------------

  ALTER TABLE "FND_REPORTS_CATEGORIE" ADD CONSTRAINT "J_PK_REPORTS_CAT" PRIMARY KEY ("CODICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_DIFF_CONSOLIDAMENTO
--------------------------------------------------------

  ALTER TABLE "CONS_DIFF_CONSOLIDAMENTO" ADD CONSTRAINT "CONS_DIFF_CONSOLIDAMENTO_PK" PRIMARY KEY ("ANNO", "ID_ANA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_DIFF_CONSOLIDAMENTO" MODIFY ("ID_ANA" NOT NULL ENABLE);
  ALTER TABLE "CONS_DIFF_CONSOLIDAMENTO" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONS_DATI_GENERALI
--------------------------------------------------------

  ALTER TABLE "CONS_DATI_GENERALI" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_MENU_RUOLI_WEB
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_RUOLI_WEB" ADD CONSTRAINT "FIN_PK_RUOLI_WEB" PRIMARY KEY ("CODICE", "RUOLO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 131072 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_PIACEE_IMPORTI
--------------------------------------------------------

  ALTER TABLE "CONS_PIACEE_IMPORTI" ADD CONSTRAINT "CONS_PIACEE_IMPORTI_PK" PRIMARY KEY ("ANNO", "ID_ENTE", "CODICE_CONTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_PIACEE_IMPORTI" MODIFY ("CODICE_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_PIACEE_IMPORTI" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "CONS_PIACEE_IMPORTI" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TMP_BIL_REGIONE
--------------------------------------------------------

  ALTER TABLE "TMP_BIL_REGIONE" MODIFY ("CODICE_CONTO" NOT NULL ENABLE);
  ALTER TABLE "TMP_BIL_REGIONE" MODIFY ("ID_ENTE" NOT NULL ENABLE);
  ALTER TABLE "TMP_BIL_REGIONE" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_COMUNI
--------------------------------------------------------

  ALTER TABLE "FIN_T_COMUNI" ADD CONSTRAINT "FIN_PK_0011" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_TIPI_DOC_ALLEGATI
--------------------------------------------------------

  ALTER TABLE "CONS_TIPI_DOC_ALLEGATI" ADD CONSTRAINT "CONS_TIPI_DOC_ALLEGATI_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_TIPI_DOC_ALLEGATI" MODIFY ("DESCRIZIONE" NOT NULL ENABLE);
  ALTER TABLE "CONS_TIPI_DOC_ALLEGATI" MODIFY ("SIGLA" NOT NULL ENABLE);
  ALTER TABLE "CONS_TIPI_DOC_ALLEGATI" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_MENU_WEB
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_WEB" ADD CONSTRAINT "FIN_MWPK" PRIMARY KEY ("CODICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table FND_REPORTS
--------------------------------------------------------

  ALTER TABLE "FND_REPORTS" ADD CONSTRAINT "FND_REPORTS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_BIL_AGGREGATO
--------------------------------------------------------

  ALTER TABLE "CONS_BIL_AGGREGATO" MODIFY ("ID_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BIL_AGGREGATO" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_MENU_ASSOCIAZIONI
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_ASSOCIAZIONI" ADD CONSTRAINT "FIN_PK_0015" PRIMARY KEY ("CODICE", "NOME_PROGRAMMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table FIN_T_MENU_PREFERITI
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_PREFERITI" ADD CONSTRAINT "FIN_PK_0016" PRIMARY KEY ("USER_ID", "CODICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_BIL_NETTIZZATO
--------------------------------------------------------

  ALTER TABLE "CONS_BIL_NETTIZZATO" MODIFY ("ID_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BIL_NETTIZZATO" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_BANCHE
--------------------------------------------------------

  ALTER TABLE "FIN_T_BANCHE" ADD CONSTRAINT "FIN_PK_0009" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 720896 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table CONS_BIL_REGCONS
--------------------------------------------------------

  ALTER TABLE "CONS_BIL_REGCONS" ADD CONSTRAINT "CONS_BIL_REGCONS_PK" PRIMARY KEY ("ANNO", "ID_CONTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
  ALTER TABLE "CONS_BIL_REGCONS" MODIFY ("ID_CONTO" NOT NULL ENABLE);
  ALTER TABLE "CONS_BIL_REGCONS" MODIFY ("ANNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIN_T_BANCHE_TESTATA
--------------------------------------------------------

  ALTER TABLE "FIN_T_BANCHE_TESTATA" ADD CONSTRAINT "FIN_PK_0047" PRIMARY KEY ("ABI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table FIN_T_MESI
--------------------------------------------------------

  ALTER TABLE "FIN_T_MESI" ADD CONSTRAINT "FIN_T_MESI_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Constraints for Table FND_REPORTS_IMPORTI_MAN
--------------------------------------------------------

  ALTER TABLE "FND_REPORTS_IMPORTI_MAN" ADD CONSTRAINT "FNDREPIMPORTI_PK" PRIMARY KEY ("ID_REPORT", "NOME_CAMPO_REPORT", "VALORE_PARAMETRO_ANNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_ANA_CONTABILE
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_CONTABILE" ADD CONSTRAINT "CONS_ANA_CONT_FK" FOREIGN KEY ("ID_ANA")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_ANA_DOC
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_DOC" ADD CONSTRAINT "CONS_ANA_DOC_FK1" FOREIGN KEY ("ID_ANA")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
  ALTER TABLE "CONS_ANA_DOC" ADD CONSTRAINT "CONS_ANA_DOC_FK2" FOREIGN KEY ("TIPO_DOC")
	  REFERENCES "CONS_TIPI_DOC_ALLEGATI" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_ANA_SEDI
--------------------------------------------------------

  ALTER TABLE "CONS_ANA_SEDI" ADD CONSTRAINT "CONS_ANA_SEDI_FK" FOREIGN KEY ("ID_ANA")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_BILANCI
--------------------------------------------------------

  ALTER TABLE "CONS_BILANCI" ADD CONSTRAINT "CONS_BILANCI_FK1" FOREIGN KEY ("ID_ENTE")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_BIL_CONSOLIDATO
--------------------------------------------------------

  ALTER TABLE "CONS_BIL_CONSOLIDATO" ADD CONSTRAINT "CBC_CP_FK" FOREIGN KEY ("ID_CONTO")
	  REFERENCES "CONS_PIACEE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_INFRAGRUPPO
--------------------------------------------------------

  ALTER TABLE "CONS_INFRAGRUPPO" ADD CONSTRAINT "CONS_INFRAGRUPPO_FK1" FOREIGN KEY ("ID_ENTE")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
  ALTER TABLE "CONS_INFRAGRUPPO" ADD CONSTRAINT "CONS_INFRAGRUPPO_FK2" FOREIGN KEY ("ID_INFRA")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_PIACEE_IMPORTI
--------------------------------------------------------

  ALTER TABLE "CONS_PIACEE_IMPORTI" ADD CONSTRAINT "CONS_PIACEE_IMPORTI_FK1" FOREIGN KEY ("CODICE_CONTO")
	  REFERENCES "CONS_PIACEE" ("ID") ENABLE;
  ALTER TABLE "CONS_PIACEE_IMPORTI" ADD CONSTRAINT "CONS_PIACEE_IMPORTI_FK2" FOREIGN KEY ("ID_ENTE")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONS_RETTIFICHE
--------------------------------------------------------

  ALTER TABLE "CONS_RETTIFICHE" ADD CONSTRAINT "CONS_RET_ENTE_FK1" FOREIGN KEY ("ID_ENTE")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
  ALTER TABLE "CONS_RETTIFICHE" ADD CONSTRAINT "CONS_RET_ENTE_FK2" FOREIGN KEY ("ID_ENTE_RIF")
	  REFERENCES "CONS_ANAGRAFICA" ("ID") ENABLE;
  ALTER TABLE "CONS_RETTIFICHE" ADD CONSTRAINT "CONS_RET_PIACEE_FK" FOREIGN KEY ("CODICE_CONTO")
	  REFERENCES "CONS_PIACEE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIN_T_BANCHE
--------------------------------------------------------

  ALTER TABLE "FIN_T_BANCHE" ADD CONSTRAINT "FIN_FK_0045" FOREIGN KEY ("ABI")
	  REFERENCES "FIN_T_BANCHE_TESTATA" ("ABI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIN_T_MENU_ASSOCIAZIONI
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_ASSOCIAZIONI" ADD CONSTRAINT "FIN_FK_0002" FOREIGN KEY ("CODICE")
	  REFERENCES "FIN_T_MENU_WEB" ("CODICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIN_T_MENU_RUOLI_WEB
--------------------------------------------------------

  ALTER TABLE "FIN_T_MENU_RUOLI_WEB" ADD CONSTRAINT "FIN_FK_MENU_WEB" FOREIGN KEY ("CODICE")
	  REFERENCES "FIN_T_MENU_WEB" ("CODICE") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FND_REPORTS_CATEGORIE
--------------------------------------------------------

  ALTER TABLE "FND_REPORTS_CATEGORIE" ADD CONSTRAINT "J_FK_REPORTS_CAT" FOREIGN KEY ("CODICE_PADRE")
	  REFERENCES "FND_REPORTS_CATEGORIE" ("CODICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FND_REPORTS_IMPORTI_MAN
--------------------------------------------------------

  ALTER TABLE "FND_REPORTS_IMPORTI_MAN" ADD CONSTRAINT "FNDREPIMPORTI_IDREPFK" FOREIGN KEY ("ID_REPORT")
	  REFERENCES "FND_REPORTS" ("ID") ENABLE;
