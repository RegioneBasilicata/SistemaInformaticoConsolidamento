--
-- Script was generated by Devart dbForge Studio 2020 for Oracle, Version 4.1.94.0
-- Product home page: http://www.devart.com/dbforge/oracle/studio
-- Script date 29/01/2020 15:55:37
-- Server version: Oracle Database 11g Enterprise Edition Release 11.2.0.2.0 - 64bit Production With the Partitioning, Real Application Clusters, Automatic Storage Management, OLAP, Data Mining and Real Application Testing options
-- Client version: 
--


SET SQLBLANKLINES ON;
SET DEFINE OFF;
ALTER SESSION SET NLS_DATE_FORMAT = 'MM/DD/SYYYY HH24:MI:SS';
ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF TZH:TZM';
ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF';
ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '.,';
ALTER SESSION SET NLS_NCHAR_CONV_EXCP = FALSE;
ALTER SESSION SET TIME_ZONE = '+01:00';

--
-- Create sequence "ID_NB_LIVELLO1"
--
CREATE SEQUENCE ID_NB_LIVELLO1
START WITH 32
INCREMENT BY 1
NOCACHE;

--
-- Create sequence "ID_NB_LIVELLO2"
--
CREATE SEQUENCE ID_NB_LIVELLO2
START WITH 143
INCREMENT BY 1
NOCACHE;

--
-- Create sequence "ID_NB_LIVELLO3"
--
CREATE SEQUENCE ID_NB_LIVELLO3
START WITH 163
INCREMENT BY 1
NOCACHE;

--
-- Create sequence "ID_SEQ"
--
CREATE SEQUENCE ID_SEQ
START WITH 2
INCREMENT BY 1
NOCACHE;

--
-- Create sequence "ID_TMP_PARAM_REPORTS_2"
--
CREATE SEQUENCE ID_TMP_PARAM_REPORTS_2
START WITH 233
INCREMENT BY 1
NOCACHE;

--
-- Create sequence "SEQ_RETT"
--
CREATE SEQUENCE SEQ_RETT
START WITH 1504
INCREMENT BY 1
NOCACHE;

--
-- Create table "CONS_PIACEE"
--
CREATE TABLE CONS_PIACEE (
  ID                 NUMBER NOT NULL,
  TIPO               VARCHAR2(2 BYTE),
  D_A                VARCHAR2(1 BYTE),
  CODICE_CONTO       VARCHAR2(10 BYTE),
  DESCRIZIONE        VARCHAR2(2000 BYTE),
  CONTO_STAMPA       VARCHAR2(20 BYTE),
  ORDINAMENTO_STAMPA NUMBER,
  ATTRIBUTO_STAMPA   VARCHAR2(1 BYTE),
  ENTE_SOCIETA       VARCHAR2(1 BYTE),
  CODICE_RACCORDO    VARCHAR2(10 BYTE),
  ANNO               NUMBER(4, 0),
  AGGREGATO          VARCHAR2(1 BYTE),
  CLASSE             VARCHAR2(1 BYTE),
  S_CLASSE           NUMBER(3, 0),
  VOCE               NUMBER(3, 0),
  S_VOCE             VARCHAR2(10 BYTE),
  DETTAGLIO          VARCHAR2(10 BYTE),
  TAG_BDAP           VARCHAR2(2000 BYTE),
  CONTO_PREC         VARCHAR2(100 BYTE),
  CONSTRAINT CP_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                        NEXT 1 M
                                                                        MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_PIACEE.AGGREGATO IS 'S= Conto Aggregato - N= Conto di dettaglio - T= Conto di Totalizzazione o Calcolo';
COMMENT ON COLUMN CONS_PIACEE.ANNO IS 'Anno struttura';
COMMENT ON COLUMN CONS_PIACEE.CONTO_PREC IS 'contiene il codice del conto dell''anno precedente se diverso';
COMMENT ON COLUMN CONS_PIACEE.TAG_BDAP IS 'TAG per file xbrl da inviare a BDAP';

--
-- Create view "VW_ALL11_ENTI"
--
CREATE VIEW VW_ALL11_ENTI (
  ID_ENTE,
  ANNO,
  TIPO,
  ORDINAMENTO_STAMPA,
  CODICE_CONTO,
  IMPORTO
) AS
    SELECT 11 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_arpab.nb_piacee_importi c,
           sic_arpab.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 8 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_parcogallipoli.nb_piacee_importi c,
           sic_parcogallipoli.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 2 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_parcomurgia.nb_piacee_importi c,
           sic_parcomurgia.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 20 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_lab.nb_piacee_importi c,
           sic_lab.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 10 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_ardsu.nb_piacee_importi c,
           sic_ardsu.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 16 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_alsia.nb_piacee_importi c,
           sic_alsia.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 9 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_apt.nb_piacee_importi c,
           sic_apt.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      UNION
    SELECT 33 id_ente,
           p.anno,
           DECODE(p.tipo, 'A', 1, 'P', 2, 'CO', 3, 99) tipo,
           p.ORDINAMENTO_STAMPA,
           p.codice_conto codice_conto,
           SUM(NVL(c.importo, 0)) importo
      FROM regbas_consolidato.cons_piacee p,
           sic_parcovulture.nb_piacee_importi c,
           sic_parcovulture.fin_t_dati_generali g
      WHERE p.ente_societa = 'E'
        AND c.anno (+) = p.anno
        AND c.TIPO_PIACEE (+) = p.tipo
        AND c.codice_piacee (+) = p.codice_conto
        AND c.utente (+) = 99999
        AND g.anno_finanziario = p.anno
        AND g.data_chiusura_economica IS NOT NULL
      GROUP BY p.anno,
               p.codice_conto,
               p.tipo,
               p.ORDINAMENTO_STAMPA
      ORDER BY 1,
               2,
               3,
               4;

--
-- Create table "CONS_BIL_CONSOLIDATO"
--
CREATE TABLE CONS_BIL_CONSOLIDATO (
  ANNO         NUMBER NOT NULL,
  ID_CONTO     NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  CODICE_CONTO VARCHAR2(10 BYTE),
  CONSTRAINT CONS_BIL_CONSOLIDATO_PK PRIMARY KEY (ANNO, ID_CONTO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                      NEXT 1 M
                                                                                                      MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create foreign key "CBC_CP_FK" on table "CONS_BIL_CONSOLIDATO"
--
ALTER TABLE CONS_BIL_CONSOLIDATO
ADD CONSTRAINT CBC_CP_FK FOREIGN KEY (ID_CONTO)
REFERENCES CONS_PIACEE (ID);

--
-- Create view "VW_BILANCIO_CONSOLIDATO"
--
CREATE VIEW VW_BILANCIO_CONSOLIDATO (
  ANNO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  IMPORTO,
  IMPORTO1
) AS
    SELECT p.anno,
           p.id id_conto,
           p.codice_conto,
           p.descrizione,
           c.importo,
           c.IMPORTO1
      FROM cons_piacee p,
           cons_bil_consolidato c
      WHERE p.ENTE_SOCIETA = 'E'
        AND c.anno = p.anno
        AND c.ID_CONTO = p.id;

--
-- Create function "TOTALE_CONTO_CONSOLIDATO1"
--
CREATE FUNCTION totale_conto_consolidato1(p_anno         IN NUMBER,
                                          p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Consolidato dei singoli conti di totale per il Bilancio Consolidato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;
  BEGIN
    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EA
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EB
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
      INTO p_EC
      FROM vw_bilancio_consolidato n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
      INTO p_ED
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;


    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
      INTO p_EE
      FROM vw_bilancio_consolidato n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EF26
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine calcolo


    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');
      -- 'PAIIIa',
      --	'PAIIIb',
      --   'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIVT
    ELSIF p_codice_conto = 'PAIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAIVa',
          'PAIVb');
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');--,
      -- 'PAIIIa',
      --	'PAIIIb',
      --  'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIVa', 'PAIVb')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      RETURN totale;
    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23');

      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EA
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EB
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO p_EC
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO p_ED
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO p_EE
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_CONSOLIDATO"
--
CREATE FUNCTION totale_conto_consolidato(p_anno         IN NUMBER,
                                         p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Consolidato dei singoli conti di totale per il Bilancio Consolidato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN
    -- calolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilancio_consolidato n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilancio_consolidato n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilancio_consolidato
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIa
    ELSIF p_codice_conto = 'PAIIIa'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIId',
          'PAIIe');
      --,
      -- 'PAIIIb',
      -- 'PAIIIc');

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIIId
    ELSIF p_codice_conto = 'PAIIId'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIIb',
          'PAIIIc');
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIId',
          'PAIIe');--,
      -- 'PAIIIa',
      --	'PAIIIb',
      --  'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIIId', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      RETURN totale;
    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;

      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilancio_consolidato
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;


      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilancio_consolidato n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create table "CONS_ANAGRAFICA"
--
CREATE TABLE CONS_ANAGRAFICA (
  ID                      NUMBER              NOT NULL,
  TIPO                    VARCHAR2(1 BYTE)    NOT NULL,
  DENOMINAZIONE           VARCHAR2(2000 BYTE) NOT NULL,
  CODICE_FISCALE          VARCHAR2(16 BYTE)   NOT NULL,
  SETTORE_ATTIVITA        VARCHAR2(2000 BYTE),
  FORMA_GIURIDICA         VARCHAR2(2000 BYTE),
  DATA_COSTITUZIONE       DATE,
  DATA_FINE               DATE,
  ID_SIC                  NUMBER,
  UTILIZZO_SIC            VARCHAR2(1 BYTE),
  DENOMINAZIONE_UFFICIALE VARCHAR2(2000 BYTE),
  CONSTRAINT CONS_ANAGRAFICA_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                     NEXT 1 M
                                                                                     MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_ANAGRAFICA.DENOMINAZIONE_UFFICIALE IS 'denominazione ufficiale dell''Ente/Azienda da utillizzare nei report';
COMMENT ON COLUMN CONS_ANAGRAFICA.ID IS 'Il codice 1 e'' la societa'' consolidante';
COMMENT ON COLUMN CONS_ANAGRAFICA.ID_SIC IS 'identificativo anagrafica nel Sistema Contabile';
COMMENT ON COLUMN CONS_ANAGRAFICA.TIPO IS 'S_ocieta/E_nte: serve per sapere a quali codici della tabella CONS_PIACEE deve essere collegato';

--
-- Create table "CONS_RETTIFICHE"
--
CREATE TABLE CONS_RETTIFICHE (
  ANNO          NUMBER NOT NULL,
  ID_ENTE       NUMBER DEFAULT 1 NOT NULL,
  CODICE_CONTO  NUMBER NOT NULL,
  PROGRESSIVO   NUMBER NOT NULL,
  FLAG_BILANCIO VARCHAR2(1 BYTE),
  IMPORTO       NUMBER NOT NULL,
  NOTE          VARCHAR2(2000 BYTE),
  ID_ENTE_RIF   NUMBER,
  BIL_INFRA     VARCHAR2(1 BYTE),
  CONSTRAINT CONS_RETTIFICHE_PK PRIMARY KEY (ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                                           NEXT 1 M
                                                                                                                           MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_RETTIFICHE.BIL_INFRA IS 'Flag che indica se la modifica riguarda una voce di bilancio o una voce di infragruppo (valido solo con FLAG_BILANCIO = ''B'')';
COMMENT ON COLUMN CONS_RETTIFICHE.FLAG_BILANCIO IS '(B/C) rettifica su B_ilancio ente o bilancio C_consolidato';

--
-- Create foreign key "CONS_RET_ENTE_FK1" on table "CONS_RETTIFICHE"
--
ALTER TABLE CONS_RETTIFICHE
ADD CONSTRAINT CONS_RET_ENTE_FK1 FOREIGN KEY (ID_ENTE)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create foreign key "CONS_RET_ENTE_FK2" on table "CONS_RETTIFICHE"
--
ALTER TABLE CONS_RETTIFICHE
ADD CONSTRAINT CONS_RET_ENTE_FK2 FOREIGN KEY (ID_ENTE_RIF)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create foreign key "CONS_RET_PIACEE_FK" on table "CONS_RETTIFICHE"
--
ALTER TABLE CONS_RETTIFICHE
ADD CONSTRAINT CONS_RET_PIACEE_FK FOREIGN KEY (CODICE_CONTO)
REFERENCES CONS_PIACEE (ID);

--
-- Create trigger "CONS_RETT_TRG"
--
CREATE TRIGGER CONS_RETT_TRG
  BEFORE INSERT
  ON CONS_RETTIFICHE
  FOR EACH ROW
BEGIN
  IF :new.progressivo IS NULL
  THEN
    SELECT seq_rett.nextval
      INTO :new.progressivo
      FROM dual;
  END IF;
END;
/

--
-- Create table "CONS_PIACEE_IMPORTI"
--
CREATE TABLE CONS_PIACEE_IMPORTI (
  ANNO         NUMBER NOT NULL,
  ID_ENTE      NUMBER NOT NULL,
  CODICE_CONTO NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  DARE         NUMBER,
  AVERE        NUMBER,
  NOTE         VARCHAR2(2000 BYTE),
  CONSTRAINT CONS_PIACEE_IMPORTI_PK PRIMARY KEY (ANNO, ID_ENTE, CODICE_CONTO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                                  NEXT 1 M
                                                                                                                  MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_PIACEE_IMPORTI.AVERE IS 'importo rettifica MENO';
COMMENT ON COLUMN CONS_PIACEE_IMPORTI.DARE IS 'importo rettifica PIU';

--
-- Create foreign key "CONS_PIACEE_IMPORTI_FK1" on table "CONS_PIACEE_IMPORTI"
--
ALTER TABLE CONS_PIACEE_IMPORTI
ADD CONSTRAINT CONS_PIACEE_IMPORTI_FK1 FOREIGN KEY (CODICE_CONTO)
REFERENCES CONS_PIACEE (ID);

--
-- Create foreign key "CONS_PIACEE_IMPORTI_FK2" on table "CONS_PIACEE_IMPORTI"
--
ALTER TABLE CONS_PIACEE_IMPORTI
ADD CONSTRAINT CONS_PIACEE_IMPORTI_FK2 FOREIGN KEY (ID_ENTE)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create view "VW_BILANCI_SOCIETA"
--
CREATE VIEW VW_BILANCI_SOCIETA (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 99) tipo,
           e.id id_conto,
           e.CODICE_CONTO,
           e.descrizione,
           e.ordinamento_stampa,
           SUM(NVL(i.IMPORTO, 0) + NVL(i.DARE, 0) - NVL(i.AVERE, 0)) importo,
           SUM(NVL(i.IMPORTO1, 0)) importo1
      FROM cons_piacee_importi i,
           cons_piacee p,
           cons_piacee e,
           cons_anagrafica a
      WHERE p.anno = i.anno
        AND p.id = i.CODICE_CONTO
        AND p.ENTE_SOCIETA = 'S'
        AND p.CODICE_RACCORDO IS NOT NULL
        AND e.ANNO = p.anno
        AND e.CODICE_CONTO = p.CODICE_RACCORDO
        AND e.ENTE_SOCIETA = 'E'
        AND a.id = i.ID_ENTE
        AND a.TIPO = 'S'
      GROUP BY i.anno,
               i.id_ente,
               DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 99),
               e.id,
               e.CODICE_CONTO,
               e.descrizione,
               e.ordinamento_stampa;

--
-- Create view "VW_BILANCI_ENTI_RETTIFICATI"
--
CREATE VIEW VW_BILANCI_ENTI_RETTIFICATI (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 'C', 3, 99) tipo,
           e.id id_conto,
           e.CODICE_CONTO,
           e.descrizione,
           e.ordinamento_stampa,
           (NVL(i.IMPORTO, 0) +
           NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.bil_infra, 'X') = 'B'), 0)) importo,
           NVL(i.IMPORTO1, 0) importo1
      FROM cons_piacee_importi i,
           cons_piacee e,
           cons_anagrafica a
      WHERE e.anno = i.anno
        AND e.id = i.CODICE_CONTO
        AND e.ENTE_SOCIETA = 'E'
        AND a.id = i.ID_ENTE
        AND a.TIPO = 'E';

--
-- Create function "TOTALE_CONTO_RETTIFICATO1"
--
CREATE FUNCTION totale_conto_rettificato1(p_anno         IN NUMBER,
                                          p_codice_conto IN VARCHAR2,
                                          p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;
  BEGIN

    --  calcolo risultato ESERCIZIO
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIVT
    ELSIF p_codice_conto = 'PAIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIVa',
          'PAIVb')
          AND id_ente = p_ente;
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT


    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;

    -- fine Conti d'ordine


    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_RETTIFICATO"
--
CREATE FUNCTION totale_conto_rettificato(p_anno         IN NUMBER,
                                         p_codice_conto IN VARCHAR2,
                                         p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;
    p_risultato_esercizio NUMBER := 0;
  BEGIN

    -- calcolo RISULTATO d'ESERCIZIO
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- FINE RISULTATO ESERCIZIO

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIVT
    ELSIF p_codice_conto = 'PAIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIVa',
          'PAIVb')
          AND id_ente = p_ente;
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N'
          AND n.id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT


    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;

    -- fine Conti d'ordine


    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN

      totale := p_risultato_esercizio;
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create view "VW_BILANCI_ENTI_RETT_TOT"
--
CREATE VIEW VW_BILANCI_ENTI_RETT_TOT (
  ANNO,
  ID_ENTE,
  TIPO,
  CODICE_CONTO,
  DESCRIZIONE,
  IMPORTO,
  IMPORTO1,
  ATTRIBUTO_STAMPA,
  ORDINAMENTO_STAMPA
) AS
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           c.importo,
           c.IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_rettificati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') IN ('N', 'S')
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           totale_conto_rettificato(c.anno, c.codice_conto, c.id_ENTE) importo,
           totale_conto_rettificato1(c.ANNO, c.codice_conto, c.id_ENTE) importo1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_rettificati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'T'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           p.descrizione,
           (SELECT SUM(NVL(x.importo, 0))
               FROM vw_bilanci_enti_rettificati x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') importo,
           (SELECT SUM(NVL(x.importo1, 0))
               FROM vw_bilanci_enti_rettificati x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_rettificati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'P'
      ORDER BY tipo,
               ORDINAMENTO_STAMPA;

--
-- Create function "TOTALE_CONTO_RETT_TOT1"
--
CREATE FUNCTION totale_conto_rett_tot1(p_anno         IN NUMBER,
                                       p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN
    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIIIa',
          'PAIIIb',
          'PAIIIc',
          'PAIIId');
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_RETT_TOT"
--
CREATE FUNCTION totale_conto_rett_tot(p_anno         IN NUMBER,
                                      p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN

    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_rettificati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_rettificati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAII riserve
    ELSIF p_codice_conto = 'PAII'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIId',
          'PAIIe');

      RETURN totale;
    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIIIa',
          'PAIIIb',
          'PAIIIc',
          'PAIIId');

      totale := totale + NVL(p_risultato_esercizio, 0);

      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      RETURN totale;
    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;

      /*   select nvl(sum(nvl(importo,0)),0) into p_ED
 		 from vw_bilanci_enti_rettificati
 						  where anno = p_anno
 						  and codice_conto in ('ED22','ED23')
 						  ;*/

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_rettificati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create view "VW_BILANCI_ENTI_AGG"
--
CREATE VIEW VW_BILANCI_ENTI_AGG (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 99) tipo,
           e.id id_conto,
           e.CODICE_CONTO,
           e.descrizione,
           e.ordinamento_stampa,
           SUM(NVL(i.IMPORTO, 0)) importo,
           SUM(NVL(i.IMPORTO1, 0)) importo1
      FROM cons_piacee_importi i,
           cons_piacee e,
           cons_anagrafica a
      WHERE e.anno = i.anno
        AND e.id = i.CODICE_CONTO
        AND e.ENTE_SOCIETA = 'E'
        AND a.id = i.ID_ENTE
        AND a.TIPO = 'E'
      GROUP BY i.anno,
               i.id_ente,
               DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 99),
               e.id,
               e.CODICE_CONTO,
               e.descrizione,
               e.ordinamento_stampa;

--
-- Create view "VW_BILANCI_ENTI"
--
CREATE VIEW VW_BILANCI_ENTI (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 'C', 3, 99) tipo,
           e.id id_conto,
           e.CODICE_CONTO,
           e.descrizione,
           e.ordinamento_stampa,
           SUM(NVL(i.IMPORTO, 0)) importo,
           SUM(NVL(i.IMPORTO1, 0)) importo1
      FROM cons_piacee_importi i,
           cons_piacee e,
           cons_anagrafica a
      WHERE e.anno = i.anno
        AND e.id = i.CODICE_CONTO
        AND e.ENTE_SOCIETA = 'E'
        AND a.id = i.ID_ENTE
        AND a.TIPO = 'E'
      GROUP BY i.anno,
               i.id_ente,
               DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 99),
               e.id,
               e.CODICE_CONTO,
               e.descrizione,
               e.ordinamento_stampa;

--
-- Create function "TOTALE_CONTO_BILANCIO"
--
CREATE FUNCTION totale_conto_bilancio(p_anno         IN NUMBER,
                                      p_codice_conto IN VARCHAR2,
                                      p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN

    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIa
    ELSIF p_codice_conto = 'PAIIIa'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIIIb',
          'PAIIIc')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- calcolo totale PAIIId
    ELSIF p_codice_conto = 'PAIIId'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIIb',
          'PAIIIc')
          AND id_ente = p_ente;
      --  totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;
    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          --  'PAIIIa',
          --		'PAIIIb',
          --			'PAIIIc',
          --				'PAIIId')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);

      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N'
          AND n.id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale CT
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine PT

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create table "CONS_INFRAGRUPPO"
--
CREATE TABLE CONS_INFRAGRUPPO (
  ANNO                NUMBER NOT NULL,
  ID_ENTE             NUMBER NOT NULL,
  ID_INFRA            NUMBER NOT NULL,
  CREDITI             NUMBER,
  DEBITI              NUMBER,
  RICAVI              NUMBER,
  COSTI               NUMBER,
  INTERESSI_ROYAL     NUMBER,
  CONTRIBUTI          NUMBER,
  INTERESSI           NUMBER,
  ACQ_CESPITI         NUMBER,
  VEN_CESPITI         NUMBER,
  CONC_CRED_PREST     NUMBER,
  UTILE_PERD_INFRA    NUMBER,
  DIVIDENDI_DISAVANZI NUMBER,
  TRIBUTI             NUMBER,
  ID_CONTO            NUMBER,
  IMPORTO_ORIGINALE   NUMBER,
  IMPORTO_RETTIFICATO NUMBER,
  NOTE                VARCHAR2(2000 BYTE)
)
LOGGING;

COMMENT ON COLUMN CONS_INFRAGRUPPO.ACQ_CESPITI IS 'ACQUISTO CESPITI  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.CONC_CRED_PREST IS 'CONCESSIONE CREDITI E PRESTITI  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.CONTRIBUTI IS 'CONTRIBUTI  (segno negativo se ricevuti)  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.DIVIDENDI_DISAVANZI IS 'DIVIDENDI DISTRIBUITI E/O DISAVANZI  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.ID_ENTE IS 'id ente/società a cui si riferiscono i dati di bilancio';
COMMENT ON COLUMN CONS_INFRAGRUPPO.ID_INFRA IS 'id ente/società verso cui si riferiscono gli importi';
COMMENT ON COLUMN CONS_INFRAGRUPPO.INTERESSI IS 'INTERESSI (segno meno se pagati)  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.INTERESSI_ROYAL IS 'INTERESSI E ROYALTIES (segno meno se costi (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.TRIBUTI IS 'TRIBUTI VERSATI ALLA REGIONE  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.UTILE_PERD_INFRA IS 'UTILE E PERDITE INFRAGRUPPO  (non piu'' utilizzato)';
COMMENT ON COLUMN CONS_INFRAGRUPPO.VEN_CESPITI IS 'VENDITA CESPITI  (non piu'' utilizzato)';

--
-- Create foreign key "CONS_INFRAGRUPPO_FK1" on table "CONS_INFRAGRUPPO"
--
ALTER TABLE CONS_INFRAGRUPPO
ADD CONSTRAINT CONS_INFRAGRUPPO_FK1 FOREIGN KEY (ID_ENTE)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create foreign key "CONS_INFRAGRUPPO_FK2" on table "CONS_INFRAGRUPPO"
--
ALTER TABLE CONS_INFRAGRUPPO
ADD CONSTRAINT CONS_INFRAGRUPPO_FK2 FOREIGN KEY (ID_INFRA)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create view "VW_INFRAGRUPPO"
--
CREATE VIEW VW_INFRAGRUPPO (
  ANNO,
  ID_ENTE,
  ID_CONTO,
  IMPORTO,
  IMPORTO_DA_ALTRI
) AS
    SELECT a.anno,
           a.id_ente,
           a.id_conto,
           SUM(NVL(a.importo_originale, 0)) importo,
           NVL((SELECT SUM(NVL(b.importo_originale, 0))
               FROM cons_infragruppo b
               WHERE b.anno = a.anno
                 AND b.id_conto = a.id_conto
                 AND b.id_infra = a.id_ente), 0) importo_da_altri
      FROM cons_infragruppo a
      GROUP BY anno,
               id_ente,
               id_conto;

--
-- Create view "VW_INFRA_TOTALE"
--
CREATE VIEW VW_INFRA_TOTALE (
  ANNO,
  CONTO,
  IMPORTO_ORIG,
  IMPORTO_RETT,
  IMPORTO_NETTO
) AS
    SELECT anno,
           conto,
           SUM(importo_orig) importo_orig,
           SUM(importo_rett) importo_rett,
           (SUM(importo_orig) + SUM(importo_rett)) importo_netto
      FROM (SELECT i.anno anno,
                   p.CODICE_CONTO conto,
                   SUM(NVL(i.IMPORTO_ORIGINALE, 0)) importo_orig,
                   0 importo_rett
          FROM cons_infragruppo i,
               cons_piacee p
          WHERE i.anno = p.anno
            AND i.ID_CONTO = p.id
          GROUP BY i.anno,
                   p.codice_conto
          UNION
        SELECT r.anno,
               p.CODICE_CONTO conto,
               0 importo_orig,
               SUM(NVL(r.IMPORTO, 0)) importo_rett
          FROM cons_rettifiche r,
               cons_piacee p
          WHERE r.anno = p.anno
            AND r.CODICE_CONTO = p.id
            AND NVL(r.flag_bilancio, 'N') = 'B'
            AND NVL(r.bil_infra, 'N') = 'I'
          GROUP BY r.anno,
                   p.codice_conto)
      GROUP BY anno,
               conto
      ORDER BY 1,
               2;

--
-- Create view "VW_INFRA_ENTE"
--
CREATE VIEW VW_INFRA_ENTE (
  ANNO,
  ID_ENTE,
  CONTO,
  IMPORTO_ORIG,
  IMPORTO_RETT,
  IMPORTO_NETTO
) AS
    SELECT anno,
           id_ente,
           conto,
           SUM(importo_orig) importo_orig,
           SUM(importo_rett) importo_rett,
           (SUM(importo_orig) + SUM(importo_rett)) importo_netto
      FROM (SELECT i.anno anno,
                   i.id_ente,
                   p.CODICE_CONTO conto,
                   SUM(NVL(i.IMPORTO_ORIGINALE, 0)) importo_orig,
                   0 importo_rett
          FROM cons_infragruppo i,
               cons_piacee p
          WHERE i.anno = p.anno
            AND i.ID_CONTO = p.id
          GROUP BY i.anno,
                   i.id_ente,
                   p.codice_conto
          UNION
        SELECT r.anno,
               r.id_ente,
               p.CODICE_CONTO conto,
               0 importo_orig,
               SUM(NVL(r.IMPORTO, 0)) importo_rett
          FROM cons_rettifiche r,
               cons_piacee p
          WHERE r.anno = p.anno
            AND r.CODICE_CONTO = p.id
            AND NVL(r.flag_bilancio, 'N') = 'B'
            AND NVL(r.bil_infra, 'N') = 'I'
          GROUP BY r.anno,
                   r.id_ente,
                   p.codice_conto)
      GROUP BY anno,
               id_ente,
               conto
      ORDER BY 1,
               2;

--
-- Create view "VW_BILANCI_ENTI_VA"
--
CREATE VIEW VW_BILANCI_ENTI_VA (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.CODICE_CONTO, 1, 1), 'A', 1, 'P', 2, 'C', 3, 99) tipo,
           e.id id_conto,
           e.CODICE_CONTO,
           e.descrizione,
           e.ordinamento_stampa,
           (NVL(i.IMPORTO, 0) +
           NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.bil_infra, 'X') = 'B'), 0)
           -
           (
           NVL((SELECT SUM(r.importo_originale)
               FROM cons_infragruppo r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.id_conto = i.codice_conto), 0)
           +
           NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.bil_infra, 'X') = 'I'), 0)
           )
           +
           NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.flag_bilancio, 'X') = 'C'), 0)) importo,
           NVL(i.IMPORTO1, 0) importo1
      FROM cons_piacee_importi i,
           cons_piacee e,
           cons_anagrafica a
      WHERE e.anno = i.anno
        AND e.id = i.CODICE_CONTO
        AND e.ENTE_SOCIETA = 'E'
        AND a.id = i.ID_ENTE
        AND a.TIPO = 'E';

--
-- Create function "TOTALE_CONTO_VA"
--
CREATE FUNCTION totale_conto_va(p_anno         IN NUMBER,
                                p_codice_conto IN VARCHAR2,
                                p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN

    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_va
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_va
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_va n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_va
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_va n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_va
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'--n.codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIIId
    ELSIF p_codice_conto = 'PAIIId'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIIb',
          'PAIIIc')
          AND id_ente = p_ente;
      --  totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIId',
          'PAIIe')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N'
          AND n.id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale CT
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine PT

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_va
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_va n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create view "VW_BILANCI_ENTI_TOT_VA"
--
CREATE VIEW VW_BILANCI_ENTI_TOT_VA (
  ANNO,
  ID_ENTE,
  TIPO,
  CODICE_CONTO,
  DESCRIZIONE,
  IMPORTO,
  IMPORTO1,
  ATTRIBUTO_STAMPA,
  ORDINAMENTO_STAMPA
) AS
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           c.importo,
           c.IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_va c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'N'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           0,
           0,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_va c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'S'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           totale_conto_va(c.anno, c.codice_conto, c.id_ENTE) importo,
           totale_conto_va((c.ANNO - 1), c.codice_conto, c.id_ENTE) importo1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_va c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'T'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           p.descrizione,
           (SELECT SUM(NVL(x.importo, 0))
               FROM vw_bilanci_enti_va x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') importo,
           (SELECT SUM(NVL(x.importo1, 0))
               FROM vw_bilanci_enti_va x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_rettificati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'P'
      ORDER BY tipo,
               ORDINAMENTO_STAMPA;

--
-- Create view "VW_BILANCI_ENTI_NETTIZZATI"
--
CREATE VIEW VW_BILANCI_ENTI_NETTIZZATI (
  ANNO,
  ID_ENTE,
  TIPO,
  ID_CONTO,
  CODICE_CONTO,
  DESCRIZIONE,
  ORDINAMENTO_STAMPA,
  IMPORTO,
  IMPORTO1
) AS
    SELECT i.anno,
           i.id_ente,
           DECODE(SUBSTR(e.codice_conto, 1, 1), 'A', 1, 'P', 2, 'C', 3, 99) tipo,
           e.id id_conto,
           e.codice_conto,
           e.descrizione,
           e.ordinamento_stampa,
           (NVL(i.importo, 0) + NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.bil_infra, 'X') = 'B'), 0) - (NVL((SELECT SUM(r.importo_originale)
               FROM cons_infragruppo r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.id_conto = i.codice_conto), 0) + NVL((SELECT SUM(r.importo)
               FROM cons_rettifiche r
               WHERE r.anno = i.anno
                 AND r.id_ente = i.id_ente
                 AND r.codice_conto = i.codice_conto
                 AND NVL(r.bil_infra, 'X') = 'I'), 0))) importo,
           NVL(i.importo1, 0) importo1
      FROM cons_piacee_importi i,
           cons_piacee e,
           cons_anagrafica a
      WHERE e.anno = i.anno
        AND e.id = i.codice_conto
        AND e.ente_societa = 'E'
        AND a.id = i.id_ente
        AND a.tipo = 'E';

--
-- Create function "TOTALE_CONTO_NETTO1"
--
CREATE FUNCTION totale_conto_netto1(p_anno         IN NUMBER,
                                    p_codice_conto IN VARCHAR2,
                                    p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN

    --calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;

    -- fine risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIVT
    ELSIF p_codice_conto = 'PAIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIVa',
          'PAIVb')
          AND id_ente = p_ente;
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale CT
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine PT

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_NETTO_TOT1"
--
CREATE FUNCTION totale_conto_netto_tot1(p_anno         IN NUMBER,
                                        p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;
  BEGIN
    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo1, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo


    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');
      -- 'PAIIIa',
      --	'PAIIIb',
      --   'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIVT
    ELSIF p_codice_conto = 'PAIVT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIVa',
          'PAIVb');
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');--,
      -- 'PAIIIa',
      --	'PAIIIb',
      --  'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo1, n.importo1), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo1, importo1), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;


      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo1, n.importo1), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_NETTO_TOT"
--
CREATE FUNCTION totale_conto_netto_tot(p_anno         IN NUMBER,
                                       p_codice_conto IN VARCHAR2)
  RETURN NUMBER
  IS

    -- serve per calcolare il Totale Generale dei singoli conti di totale per il Bilancio Aggregato

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN
    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
    ;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
    ;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
    ;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
      ;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
      ;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
      ;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
      ;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
      ;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
      ;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
      ;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
      ;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
      ;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');
      -- 'PAIIIa',
      --	'PAIIIb',
      --   'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIIId
    ELSIF p_codice_conto = 'PAIIId'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIIb',
          'PAIIIc');
      -- totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc');--,
      -- 'PAIIIa',
      --	'PAIIIb',
      --  'PAIIId'); --'PAIIIc', da verificare con Rico
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
      ;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
      ;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
      ;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
      ;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale Conti d'ordine
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      RETURN totale;
    -- fine Conti d'ordine

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
      ;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
      ;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
      ;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
      ;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
      ;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
      ;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
      ;


      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create function "TOTALE_CONTO_NETTO"
--
CREATE FUNCTION totale_conto_netto(p_anno         IN NUMBER,
                                   p_codice_conto IN VARCHAR2,
                                   p_ente         IN NUMBER)
  RETURN NUMBER
  IS

    totale                NUMBER := 0;
    p_EA                  NUMBER := 0;
    p_EB                  NUMBER := 0;
    p_EC                  NUMBER := 0;
    p_ED                  NUMBER := 0;
    p_EE                  NUMBER := 0;

    p_EF26                NUMBER := 0;

    p_risultato_esercizio NUMBER := 0;

  BEGIN

    -- calcolo risultato esercizio
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EA
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EA1',
        'EA2',
        'EA3a',
        'EA3b',
        'EA3c',
        'EA4a',
        'EA4b',
        'EA4c',
        'EA5',
        'EA6',
        'EA7',
        'EA8')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EB
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('EB9',
        'EB10',
        'EB11',
        'EB12a',
        'EB12b',
        'EB12c',
        'EB13',
        'EB14a',
        'EB14b',
        'EB14c',
        'EB14d',
        'EB15',
        'EB16',
        'EB17',
        'EB18')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
      INTO p_EC
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
      INTO p_ED
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto IN ('ED22', 'ED23')
        AND id_ente = p_ente;

    SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
      INTO p_EE
      FROM vw_bilanci_enti_nettizzati n,
           cons_piacee p
      WHERE n.anno = p_anno
        AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
        AND n.id_ente = p_ente
        AND p.anno = n.anno
        AND p.id = n.id_conto
        AND NVL(p.aggregato, 'X') = 'N';

    -- calcolo EF26
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO p_EF26
      FROM vw_bilanci_enti_nettizzati
      WHERE anno = p_anno
        AND codice_conto = 'EF26'
        AND id_ente = p_ente;

    p_risultato_esercizio := p_EA - p_EB + p_EC + p_ED + p_EE - p_EF26;
    -- fine calcolo risultato esercizio

    -- calcolo totale AAT
    IF p_codice_conto = 'AAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'AA'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine AAT
    -- calcolo totale ABIT
    ELSIF p_codice_conto = 'ABIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABI1', 'ABI2', 'ABI3', 'ABI4', 'ABI5', 'ABI6', 'ABI9')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIT
    -- calcolo totale ABIIIT
    ELSIF p_codice_conto = 'ABIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABII1.1', 'ABII1.2', 'ABII1.3', 'ABII1.9', 'ABIII2.1', 'ABIII2.2', 'ABIII2.3',
          'ABIII2.4',
          'ABIII2.5',
          'ABIII2.6',
          'ABIII2.7',
          'ABIII2.8',
          'ABIII2.9',
          'ABIII2.99',
          'ABIII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIIIT
    -- calcolo totale ABIVT
    ELSIF p_codice_conto = 'ABIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ABIV1a',
          'ABIV1b',
          'ABIV1c',
          'ABIV2a',
          'ABIV2b',
          'ABIV2c',
          'ABIV2d',
          'ABIV3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ABIVT
    -- insert totale ABT
    ELSIF p_codice_conto = 'ABT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AB'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ABT
    -- calcolo totale ACIT
    ELSIF p_codice_conto = 'ACIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'ACI'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIT
    -- calcolo totale ACIIT
    ELSIF p_codice_conto = 'ACIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACII1a', 'ACII1b', 'ACII1c', 'ACII2a', 'ACII2b', 'ACII2c', 'ACII2d', 'ACII3', 'ACII4a', 'ACII4b', 'ACII4c')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIT
    -- calcolo totale ACIIIT
    ELSIF p_codice_conto = 'ACIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIII1', 'ACIII2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIIIT
    -- calcolo totale ACIVT
    ELSIF p_codice_conto = 'ACIVT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ACIV1a',
          'ACIV1b',
          'ACIV2',
          'ACIV3',
          'ACIV4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ACIVT
    -- insert totale ACT
    ELSIF p_codice_conto = 'ACT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'AC'--n.codice_conto in ('ACII1a','ACII1b','ACII1c','ACII2a','ACII2b','ACII2c','ACII2d','ACII3','ACII4a','ACII4b','ACII4c')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND p.aggregato = 'N';
      RETURN totale;
    -- fine ACT
    -- calcolo totale ADT
    ELSIF p_codice_conto = 'ADT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('AD1', 'AD2')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ADT
    -- insert totale AT
    ELSIF p_codice_conto = 'AT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('AA', 'AB', 'AC', 'AD')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine AT
    -- calcolo totale PAIIIT
    ELSIF p_codice_conto = 'PAIIIT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc')
          AND id_ente = p_ente;

      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;

    -- calcolo totale PAIIId
    ELSIF p_codice_conto = 'PAIIId'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAIIIb',
          'PAIIIc')
          AND id_ente = p_ente;
      --  totale := totale + nvl(p_risultato_esercizio,0);
      RETURN totale;

    -- calcolo totale PAT
    ELSIF p_codice_conto = 'PAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PAI',
          'PAIIa',
          'PAIIb',
          'PAIIc',
          'PAIId',
          'PAIIe')
          AND id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PAT
    -- calcolo totale PBT
    ELSIF p_codice_conto = 'PBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PB1', 'PB2', 'PB3', 'PB4')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PBT
    -- calcolo totale PCT
    ELSIF p_codice_conto = 'PCT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto = 'PC'
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PCT
    -- calcolo totale PDT
    ELSIF p_codice_conto = 'PDT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PD1a',
          'PD1b',
          'PD1c',
          'PD1d',
          'PD2',
          'PD3',
          'PD4a',
          'PD4b',
          'PD4c',
          'PD4d',
          'PD4e',
          'PD5a',
          'PD5b',
          'PD5c',
          'PD5d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PDT
    -- calcolo totale PET
    ELSIF p_codice_conto = 'PET'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('PEI',
          'PEII1a',
          'PEII1b',
          'PEII2',
          'PEII3')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine PET
    -- calcolo totale PT
    ELSIF p_codice_conto = 'PT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('PA', 'PB', 'PC', 'PD', 'PE')
          AND n.codice_conto NOT IN ('PAIIIa', 'PAIIIb', 'PAIIIc', 'PAIVa', 'PAIVb') --richiesta Manuela Puglia
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N'
          AND n.id_ente = p_ente;
      totale := totale + NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine PT

    -- calcolo totale CT
    ELSIF p_codice_conto = 'CT'
    THEN
      SELECT NVL(SUM(NVL(n.importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) = 'C0'
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine PT

    --*************  calcoli CE ****************
    -- calcolo totale EAT
    ELSIF p_codice_conto = 'EAT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EAT
    -- calcolo totale EBT
    ELSIF p_codice_conto = 'EBT'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EBT

    -- calcolo totale EAB
    ELSIF p_codice_conto = 'EAB'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 2), 'EB', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND SUBSTR(n.codice_conto, 1, 2) IN ('EA', 'EB')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EAB

    -- calcolo totale ECT1
    ELSIF p_codice_conto = 'ECT1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine ECT1
    -- calcolo totale ECT2
    ELSIF p_codice_conto = 'ECT2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EC21a', 'EC21b')
          AND id_ente = p_ente;
      RETURN totale;

    -- fine ECT2

    -- insert totale ECT
    ELSIF p_codice_conto = 'ECT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine ECT
    -- calcolo totale EDT
    ELSIF p_codice_conto = 'EDT'
    THEN
      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EDT
    -- calcolo totale EET1
    ELSIF p_codice_conto = 'EET1'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET1
    -- calcolo totale EET2
    ELSIF p_codice_conto = 'EET2'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND id_ente = p_ente;
      RETURN totale;
    -- fine EET2
    -- insert totale EET
    ELSIF p_codice_conto = 'EET'
    THEN
      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EE25', -n.importo, n.importo), 0)), 0)
        INTO totale
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';
      RETURN totale;
    -- fine EET

    -- calcolo totale RPI
    ELSIF p_codice_conto = 'RPI'
    THEN
      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EA
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EA1',
          'EA2',
          'EA3a',
          'EA3b',
          'EA3c',
          'EA4a',
          'EA4b',
          'EA4c',
          'EA5',
          'EA6',
          'EA7',
          'EA8')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(importo, 0)), 0)
        INTO p_EB
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('EB9',
          'EB10',
          'EB11',
          'EB12a',
          'EB12b',
          'EB12c',
          'EB13',
          'EB14a',
          'EB14b',
          'EB14c',
          'EB14d',
          'EB15',
          'EB16',
          'EB17',
          'EB18')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC21', -n.importo, n.importo), 0)), 0)
        INTO p_EC
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EC19a', 'EC19b', 'EC19c', 'EC20', 'EC21a', 'EC21b')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      SELECT NVL(SUM(NVL(DECODE(codice_conto, 'ED23', -importo, importo), 0)), 0)
        INTO p_ED
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND codice_conto IN ('ED22', 'ED23')
          AND id_ente = p_ente;

      SELECT NVL(SUM(NVL(DECODE(SUBSTR(n.codice_conto, 1, 4), 'EC25', -n.importo, n.importo), 0)), 0)
        INTO p_EE
        FROM vw_bilanci_enti_nettizzati n,
             cons_piacee p
        WHERE n.anno = p_anno
          AND n.codice_conto IN ('EE24a', 'EE24b', 'EE24c', 'EE24d', 'EE24e', 'EE25a', 'EE25b', 'EE25c', 'EE25d')
          AND n.id_ente = p_ente
          AND p.anno = n.anno
          AND p.id = n.id_conto
          AND NVL(p.aggregato, 'X') = 'N';

      totale := p_EA - p_EB + p_EC + p_ED + p_EE;
      RETURN totale;
    -- fine RPI
    -- calcolo totale EG27
    ELSIF (p_codice_conto = 'EG27'
      OR p_codice_conto = 'PAIII')
    THEN
      totale := NVL(p_risultato_esercizio, 0);
      RETURN totale;
    -- fine EG27
    END IF;
    RETURN (0);
  END;
/

--
-- Create view "VW_BILANCI_ENTI_NETT_TOT"
--
CREATE VIEW VW_BILANCI_ENTI_NETT_TOT (
  ANNO,
  ID_ENTE,
  TIPO,
  CODICE_CONTO,
  DESCRIZIONE,
  IMPORTO,
  IMPORTO1,
  ATTRIBUTO_STAMPA,
  ORDINAMENTO_STAMPA
) AS
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           c.importo,
           c.IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_nettizzati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'N'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           0,
           0,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_nettizzati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'S'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           c.descrizione,
           totale_conto_netto(c.anno, c.codice_conto, c.id_ENTE) importo,
           totale_conto_netto1(c.ANNO, c.codice_conto, c.id_ENTE) importo1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_nettizzati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'T'
      UNION
    SELECT c.anno,
           c.id_ente,
           c.tipo,
           c.codice_conto,
           p.descrizione,
           (SELECT SUM(NVL(x.importo, 0))
               FROM vw_bilanci_enti_nettizzati x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') importo,
           (SELECT SUM(NVL(x.importo1, 0))
               FROM vw_bilanci_enti_nettizzati x,
                    cons_piacee y
               WHERE SUBSTR(x.codice_conto, 1, LENGTH(c.codice_conto)) = c.codice_conto
                 AND y.anno = x.anno
                 AND y.id = x.ID_CONTO
                 AND NVL(y.aggregato, 'X') = 'N') IMPORTO1,
           p.attributo_stampa,
           p.ordinamento_stampa
      FROM vw_bilanci_enti_rettificati c,
           cons_piacee p
      WHERE c.anno = p.anno
        AND c.ID_CONTO = p.id
        AND NVL(p.aggregato, 'X') = 'P'
      ORDER BY tipo,
               ORDINAMENTO_STAMPA;

--
-- Create table "CONS_BILANCI"
--
CREATE TABLE CONS_BILANCI (
  ANNO             NUMBER            NOT NULL,
  ID_ENTE          NUMBER            NOT NULL,
  CODICE_CONTO     VARCHAR2(20 BYTE) NOT NULL,
  IMPORTO          NUMBER            NOT NULL,
  IMPORTO1         NUMBER,
  DATA_CARICAMENTO DATE,
  CONSTRAINT CONS_BILANCI_PK PRIMARY KEY (ANNO, ID_ENTE, CODICE_CONTO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                           NEXT 1 M
                                                                                                           MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_BILANCI.IMPORTO IS 'importo anno n';
COMMENT ON COLUMN CONS_BILANCI.IMPORTO1 IS 'importo anno n-1';

--
-- Create foreign key "CONS_BILANCI_FK1" on table "CONS_BILANCI"
--
ALTER TABLE CONS_BILANCI
ADD CONSTRAINT CONS_BILANCI_FK1 FOREIGN KEY (ID_ENTE)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create table "CONS_ANA_SEDI"
--
CREATE TABLE CONS_ANA_SEDI (
  ID        NUMBER              NOT NULL,
  ID_ANA    NUMBER              NOT NULL,
  NOME_SEDE VARCHAR2(2000 BYTE) NOT NULL,
  INDIRIZZO VARCHAR2(2000 BYTE) NOT NULL,
  TELEFONO  VARCHAR2(100 BYTE),
  EMAIL     VARCHAR2(2000 BYTE),
  PEC       VARCHAR2(2000 BYTE),
  CONSTRAINT CONS_ANA_SEDI_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                   NEXT 1 M
                                                                                   MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create foreign key "CONS_ANA_SEDI_FK" on table "CONS_ANA_SEDI"
--
ALTER TABLE CONS_ANA_SEDI
ADD CONSTRAINT CONS_ANA_SEDI_FK FOREIGN KEY (ID_ANA)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create table "CONS_ANA_CONTABILE"
--
CREATE TABLE CONS_ANA_CONTABILE (
  ID_ANA               NUMBER           NOT NULL,
  ANNO                 NUMBER           NOT NULL,
  TIPO_CONTABILITA     VARCHAR2(1 BYTE) NOT NULL,
  QUOTA_PARTECIPAZIONE NUMBER,
  RISULTATO_ECONOMICO  NUMBER,
  CREDITI_CONTROLLANTE NUMBER,
  DEBITI_CONTROLLANTE  NUMBER,
  SOGLIA_IRRILEVANZA   NUMBER           DEFAULT 10000,
  PERC_PARTECIPAZIONE  NUMBER,
  COMPENSI_AMM         NUMBER,
  COMPENSI_REV         NUMBER,
  CREDITI_OLTRE        NUMBER,
  DEBITI_OLTRE         NUMBER,
  GAP_SN               VARCHAR2(1 BYTE),
  FLAG_DC              VARCHAR2(1 BYTE),
  FLAG_QP              VARCHAR2(1 BYTE),
  CONSTRAINT CONS_ANA_CONTABILE_PK PRIMARY KEY (ID_ANA, ANNO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                  NEXT 1 M
                                                                                                  MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_ANA_CONTABILE.FLAG_DC IS '= S scriture per Differenze di consolidamento generate';
COMMENT ON COLUMN CONS_ANA_CONTABILE.FLAG_QP IS '= S scritture per quote di partinenza di terzi generate';
COMMENT ON COLUMN CONS_ANA_CONTABILE.GAP_SN IS 'se = S l''Ente/Azienda va considerata nel GAP dell''anno';
COMMENT ON COLUMN CONS_ANA_CONTABILE.SOGLIA_IRRILEVANZA IS 'importo sotto il quale le differenze si ritengono irrilevanti (punto 4.3 del principio contabile applicato)';
COMMENT ON COLUMN CONS_ANA_CONTABILE.TIPO_CONTABILITA IS 'F= finaziaria, P = economico-patrimoniale';

--
-- Create foreign key "CONS_ANA_CONT_FK" on table "CONS_ANA_CONTABILE"
--
ALTER TABLE CONS_ANA_CONTABILE
ADD CONSTRAINT CONS_ANA_CONT_FK FOREIGN KEY (ID_ANA)
REFERENCES CONS_ANAGRAFICA (ID);

--
-- Create procedure "QUOTE_PERTINENZA_TERZI"
--
CREATE PROCEDURE QUOTE_PERTINENZA_TERZI(p_anno IN NUMBER)
  IS
    ord_riga        NUMBER := 0;

    codice_PAIIIb   NUMBER := 0;
    codice_PAIIIc   NUMBER := 0;
    codice_PAIIId   NUMBER := 0;


    verifica_PAIIIb NUMBER := 0;
    verifica_PAIIIc NUMBER := 0;
    verifica_PAIIId NUMBER := 0;

    totale_PAIIIb   NUMBER := 0;
    totale_PAIIIc   NUMBER := 0;
    totale_PAIIId   NUMBER := 0;

    -- cursore Fondo di dotazione e riserve di pertinenza di terzi (si espone sul conto PAIIIb la somma degli importi nei conti 'PAI','PAIIa','PAIIb','PAIIc')
    CURSOR fondo_dotazione IS
        SELECT b.id_ente,
               a.DENOMINAZIONE,
               b.id_conto,
               b.codice_conto,
               b.DESCRIZIONE desc_conto,
               b.importo importo_bilancio,
               NVL((100 - NVL(c.PERC_PARTECIPAZIONE, 0)), 0) perc_pertinenza,
               NVL(ROUND(NVL(b.importo, 0) * (100 - NVL(c.PERC_PARTECIPAZIONE, 0)) / 100, 2), 0) imp_pertinenza
          FROM vw_bilanci_enti_nettizzati b,
               cons_ana_contabile c,
               CONS_ANAGRAFICA a
          WHERE b.anno = p_anno
            AND b.CODICE_CONTO IN ('PAI', 'PAIIa', 'PAIIb', 'PAIIc', 'PAIId', 'PAIIe')
            AND NVL(b.importo, 0) <> 0
            AND c.ID_ANA = b.ID_ENTE
            AND c.ANNO = b.ANNO
            AND NVL(c.PERC_PARTECIPAZIONE, 0) < 100
            AND NVL(c.flag_qp, 'N') = 'N'
            AND a.ID = b.id_ente
            AND a.id <> 1
          ORDER BY 1;

    -- cursore Risultato economico dell'esercizio di pertinenza di terzi (si espone sul conto PAIIIc e EH28 la somma degli importi sul conto PAIII)
    CURSOR risultato_es IS
        SELECT b.id_ente,
               a.DENOMINAZIONE,
               b.id_conto,
               b.codice_conto,
               b.DESCRIZIONE desc_conto,
               b.importo importo_bilancio,
               NVL((100 - NVL(c.PERC_PARTECIPAZIONE, 0)), 0) perc_pertinenza,
               NVL(ROUND(NVL(totale_conto_netto(p_anno, b.codice_conto, b.id_ente), 0) * (100 - NVL(c.PERC_PARTECIPAZIONE, 0)) / 100, 2), 0) imp_pertinenza
          FROM vw_bilanci_enti_nettizzati b,
               cons_ana_contabile c,
               CONS_ANAGRAFICA a
          WHERE b.anno = p_anno
            AND b.CODICE_CONTO = 'PAIII'
            AND NVL(b.importo, 0) <> 0
            AND c.ID_ANA = b.ID_ENTE
            AND c.ANNO = b.ANNO
            AND NVL(c.PERC_PARTECIPAZIONE, 0) < 100
            AND NVL(c.flag_qp, 'N') IN ('N', 'F')
            AND a.ID = b.id_ente
            AND a.id <> 1
          ORDER BY 1;

  BEGIN

    -- inserisco le rettifiche per il Fondo di dotazione e riserve di pertinenza di terzi PAIIIb
    BEGIN
      SELECT id
        INTO codice_PAIIIb
        FROM cons_piacee
        WHERE anno = p_anno
          AND codice_conto = 'PAIIIb';
    EXCEPTION
      WHEN no_data_found THEN codice_PAIIIb := 0;
    END;

    -- verifico che non siano già inserite rettificche per il conto PAIIIb
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO verifica_PAIIIb
      FROM cons_rettifiche
      WHERE anno = p_anno
        AND codice_conto = codice_PAIIIb
        AND NVL(flag_bilancio, 'N') = 'C';

    IF codice_PAIIIb <> 0
      AND verifica_PAIIIb = 0
    THEN
      FOR f IN fondo_dotazione
      LOOP

        SELECT seq_rett.nextval
          INTO ord_riga
          FROM dual;
        IF f.imp_pertinenza <> 0
        THEN
          INSERT INTO cons_rettifiche (
            ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
          )
          VALUES (p_anno, f.id_ente, codice_PAIIIb, ord_riga, 'C', f.imp_pertinenza, 'QPT - Rilevazione Fondo di dotazione e riserve di pertinenza di terzi per ' || f.DENOMINAZIONE || ' su ' || f.codice_conto || ' - ' || f.desc_conto || ' con percentuale di pertinenza di pertinenza di terzi pari a ' || f.perc_pertinenza || '%');
          COMMIT;
        END IF;
        UPDATE cons_ana_contabile a
          SET a.flag_qp = 'F'
          WHERE a.anno = p_anno
          AND a.id_ana = f.id_ente;
        COMMIT;
        totale_PAIIIb := totale_PAIIIb + NVL(f.imp_pertinenza, 0);
      END LOOP;

    END IF;


    -- inserisco le rettifiche per il Risultato d'esercizio di pertinenza di terzi PAIIIc
    BEGIN
      SELECT id
        INTO codice_PAIIIc
        FROM cons_piacee
        WHERE anno = p_anno
          AND codice_conto = 'PAIIIc';
    EXCEPTION
      WHEN no_data_found THEN codice_PAIIIc := 0;
    END;

    -- verifico che non siano già inserite rettificche per il conto PAIIIc
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO verifica_PAIIIc
      FROM cons_rettifiche
      WHERE anno = p_anno
        AND codice_conto = codice_PAIIIc
        AND NVL(flag_bilancio, 'N') = 'C';


    IF codice_PAIIIc <> 0
      AND verifica_PAIIIc = 0
    THEN
      FOR r IN risultato_es
      LOOP

        SELECT seq_rett.nextval
          INTO ord_riga
          FROM dual;

        IF r.imp_pertinenza <> 0
        THEN
          INSERT INTO cons_rettifiche (
            ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
          )
          VALUES (p_anno, r.id_ente, codice_PAIIIc, ord_riga, 'C', r.imp_pertinenza, 'QPT - Rilevazione Risultato economico di esercizio di pertinenza di terzi per ' || r.DENOMINAZIONE || ' su ' || r.codice_conto || ' - ' || r.desc_conto || ' con percentuale di pertinenza di terzi pari a ' || r.perc_pertinenza || '%');
          COMMIT;
        END IF;
        UPDATE cons_ana_contabile a
          SET a.flag_qp = 'S'
          WHERE a.anno = p_anno
          AND a.id_ana = r.id_ente;
        COMMIT;
        totale_PAIIIc := totale_PAIIIc + NVL(r.imp_pertinenza, 0);
      END LOOP;

    END IF;

    -- inserisco le rettifiche per Patrimonio netto di pertinenza di terzi PAIIId
    BEGIN
      SELECT id
        INTO codice_PAIIId
        FROM cons_piacee
        WHERE anno = p_anno
          AND codice_conto = 'PAIIId';
    EXCEPTION
      WHEN no_data_found THEN codice_PAIIId := 0;
    END;

    -- verifico che non siano già inserite rettificche per il conto PAIIIb
    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO verifica_PAIIId
      FROM cons_rettifiche
      WHERE anno = p_anno
        AND codice_conto = codice_PAIIId
        AND NVL(flag_bilancio, 'N') = 'C';

    IF codice_PAIIId <> 0
      AND verifica_PAIIId = 0
    THEN

      totale_PAIIId := totale_PAIIIb + totale_PAIIIc;

      SELECT seq_rett.nextval
        INTO ord_riga
        FROM dual;
      IF totale_PAIIId <> 0
      THEN
        INSERT INTO cons_rettifiche (
          ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
        )
        VALUES (p_anno, 1, codice_PAIIId, ord_riga, 'C', totale_PAIIId, 'QPT - Rilevazione Patrimonio netto di pertinenza di terzi');
        COMMIT;
      END IF;

    END IF;

  END;
/

--
-- Create procedure "CARICA_INFRAGRUPPO"
--
CREATE PROCEDURE carica_infragruppo(p_anno IN NUMBER,
                                    p_ente IN NUMBER)
  IS
    --************************
    --****** ATTENZIONE ******
    -- per il momento va usata solo con p_ente = 1 (Regione) per caricare le infra regione
    -- ********************************

    verifica_infra NUMBER := 0;

  BEGIN

    SELECT COUNT(*)
      INTO verifica_infra
      FROM cons_infragruppo
      WHERE anno = p_anno
        AND id_ente = p_ente;

    IF verifica_infra = 0
    THEN
      INSERT INTO cons_infragruppo (
        anno, id_ente, id_infra, id_conto, importo_originale
      )
      SELECT p_anno, p_ente, a.id, p.id, NVL(SUM(NVL(t.saldo, 0)), 0) importo
      FROM gat2.vw_nb_mastrini_tp t
      , cons_anagrafica a
      , cons_ana_contabile c
      , cons_piacee p
      WHERE TO_CHAR(t.data_registrazione, 'yyyy') = p_anno
      AND t.id_cred_deb = a.id_sic
      AND t.conto <> 'ACIV1a'
      AND p.anno = p_anno
      AND p.codice_conto = t.conto
      AND p.ente_societa = 'E'
      AND c.id_ana = a.id
      AND c.anno = p_anno
      AND NVL(c.gap_sn, 'N') = 'S'
      GROUP BY p_anno, p_ente, a.id, p.id
        HAVING NVL(SUM(NVL(saldo, 0)), 0) > 0;
      COMMIT;
    END IF;

  END;
/

--
-- Create view "VW_DIFF_CONSOLIDAMENTO"
--
CREATE VIEW VW_DIFF_CONSOLIDAMENTO (
  ANNO,
  ID_ANA,
  DENOMINAZIONE,
  PERC_PARTECIPAZIONE,
  QUOTA_PARTECIPAZIONE,
  PATRIMONIO_NETTO,
  DIFF_CONS
) AS
    SELECT anno,
           id_ana,
           denominazione,
           perc_partecipazione,
           quota_partecipazione,
           patrimonio_netto,
           ROUND((quota_partecipazione - (perc_partecipazione * patrimonio_netto / 100)), 2) diff_cons
      FROM (SELECT anno,
                   id_ana,
                   denominazione,
                   perc_partecipazione,
                   quota_partecipazione,
                   SUM(patrimonio_netto) patrimonio_netto
          FROM (SELECT c.anno,
                       c.id_ana,
                       a.denominazione,
                       c.perc_partecipazione,
                       c.quota_partecipazione,
                       SUM(NVL(b.importo, 0)) patrimonio_netto
              FROM cons_ana_contabile c,
                   vw_bilanci_enti_nettizzati b,
                   cons_anagrafica a
              WHERE NVL(c.quota_partecipazione, 0) > 0
                AND NVL(c.perc_partecipazione, 0) > 0
                AND b.id_ente = c.id_ana
                AND b.anno = c.anno
                AND b.codice_conto IN (
                'PAI',
                'PAIIa',
                'PAIIb',
                'PAIIc',
                'PAIId',
                'PAIIe'
                )
                AND NVL(b.importo, 0) <> 0
                AND a.id = c.id_ana
              GROUP BY c.anno,
                       c.id_ana,
                       a.denominazione,
                       c.perc_partecipazione,
                       c.quota_partecipazione
              UNION
            SELECT c.anno,
                   c.id_ana,
                   a.denominazione,
                   c.perc_partecipazione,
                   c.quota_partecipazione,
                   SUM(totale_conto_netto(b.anno, b.codice_conto, c.id_ana)) patrimonio_netto
              FROM cons_ana_contabile c,
                   vw_bilanci_enti_nettizzati b,
                   cons_anagrafica a
              WHERE NVL(c.quota_partecipazione, 0) > 0
                AND NVL(c.perc_partecipazione, 0) > 0
                AND b.id_ente = c.id_ana
                AND b.anno = c.anno
                AND b.codice_conto = 'PAIII'
                AND NVL(b.importo, 0) <> 0
                AND a.id = c.id_ana
              GROUP BY c.anno,
                       c.id_ana,
                       a.denominazione,
                       c.perc_partecipazione,
                       c.quota_partecipazione)
          GROUP BY anno,
                   id_ana,
                   denominazione,
                   perc_partecipazione,
                   quota_partecipazione)
      ORDER BY 1,
               2,
               3;

--
-- Create table "FIN_T_MENU_WEB"
--
CREATE TABLE FIN_T_MENU_WEB (
  CODICE       NUMBER,
  CODICE_PADRE NUMBER,
  TITOLO       VARCHAR2(100 BYTE),
  PAGINA       NUMBER,
  DESCRIZIONE  VARCHAR2(2000 BYTE),
  HELP_VOCE    VARCHAR2(4000 BYTE),
  ORDINAMENTO  NUMBER(5, 0),
  PARAMETRI    VARCHAR2(4000 BYTE),
  VALORI       VARCHAR2(4000 BYTE),
  CONSTRAINT FIN_MWPK PRIMARY KEY (CODICE) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                               NEXT 1 M
                                                                               MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create function "SIC_ALBERO_MENU_DESC"
--
CREATE FUNCTION SIC_ALBERO_MENU_DESC(wcodice NUMBER)
  RETURN VARCHAR2
  IS

    wcodice_padre NUMBER;
    wtitolo       VARCHAR2(4000);
  BEGIN

    BEGIN
      SELECT codice_padre,
             titolo
        INTO wcodice_padre,
             wtitolo
        FROM fin_t_menu_web
        WHERE codice = wcodice;
    END;

    IF wcodice_padre IS NULL
    THEN
      RETURN wtitolo;
    ELSE
      RETURN wtitolo || ' > ' || SIC_ALBERO_MENU_DESC(wcodice_padre);
    END IF;

  END;
/

--
-- Create function "SIC_ALBERO_MENU"
--
CREATE FUNCTION SIC_ALBERO_MENU(wcodice NUMBER)
  RETURN VARCHAR2
  IS

    wcodice_padre NUMBER;

  BEGIN

    BEGIN
      SELECT codice_padre
        INTO wcodice_padre
        FROM fin_t_menu_web
        WHERE codice = wcodice;
    END;

    IF wcodice_padre IS NULL
    THEN
      RETURN '...';
    ELSE
      RETURN '...' || SIC_ALBERO_MENU(wcodice_padre);
    END IF;

  END;
/

--
-- Create table "FIN_T_MENU_RUOLI_WEB"
--
CREATE TABLE FIN_T_MENU_RUOLI_WEB (
  CODICE       NUMBER,
  RUOLO        VARCHAR2(100 BYTE),
  LEGGI_SCRIVI VARCHAR2(1 BYTE),
  CODICE_PADRE NUMBER,
  TITOLO       VARCHAR2(100 BYTE),
  CONSTRAINT FIN_PK_RUOLI_WEB PRIMARY KEY (CODICE, RUOLO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 128 K
                                                                                              NEXT 1 M
                                                                                              MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create foreign key "FIN_FK_MENU_WEB" on table "FIN_T_MENU_RUOLI_WEB"
--
ALTER TABLE FIN_T_MENU_RUOLI_WEB
ADD CONSTRAINT FIN_FK_MENU_WEB FOREIGN KEY (CODICE)
REFERENCES FIN_T_MENU_WEB (CODICE) ON DELETE CASCADE;

--
-- Create table "FIN_T_MENU_ASSOCIAZIONI"
--
CREATE TABLE FIN_T_MENU_ASSOCIAZIONI (
  CODICE         NUMBER,
  NOME_PROGRAMMA VARCHAR2(100 BYTE),
  TIPO           VARCHAR2(1 BYTE),
  DESCRIZIONE    VARCHAR2(2000 BYTE),
  CONSTRAINT FIN_PK_0015 PRIMARY KEY (CODICE, NOME_PROGRAMMA) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                  NEXT 1 M
                                                                                                  MAXEXTENTS UNLIMITED)
)
NOLOGGING;

--
-- Create foreign key "FIN_FK_0002" on table "FIN_T_MENU_ASSOCIAZIONI"
--
ALTER TABLE FIN_T_MENU_ASSOCIAZIONI
ADD CONSTRAINT FIN_FK_0002 FOREIGN KEY (CODICE)
REFERENCES FIN_T_MENU_WEB (CODICE);

--
-- Create table "CONS_BIL_NETTIZZATO"
--
CREATE TABLE CONS_BIL_NETTIZZATO (
  ANNO         NUMBER NOT NULL,
  ID_CONTO     NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  CODICE_CONTO VARCHAR2(10 BYTE)
)
LOGGING;

--
-- Create procedure "ELIDI"
--
CREATE PROCEDURE ELIDI(p_anno IN NUMBER)
  IS

    p_importo  NUMBER := 0;
    p_importo1 NUMBER := 0;
    p_id_conto NUMBER := 0;




    -- ***************************

    CURSOR sp IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'N';

    CURSOR totali IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'T';

    CURSOR agg IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'S';

    CURSOR sub IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'P';


  BEGIN

    DELETE cons_bil_nettizzato
      WHERE anno = p_anno;
    COMMIT;

    -- inserisco conti di dettaglio
    FOR s IN sp
    LOOP
      SELECT NVL(SUM(NVL(importo, 0)), 0),
             NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_importo,
             p_importo1
        FROM vw_bilanci_enti_nettizzati
        WHERE anno = p_anno
          AND id_conto = s.id;

      INSERT INTO cons_bil_nettizzato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, s.id, p_importo, p_importo1, s.codice_conto);
      COMMIT;

    END LOOP;

    FOR a IN agg
    LOOP
      INSERT INTO cons_bil_nettizzato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, a.id, NULL, NULL, a.codice_conto);
      COMMIT;
    END LOOP;

    FOR s IN sub
    LOOP
      INSERT INTO cons_bil_nettizzato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, s.id, (SELECT SUM(NVL(x.importo, 0)) FROM cons_bil_nettizzato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto) + 1) <> s.codice_conto || 'I'), (SELECT SUM(NVL(x.importo1, 0)) FROM cons_bil_nettizzato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto), s.codice_conto);
      COMMIT;
    END LOOP;



    --inserisco totali
    FOR t IN totali
    LOOP
      p_importo := totale_conto_netto_tot(p_anno, t.codice_conto);
      p_importo1 := totale_conto_netto_tot1(p_anno, t.codice_conto);

      INSERT INTO cons_bil_nettizzato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, t.id, p_importo, p_importo1, t.codice_conto);
      COMMIT;
      p_importo := 0;
      p_importo1 := 0;
    END LOOP;



  END;
/

--
-- Create table "FND_REPORTS"
--
CREATE TABLE FND_REPORTS (
  ID                    NUMBER,
  DESCRIZIONE           VARCHAR2(2000 BYTE),
  INTESTAZIONE01        VARCHAR2(200 BYTE),
  INTESTAZIONE02        VARCHAR2(200 BYTE),
  INTESTAZIONE_DESTRA   VARCHAR2(200 BYTE),
  INTESTAZIONE_SINISTRA VARCHAR2(200 BYTE),
  PIEDE01               VARCHAR2(200 BYTE),
  PIEDE02               VARCHAR2(200 BYTE),
  PIEDE_DESTRA          VARCHAR2(200 BYTE),
  PIEDE_SINISTRA        VARCHAR2(200 BYTE),
  ID_CATEGORIA          NUMBER,
  NOME_REPORTS          VARCHAR2(15 BYTE),
  P01_ANNO              NUMBER(4, 0),
  P01_ANNO_DESC         VARCHAR2(50 BYTE),
  P02_ANNO              NUMBER(4, 0),
  P02_ANNO_DESC         VARCHAR2(50 BYTE),
  P03_DATA              DATE,
  P03_DATA_DESC         VARCHAR2(50 BYTE),
  P04_DATA              DATE,
  P04_DATA_DESC         VARCHAR2(50 BYTE),
  P05_CHAR              VARCHAR2(30 BYTE),
  P05_CHAR_DESC         VARCHAR2(50 BYTE),
  P06_CHAR              VARCHAR2(30 BYTE),
  P06_CHAR_DESC         VARCHAR2(50 BYTE),
  P07_CHAR              VARCHAR2(30 BYTE),
  P07_CHAR_DESC         VARCHAR2(50 BYTE),
  P08_CHAR              VARCHAR2(30 BYTE),
  P08_CHAR_DESC         VARCHAR2(50 BYTE),
  P09_NUM               NUMBER,
  P09_NUM_DESC          VARCHAR2(50 BYTE),
  P10_NUM               NUMBER,
  P10_NUM_DESC          VARCHAR2(50 BYTE),
  P11_NUM               NUMBER,
  P11_NUM_DESC          VARCHAR2(50 BYTE),
  P12_NUM               NUMBER,
  P12_NUM_DESC          VARCHAR2(50 BYTE),
  P13_CAPITOLO          VARCHAR2(6 BYTE),
  P13_CAPITOLO_DESC     VARCHAR2(50 BYTE),
  PAGINA                NUMBER,
  ORDINAMENTO           NUMBER(5, 0),
  UTENTE                VARCHAR2(100 BYTE),
  HELP                  VARCHAR2(4000 BYTE),
  CONSTRAINT FND_REPORTS_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                 NEXT 1 M
                                                                                 MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create table "FND_REPORTS_IMPORTI_MAN"
--
CREATE TABLE FND_REPORTS_IMPORTI_MAN (
  NOME_CAMPO_REPORT        VARCHAR2(2000 BYTE),
  DESCRIZIONE_CAMPO_REPORT VARCHAR2(2000 BYTE),
  IMPORTO                  NUMBER(15, 2),
  VALORE_PARAMETRO_ANNO    NUMBER(4, 0),
  ID_REPORT                NUMBER,
  UTENTE_CREAZIONE         VARCHAR2(200 BYTE),
  DATA_CREAZIONE           DATE,
  UTENTE_AGGIORNAMENTO     VARCHAR2(200 BYTE),
  DATA_AGGIORNAMENTO       DATE,
  CONSTRAINT FNDREPIMPORTI_PK PRIMARY KEY (ID_REPORT, NOME_CAMPO_REPORT, VALORE_PARAMETRO_ANNO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                                                    NEXT 1 M
                                                                                                                                    MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN FND_REPORTS_IMPORTI_MAN.DESCRIZIONE_CAMPO_REPORT IS 'descrizione dell''importo manuale';
COMMENT ON COLUMN FND_REPORTS_IMPORTI_MAN.ID_REPORT IS 'vedi foreign key; è preferibile al nome report perchè teoricamente uno stesso nome può essere utilizzato per estrazioni diverse.';
COMMENT ON COLUMN FND_REPORTS_IMPORTI_MAN.NOME_CAMPO_REPORT IS 'nome del segnaposto che nel report deve contenere l''importo manuale';
COMMENT ON COLUMN FND_REPORTS_IMPORTI_MAN.VALORE_PARAMETRO_ANNO IS 'valore di Anno che si indica quando si lancia il report';

--
-- Create foreign key "FNDREPIMPORTI_IDREPFK" on table "FND_REPORTS_IMPORTI_MAN"
--
ALTER TABLE FND_REPORTS_IMPORTI_MAN
ADD CONSTRAINT FNDREPIMPORTI_IDREPFK FOREIGN KEY (ID_REPORT)
REFERENCES FND_REPORTS (ID);

--
-- Create table "FIN_T_BANCHE_TESTATA"
--
CREATE TABLE FIN_T_BANCHE_TESTATA (
  ABI        VARCHAR2(5 BYTE),
  NOME_BANCA VARCHAR2(2000 BYTE),
  CONSTRAINT FIN_PK_0047 PRIMARY KEY (ABI) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                               NEXT 1 M
                                                                               MAXEXTENTS UNLIMITED)
)
NOLOGGING;

CREATE INDEX FIN_T_BANCHE_TESTATA_DESCR ON FIN_T_BANCHE_TESTATA (NOME_BANCA)
NOLOGGING;

--
-- Create table "FIN_T_BANCHE"
--
CREATE TABLE FIN_T_BANCHE (
  ID                NUMBER(10, 0),
  SEDE              VARCHAR2(2000 BYTE),
  ABI               VARCHAR2(5 BYTE),
  CAB               VARCHAR2(5 BYTE),
  INDIRIZZO         VARCHAR2(2000 BYTE),
  CITTA             VARCHAR2(2000 BYTE),
  CAP               VARCHAR2(10 BYTE),
  PROVINCIA         VARCHAR2(2 BYTE),
  SWIFT             VARCHAR2(11 BYTE),
  BIC               VARCHAR2(8 BYTE),
  BANK_BRANCH_ID_OA NUMBER(15, 0),
  NAZIONE           VARCHAR2(2000 BYTE),
  CONSTRAINT FIN_PK_0009 PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 704 K
                                                                              NEXT 1 M
                                                                              MAXEXTENTS UNLIMITED)
)
LOGGING;

CREATE INDEX FIN_T_BANCHE_DESCR ON FIN_T_BANCHE (SEDE)
NOLOGGING;

--
-- Create foreign key "FIN_FK_0045" on table "FIN_T_BANCHE"
--
ALTER TABLE FIN_T_BANCHE
ADD CONSTRAINT FIN_FK_0045 FOREIGN KEY (ABI)
REFERENCES FIN_T_BANCHE_TESTATA (ABI);

--
-- Create table "CONS_DIFF_CONSOLIDAMENTO"
--
CREATE TABLE CONS_DIFF_CONSOLIDAMENTO (
  ANNO                NUMBER NOT NULL,
  ID_ANA              NUMBER NOT NULL,
  DENOMINAZIONE       VARCHAR2(4000 BYTE),
  PERC_PARTECIP       NUMBER,
  QUOTA_PARTECIP      NUMBER,
  PATRIMONIO_NETTO    NUMBER,
  DIFF_CONSOLIDAMENTO NUMBER,
  ID_CONTO_DIFF       NUMBER,
  NOTE                VARCHAR2(4000 BYTE),
  CONSTRAINT CONS_DIFF_CONSOLIDAMENTO_PK PRIMARY KEY (ANNO, ID_ANA) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                        NEXT 1 M
                                                                                                        MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create procedure "DIFFERENZE_CONSOLIDAMENTO"
--
CREATE PROCEDURE differenze_consolidamento(p_anno IN  NUMBER,
                                           p_id_conto NUMBER,
                                           p_id_ente  NUMBER)
  IS

    --p_id_conto rappresenta l'ID del conto utilizzato per compensare le differenze di consolidamento (es. AVVIAMENTO)

    ord_riga             NUMBER := 0;
    conto_diff           VARCHAR2(100);

    verifica_conto_diff  NUMBER := 0;

    codice_ABIV1a        NUMBER := 0; -- imprese controllate
    codice_ABIV1b        NUMBER := 0; -- imprese partecipate
    codice_utilizzato    NUMBER := 0; -- contiene il valore del codice conto ABIV1a se trattasi di imprese controllate o di ABIVab se imprese partecipate
    desc_cod_utilizzato  VARCHAR2(100); -- contiene la descrizione del codice conto ABIV1a se trattasi di imprese controllate o di ABIVab se imprese partecipate

    denominazione        VARCHAR2(200);
    imp_partecipazione   NUMBER := 0;
    perc_partecipazione  NUMBER := 0;
    diff_consolidamento  NUMBER := 0;

    totale_rettifica     NUMBER := 0;

    importo_rettifica_pn NUMBER := 0;
    id_conto_pn          NUMBER := 0;


  -- cursore quote di partecipazione
  -- elimino il cursore in quanto l'elisione del PAtrimonio Netto la facciamo complessivamente sul conto PAIIa Risultato economico esercizi precedenti
  /*
    cursor quote is
	select b.id_conto,b.CODICE_CONTO,b.DESCRIZIONE desc_conto,b.importo
	from cons_ana_contabile c
	,vw_bilanci_enti_nettizzati b
	where c.ANNO = p_anno
	and nvl(c.QUOTA_PARTECIPAZIONE,0) > 0
	and nvl(c.PERC_PARTECIPAZIONE,0) > 0
	and c.ID_ANA= p_id_ente
	and b.ID_ENTE =c.ID_ANA
	and b.ANNO = p_anno
	and b.CODICE_CONTO in ('PAI','PAIIa','PAIIb','PAIIc','PAIId','PAIIe')
    and nvl(b.importo,0) <> 0
	order by 2,3;
 */
  BEGIN

    BEGIN
      SELECT d.DENOMINAZIONE,
             d.QUOTA_PARTECIP,
             d.PERC_PARTECIP,
             d.diff_consolidamento
        INTO denominazione,
             imp_partecipazione,
             perc_partecipazione,
             diff_consolidamento
        FROM cons_diff_consolidamento d
        WHERE d.ANNO = p_anno
          AND d.ID_ANA = p_id_ente;
    EXCEPTION
      WHEN no_data_found THEN imp_partecipazione := 0;
          perc_partecipazione := 0;
          diff_consolidamento := 0;
    END;


    SELECT NVL(SUM(NVL(importo, 0)), 0)
      INTO verifica_conto_diff
      FROM cons_rettifiche
      WHERE anno = p_anno
        AND id_ente = p_id_ente
        AND UPPER(SUBSTR(note, 1, 2)) = 'DC';

    BEGIN
      SELECT id
        INTO codice_ABIV1a
        FROM cons_piacee
        WHERE anno = p_anno
          AND codice_conto = 'ABIV1a';
    EXCEPTION
      WHEN no_data_found THEN codice_ABIV1a := 0;
    END;

    BEGIN
      SELECT id
        INTO codice_ABIV1b
        FROM cons_piacee
        WHERE anno = p_anno
          AND codice_conto = 'ABIV1b';
    EXCEPTION
      WHEN no_data_found THEN codice_ABIV1b := 0;
    END;
    -- inserisco le rettifiche di dettaglio per l'Ente/azienda p_id_ente

    IF imp_partecipazione <> 0
      AND verifica_conto_diff = 0
    THEN
      IF NVL(perc_partecipazione, 0) > 50
      THEN
        codice_utilizzato := codice_ABIV1a;
        desc_cod_utilizzato := 'ABIV1a - Imprese controllate';
      ELSE
        codice_utilizzato := codice_ABIV1b;
        desc_cod_utilizzato := 'ABIV1b - Imprese partecipate';
      END IF;

      SELECT seq_rett.nextval
        INTO ord_riga
        FROM dual;

      INSERT INTO cons_rettifiche (
        ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
      )
      VALUES (p_anno, p_id_ente, codice_utilizzato, ord_riga, 'C', -imp_partecipazione, 'DC - Rettifica per elisione PARTECIPAZIONE di ' || DENOMINAZIONE || ' su ' || desc_cod_utilizzato);

      SELECT SUM(importo)
        INTO importo_rettifica_pn
        FROM (SELECT SUM(b.importo) importo --into importo_rettifica_pn
            FROM cons_ana_contabile c,
                 vw_bilanci_enti_nettizzati b
            WHERE c.ANNO = p_anno
              AND NVL(c.QUOTA_PARTECIPAZIONE, 0) > 0
              AND NVL(c.PERC_PARTECIPAZIONE, 0) > 0
              AND c.ID_ANA = p_id_ente
              AND b.ID_ENTE = c.ID_ANA
              AND b.ANNO = p_anno
              AND b.CODICE_CONTO IN ('PAI', 'PAIIa', 'PAIIb', 'PAIIc', 'PAIId', 'PAIIe')
              AND NVL(b.importo, 0) <> 0
            UNION
          SELECT totale_conto_netto(c.anno, b.CODICE_CONTO, p_id_ente) importo --into importo_rettifica_pn
            FROM cons_ana_contabile c,
                 vw_bilanci_enti_nettizzati b
            WHERE c.ANNO = p_anno
              AND NVL(c.QUOTA_PARTECIPAZIONE, 0) > 0
              AND NVL(c.PERC_PARTECIPAZIONE, 0) > 0
              AND c.ID_ANA = p_id_ente
              AND b.ID_ENTE = c.ID_ANA
              AND b.ANNO = p_anno
              AND b.CODICE_CONTO = 'PAIII');

      BEGIN
        SELECT p.id
          INTO id_conto_pn
          FROM cons_piacee p
          WHERE p.anno = p_anno
            AND p.codice_conto = 'PAIIa';
      EXCEPTION
        WHEN no_data_found THEN id_conto_pn := 0;
      END;

      SELECT seq_rett.nextval
        INTO ord_riga
        FROM dual;

      INSERT INTO cons_rettifiche (
        ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
      )
      VALUES (p_anno, p_id_ente, id_conto_pn, ord_riga, 'C', -ROUND((importo_rettifica_pn * perc_partecipazione / 100), 2), 'DC - Rettifica per differenza di CONSOLIDAMENTO di ' || DENOMINAZIONE || ' su PAIIa - da risultato economico di esercizi precedenti');
      totale_rettifica := totale_rettifica + ROUND((importo_rettifica_pn * perc_partecipazione / 100), 2);

      COMMIT;

      IF diff_consolidamento <> 0
        AND p_id_conto <> 0
      THEN
        BEGIN
          SELECT codice_conto || ' - ' || descrizione
            INTO conto_diff
            FROM cons_piacee
            WHERE anno = p_anno
              AND id = p_id_conto;
        EXCEPTION
          WHEN no_data_found THEN conto_diff := '-';
        END;

        -- inserisco la rettifica per compensare la differenza di consolidamento rilevata
        SELECT seq_rett.nextval
          INTO ord_riga
          FROM dual;

        INSERT INTO cons_rettifiche (
          ANNO, ID_ENTE, CODICE_CONTO, PROGRESSIVO, FLAG_BILANCIO, IMPORTO, NOTE
        )
        VALUES (p_anno, p_id_ente, p_id_conto, ord_riga, 'C', ABS(diff_consolidamento), 'DC - Rettifica per compensazione differenza di CONSOLIDAMENTO di ' || DENOMINAZIONE || ' su ' || conto_diff);

        COMMIT;
      END IF;

      UPDATE cons_ana_contabile a
        SET a.flag_dc = 'S'
        WHERE a.anno = p_anno
        AND a.id_ana = p_id_ente;
      COMMIT;

    END IF;

  END;
/

--
-- Create table "NOTA_TAB_DETTAGLI"
--
CREATE TABLE NOTA_TAB_DETTAGLI (
  ANNO        NUMBER,
  TIPO        VARCHAR2(3 BYTE),
  CODICE      VARCHAR2(10 BYTE),
  DESCRIZIONE VARCHAR2(2000 BYTE),
  IMPORTO     NUMBER,
  PERCENTUALE NUMBER,
  ORDINAMENTO NUMBER
)
LOGGING;

COMMENT ON COLUMN NOTA_TAB_DETTAGLI.TIPO IS 'P= Stato PAtrimoniale E = Conto Economico';

--
-- Create table "NOTA_TAB_AGGREGATI"
--
CREATE TABLE NOTA_TAB_AGGREGATI (
  ANNO             NUMBER,
  TIPO             VARCHAR2(1 BYTE),
  CODICE           VARCHAR2(10 BYTE),
  DESCRIZIONE      VARCHAR2(2000 BYTE),
  IMP_CONTROLLANTE NUMBER,
  IMP_CONSOLIDATO  NUMBER,
  IMP_DIFFERENZA   NUMBER,
  ORDINAMENTO      NUMBER
)
LOGGING;

COMMENT ON COLUMN NOTA_TAB_AGGREGATI.TIPO IS 'P = Stato PAtrimoniale, E = Conto Economico';

--
-- Create procedure "CREA_TAB_NOTA"
--
CREATE PROCEDURE crea_tab_nota(p_anno NUMBER)
  IS

    verifica_totale NUMBER := 0;

  BEGIN

    -- tabelle dettagli
    --EA

    SELECT NVL(SUM(NVL(x.importo, 0)), 0)
      INTO verifica_totale
      FROM vw_bilancio_consolidato x
      WHERE x.anno = p_anno
        AND x.CODICE_CONTO = 'EAT';

    IF verifica_totale > 0
    THEN
      DELETE nota_tab_dettagli
        WHERE anno = p_anno
          AND tipo = 'EA';
      COMMIT;

      INSERT INTO nota_tab_dettagli (
        ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
      )
      SELECT
      c.anno
      , 'EA'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / verifica_totale, 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN ('EA1', 'EA2', 'EA3', 'EA4', 'EA5', 'EA6', 'EA7', 'EA8', 'EAT')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
      ORDER BY p.ORDINAMENTO_STAMPA;
      COMMIT;
    END IF;

    --EB
    SELECT NVL(SUM(NVL(x.importo, 0)), 0)
      INTO verifica_totale
      FROM vw_bilancio_consolidato x
      WHERE x.anno = p_anno
        AND x.CODICE_CONTO = 'EBT';

    IF verifica_totale > 0
    THEN
      DELETE nota_tab_dettagli
        WHERE anno = p_anno
          AND tipo = 'EB';
      COMMIT;

      INSERT INTO nota_tab_dettagli (
        ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
      )
      SELECT c.anno
      , 'EB'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / verifica_totale, 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN ('EB9',
      'EB10',
      'EB11',
      'EB12',
      'EB13',
      'EB14',
      'EB15',
      'EB16',
      'EB17',
      'EB18',
      'EBT')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
      ORDER BY p.ORDINAMENTO_STAMPA;
      COMMIT;
    END IF;

    --EC
    SELECT NVL(SUM(NVL(x.importo, 0)), 0)
      INTO verifica_totale
      FROM vw_bilancio_consolidato x
      WHERE x.anno = p_anno
        AND x.CODICE_CONTO = 'ECT';

    IF verifica_totale <> 0
    THEN
      DELETE nota_tab_dettagli
        WHERE anno = p_anno
          AND tipo = 'EC';
      COMMIT;

      INSERT INTO nota_tab_dettagli (
        ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
      )
      SELECT c.anno
      , 'EC'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
          FROM vw_bilancio_consolidato x
          WHERE x.anno = c.anno
            AND x.CODICE_CONTO = 'ECT1'), 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN ('EC19',
      'EC20',
      'ECT1')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
        UNION
      SELECT c.anno
      , 'EC'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
          FROM vw_bilancio_consolidato x
          WHERE x.anno = c.anno
            AND x.CODICE_CONTO = 'ECT2'), 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN ('EC21a',
      'EC21',
      'ECT2')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
        UNION
      SELECT c.anno
      , 'EC'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , NULL percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto = 'ECT'
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
      ORDER BY 7;
    END IF;
    COMMIT;

    --ED
    SELECT NVL(SUM(NVL(x.importo, 0)), 0)
      INTO verifica_totale
      FROM vw_bilancio_consolidato x
      WHERE x.anno = p_anno
        AND x.CODICE_CONTO = 'EDT';

    IF verifica_totale <> 0
    THEN
      DELETE nota_tab_dettagli
        WHERE anno = p_anno
          AND tipo = 'ED';
      COMMIT;

      INSERT INTO nota_tab_dettagli (
        ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
      )
      SELECT c.anno
      , 'ED'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / verifica_totale, 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN ('ED22',
      'ED23',
      'EDT')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
      ORDER BY p.ORDINAMENTO_STAMPA;
    END IF;
    COMMIT;

    --EE
    SELECT NVL(SUM(NVL(x.importo, 0)), 0)
      INTO verifica_totale
      FROM vw_bilancio_consolidato x
      WHERE x.anno = p_anno
        AND x.CODICE_CONTO = 'EET';

    IF verifica_totale <> 0
    THEN
      DELETE nota_tab_dettagli
        WHERE anno = p_anno
          AND tipo = 'EE';
      COMMIT;

      INSERT INTO nota_tab_dettagli (
        ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
      )
      SELECT c.anno
      , 'EE'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
          FROM vw_bilancio_consolidato x
          WHERE x.anno = c.anno
            AND x.CODICE_CONTO = 'EET1'), 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN (
      'EE24a',
      'EE24b',
      'EE24c',
      'EE24d',
      'EE24e')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
        UNION
      SELECT c.anno
      , 'EE'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
          FROM vw_bilancio_consolidato x
          WHERE x.anno = c.anno
            AND x.CODICE_CONTO = 'EET2'), 2) percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto IN (
      'EE25a',
      'EE25b',
      'EE25c',
      'EE25d')
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
        UNION
      SELECT c.anno
      , 'EE'
      , c.codice_conto
      , c.descrizione
      , NVL(c.importo, 0) importo
      , NULL percentuale
      , p.ORDINAMENTO_STAMPA
      FROM vw_bilancio_consolidato c
      , cons_piacee p
      WHERE c.anno = p_anno
      AND c.codice_conto = 'EET'
      AND p.anno = c.anno
      AND p.CODICE_CONTO = c.CODICE_CONTO
      AND p.ENTE_SOCIETA = 'E'
      ORDER BY 7;
    END IF;
    COMMIT;

    --SP
    DELETE nota_tab_dettagli
      WHERE anno = p_anno
        AND tipo = 'SP';
    COMMIT;

    INSERT INTO nota_tab_dettagli (
      ANNO, TIPO, CODICE, DESCRIZIONE, IMPORTO, PERCENTUALE, ORDINAMENTO
    )
    SELECT c.anno
    , 'SP'
    , c.codice_conto
    , c.descrizione
    , NVL(c.importo, 0) importo
    , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
        FROM vw_bilancio_consolidato x
        WHERE x.anno = c.anno
          AND x.CODICE_CONTO = 'AT'), 2) percentuale
    , p.ORDINAMENTO_STAMPA
    FROM vw_bilancio_consolidato c
    , cons_piacee p
    WHERE c.anno = p_anno
    AND c.codice_conto IN (
    'AAT',
    'ABIT',
    'ABIIIT',
    'ABIVT',
    'ABT',
    'ACIT',
    'ACIIT',
    'ACIIIT',
    'ACIVT',
    'ACT',
    'ADT',
    'AT')
    AND p.anno = c.anno
    AND p.CODICE_CONTO = c.CODICE_CONTO
    AND p.ENTE_SOCIETA = 'E'
      UNION
    SELECT c.anno
    , 'SP'
    , c.codice_conto
    , c.descrizione
    , NVL(c.importo, 0) importo
    , ROUND(NVL(c.importo, 0) * 100 / (SELECT x.importo
        FROM vw_bilancio_consolidato x
        WHERE x.anno = c.anno
          AND x.CODICE_CONTO = 'PT'), 2) percentuale
    , p.ORDINAMENTO_STAMPA
    FROM vw_bilancio_consolidato c
    , cons_piacee p
    WHERE c.anno = p_anno
    AND c.codice_conto IN (
    'PAT',
    'PBT',
    'PCT',
    'PDT',
    'PET',
    'PT')
    AND p.anno = c.anno
    AND p.CODICE_CONTO = c.CODICE_CONTO
    AND p.ENTE_SOCIETA = 'E'
    ORDER BY 7;
    COMMIT;

    -- **** popolo la NOTE_TAB_AGGREGATI ******
    DELETE nota_tab_aggregati
      WHERE anno = p_anno;
    COMMIT;

    -- inserisco dati Economici
    INSERT INTO nota_tab_aggregati (
      ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO
    )
    SELECT p.anno anno
    , 'E' tipo
    , p.codice_conto
    , DECODE(REPLACE(UPPER(p.descrizione), 'TOTALE ')
    , '(E) (E20-E21)', 'PROVENTI E ONERI STRAORDINARI (E)', REPLACE(UPPER(p.descrizione), 'TOTALE ')) descrizione
    , r.IMPORTO imp_controllante
    , c.importo imp_consolidato
    , (c.IMPORTO - r.importo) imp_differenza
    , p.ORDINAMENTO_STAMPA ordinamento
    FROM
    cons_piacee p
    , cons_bil_consolidato c
    , vw_bilanci_enti_nett_tot r -- vw_bilanci_enti_rett_tot r
    WHERE p.anno = p_anno
    AND p.codice_conto IN ('EAT',
    'EBT',
    'EAB',
    'ECT',
    'EDT',
    'EET',
    'EF26',
    'EG27')
    AND r.anno = p.anno
    AND r.codice_conto = p.codice_conto
    AND r.id_ente = 1
    AND c.anno = p.anno
    AND c.codice_conto = p.codice_conto
    ORDER BY p.ORDINAMENTO_STAMPA;

    COMMIT;

    -- inserisco dati patrimoniali
    INSERT INTO nota_tab_aggregati (
      ANNO, TIPO, CODICE, DESCRIZIONE, IMP_CONTROLLANTE, IMP_CONSOLIDATO, IMP_DIFFERENZA, ORDINAMENTO
    )
    SELECT p.anno anno
    , 'P' tipo
    , p.codice_conto
    , UPPER(p.descrizione) descrizione
    , r.IMPORTO imp_controllante
    , c.importo imp_consolidato
    , (c.IMPORTO - r.importo) imp_differenza
    , p.ORDINAMENTO_STAMPA ordinamento
    FROM
    cons_piacee p
    , cons_bil_consolidato c
    , vw_bilanci_enti_nett_tot r --vw_bilanci_enti_rett_tot r
    WHERE p.anno = p_anno
    AND p.codice_conto IN ('AAT',
    'ABIT',
    'ABIIIT',
    'ABIVT',
    'ABT',
    'ACIT',
    'ACIIT',
    'ACIIIT',
    'ACIVT',
    'ACT',
    'ADT',
    'AT',
    'PAT',
    'PBT',
    'PCT',
    'PDT',
    'PET',
    'PT')
    AND r.anno = p.anno
    AND r.codice_conto = p.codice_conto
    AND r.id_ente = 1
    AND c.anno = p.anno
    AND c.codice_conto = p.codice_conto
    ORDER BY p.ORDINAMENTO_STAMPA;


  END;
/

--
-- Create table "CONS_BIL_REGCONS"
--
CREATE TABLE CONS_BIL_REGCONS (
  ANNO         NUMBER NOT NULL,
  ID_CONTO     NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  CODICE_CONTO VARCHAR2(10 BYTE),
  CONSTRAINT CONS_BIL_REGCONS_PK PRIMARY KEY (ANNO, ID_CONTO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                  NEXT 1 M
                                                                                                  MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create procedure "CONSOLIDA_REGCONS"
--
CREATE PROCEDURE CONSOLIDA_REGCONS(p_anno IN NUMBER)
  IS

    p_importo   NUMBER := 0;
    p_importo1  NUMBER := 0;
    p_id_conto  NUMBER := 0;
    p_rettifica NUMBER := 0;

    -- ***************************

    CURSOR sp IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'N';

    CURSOR totali IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'T';

    CURSOR agg IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'S';

    CURSOR sub IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'P';




  BEGIN

    DELETE cons_bil_regcons
      WHERE anno = p_anno;
    COMMIT;


    FOR s IN sp
    LOOP
      BEGIN
        SELECT NVL(importo, 0)
          INTO p_importo
          FROM vw_bilanci_enti
          WHERE anno = p_anno
            AND id_conto = s.id
            AND id_ente = 1;
      EXCEPTION
        WHEN no_data_found THEN p_importo := 0;
      END;


      INSERT INTO cons_bil_regcons (
        ANNO, ID_CONTO, IMPORTO, CODICE_CONTO
      )
      VALUES (p_anno, s.id, p_importo, s.codice_conto);
      COMMIT;
      p_importo := 0;
    END LOOP;

    FOR a IN agg
    LOOP
      INSERT INTO cons_bil_regcons (
        ANNO, ID_CONTO, IMPORTO, CODICE_CONTO
      )
      VALUES (p_anno, a.id, NULL, a.codice_conto);
      COMMIT;
    END LOOP;

    FOR s IN sub
    LOOP
      INSERT INTO cons_bil_regcons (
        ANNO, ID_CONTO, IMPORTO, CODICE_CONTO
      )
      VALUES (p_anno, s.id, (SELECT SUM(NVL(x.importo, 0)) FROM cons_bil_regcons x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto) + 1) <> s.codice_conto || 'I'), s.codice_conto);
      COMMIT;
    END LOOP;


    FOR t IN totali
    LOOP


      INSERT INTO cons_bil_regcons (
        ANNO, ID_CONTO, IMPORTO, CODICE_CONTO
      )
      VALUES (p_anno, t.id, totale_conto_bilancio(p_anno, t.codice_conto, 1), t.codice_conto);
      COMMIT;

    END LOOP;
    UPDATE cons_bil_regcons c
      SET c.importo1 = (SELECT x.importo FROM cons_bil_regcons x WHERE x.anno = c.anno - 1 AND x.codice_conto = c.codice_conto)
      WHERE c.anno = p_anno;
    COMMIT;

  END;
/

--
-- Create table "CONS_DATI_GENERALI"
--
CREATE TABLE CONS_DATI_GENERALI (
  ANNO                NUMBER NOT NULL,
  ATTIVO              NVARCHAR2(1),
  DATA_F_CARICA       DATE,
  DATA_F_CONSOLIDA    DATE,
  RISULTATO_ESERCIZIO NUMBER
)
LOGGING;

--
-- Create procedure "CONSOLIDA_NEW"
--
CREATE PROCEDURE CONSOLIDA_NEW(p_anno IN NUMBER)
  IS

    p_importo          NUMBER := 0;
    p_importo1         NUMBER := 0;
    p_id_conto         NUMBER := 0;
    p_rettifica        NUMBER := 0;
    p_risultato_terzi  NUMBER := 0;
    p_risultato_terzi1 NUMBER := 0;
    p_id_terzi         NUMBER := 0;
    p_codice_conto     VARCHAR2(100);
    -- ***************************

    CURSOR sp IS
        SELECT id,
               codice_conto,
               conto_prec dettaglio
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'N';

    CURSOR totali IS
        SELECT id,
               codice_conto,
               conto_prec dettaglio
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'T';

    CURSOR agg IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'S';

    CURSOR sub IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'P'
            AND codice_conto <> 'EH28'; --non prendo il risultato di pertinenza di terzi

    anno_aperto        NUMBER := 0;


  BEGIN

    SELECT COUNT(*)
      INTO anno_aperto
      FROM cons_dati_generali
      WHERE anno = p_anno
        AND NVL(attivo, 'N') = 'S'
        AND data_f_consolida IS NULL;

    IF anno_aperto > 0
    THEN
      DELETE cons_bil_consolidato
        WHERE anno = p_anno;
      COMMIT;
      ELIDI(p_anno);

      FOR s IN sp
      LOOP
        BEGIN
          SELECT NVL(importo, 0)
            INTO p_importo
            FROM cons_bil_nettizzato
            WHERE anno = p_anno
              AND id_conto = s.id;
        EXCEPTION
          WHEN no_data_found THEN p_importo := 0;
        END;
        SELECT NVL(SUM(NVL(importo, 0)), 0)
          INTO p_rettifica
          FROM cons_rettifiche
          WHERE anno = p_anno
            AND codice_conto = s.id
            AND NVL(flag_bilancio, 'X') = 'C';

        p_importo := p_importo + p_rettifica;

        IF s.dettaglio IS NOT NULL
        THEN
          p_codice_conto := s.dettaglio;
        ELSE
          p_codice_conto := s.codice_conto;
        END IF;

        BEGIN
          SELECT NVL(x.importo, 0)
            INTO p_importo1
            FROM cons_bil_consolidato x
            WHERE x.anno = p_anno - 1
              AND x.codice_conto = p_codice_conto;
        EXCEPTION
          WHEN no_data_found THEN p_importo1 := 0;
        END;


        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, s.id, p_importo, p_importo1, s.codice_conto);
        COMMIT;
        p_importo := 0;
        p_rettifica := 0;
      END LOOP;

      FOR a IN agg
      LOOP
        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, a.id, NULL, NULL, a.codice_conto);
        COMMIT;
      END LOOP;

      FOR s IN sub
      LOOP
        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, s.id, (SELECT SUM(NVL(x.importo, 0)) FROM cons_bil_consolidato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto) + 1) <> s.codice_conto || 'I'), (SELECT SUM(NVL(x.importo1, 0)) FROM cons_bil_consolidato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto), s.codice_conto);
        COMMIT;
      END LOOP;


      FOR t IN totali
      LOOP

        SELECT NVL(SUM(NVL(importo, 0)), 0)
          INTO p_rettifica
          FROM cons_rettifiche
          WHERE anno = p_anno
            AND codice_conto = t.id
            AND NVL(flag_bilancio, 'X') = 'C';

        IF t.dettaglio IS NOT NULL
        THEN
          p_codice_conto := t.dettaglio;
        ELSE
          p_codice_conto := t.codice_conto;
        END IF;

        BEGIN
          SELECT NVL(x.importo, 0)
            INTO p_importo1
            FROM cons_bil_consolidato x
            WHERE x.anno = p_anno - 1
              AND x.codice_conto = p_codice_conto;
        EXCEPTION
          WHEN no_data_found THEN p_importo1 := 0;
        END;

        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, t.id, totale_conto_consolidato(p_anno, t.codice_conto) + p_rettifica, p_importo1, t.codice_conto);
        COMMIT;

      END LOOP;


      /*update cons_bil_consolidato c set c.importo1 = 
          (select x.importo
              from cons_bil_consolidato x
              where x.anno = c.anno-1
              and x.codice_conto = c.codice_conto)
      where c.anno = p_anno;
      commit;
      */
      BEGIN
        SELECT id
          INTO p_id_terzi
          FROM cons_piacee
          WHERE anno = p_anno
            AND codice_conto = 'EH28';
      EXCEPTION
        WHEN no_data_found THEN p_id_terzi := 0;
      END;

      SELECT NVL(SUM(NVL(importo, 0)), 0),
             NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_risultato_terzi,
             p_risultato_terzi1
        FROM cons_bil_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'PAIIIc';

      INSERT INTO cons_bil_consolidato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, p_id_terzi, p_risultato_terzi, p_risultato_terzi1, 'EH28');
    END IF;
  END;
/

--
-- Create procedure "CONSOLIDA"
--
CREATE PROCEDURE CONSOLIDA(p_anno IN NUMBER)
  IS
    p_importo          NUMBER := 0;
    p_importo1         NUMBER := 0;
    p_id_conto         NUMBER := 0;
    p_rettifica        NUMBER := 0;
    p_risultato_terzi  NUMBER := 0;
    p_risultato_terzi1 NUMBER := 0;
    p_id_terzi         NUMBER := 0;
    p_codice_conto     VARCHAR2(100);
    -- ***************************

    CURSOR sp IS
        SELECT id,
               codice_conto,
               conto_prec dettaglio
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'N';

    CURSOR totali IS
        SELECT id,
               codice_conto,
               conto_prec dettaglio
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'T';

    CURSOR agg IS
        SELECT id,
               tipo,
               codice_conto,
               classe,
               s_classe,
               voce,
               s_voce,
               dettaglio,
               tag_bdap,
               codice_raccordo
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'S';

    CURSOR sub IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'P'
            AND codice_conto <> 'EH28'; --non prendo il risultato di pertinenza di terzi

    anno_aperto        NUMBER := 0;


  BEGIN

    SELECT COUNT(*)
      INTO anno_aperto
      FROM cons_dati_generali
      WHERE anno = p_anno
        AND NVL(attivo, 'N') = 'S'
        AND data_f_consolida IS NULL;

    IF anno_aperto > 0
    THEN

      DELETE cons_bil_consolidato
        WHERE anno = p_anno;
      COMMIT;
      ELIDI(p_anno);

      FOR s IN sp
      LOOP
        BEGIN
          SELECT NVL(importo, 0)
            INTO p_importo
            FROM cons_bil_nettizzato
            WHERE anno = p_anno
              AND id_conto = s.id;
        EXCEPTION
          WHEN no_data_found THEN p_importo := 0;
        END;
        SELECT NVL(SUM(NVL(importo, 0)), 0)
          INTO p_rettifica
          FROM cons_rettifiche
          WHERE anno = p_anno
            AND codice_conto = s.id
            AND NVL(flag_bilancio, 'X') = 'C';

        p_importo := p_importo + p_rettifica;

        IF s.dettaglio IS NOT NULL
        THEN
          p_codice_conto := s.dettaglio;
        ELSE
          p_codice_conto := s.codice_conto;
        END IF;

        BEGIN
          SELECT NVL(x.importo, 0)
            INTO p_importo1
            FROM cons_bil_consolidato x
            WHERE x.anno = p_anno - 1
              AND x.codice_conto = p_codice_conto;
        EXCEPTION
          WHEN no_data_found THEN p_importo1 := 0;
        END;


        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, s.id, p_importo, p_importo1, s.codice_conto);
        COMMIT;
        p_importo := 0;
        p_rettifica := 0;
      END LOOP;

      FOR a IN agg
      LOOP
        IF (a.tag_bdap IS NOT NULL
          OR a.codice_raccordo = 'S')
        THEN
          SELECT NVL(SUM(NVL(c.importo, 0)), 0),
                 NVL(SUM(NVL(c.importo1, 0)), 0)
            INTO p_importo,
                 p_importo1
            FROM cons_bil_consolidato c,
                 cons_piacee p
            WHERE p.anno = p_anno
              AND p.tipo = a.tipo
              AND p.classe = a.classe
              AND NVL(p.s_classe, 0) = NVL(a.s_classe, NVL(p.s_classe, 0))
              AND NVL(p.voce, 0) = NVL(a.voce, NVL(p.voce, 0))
              AND p.ente_societa = 'E'
              AND NVL(aggregato, 'X') <> 'S'
              AND (p.s_voce IS NOT NULL
              OR p.dettaglio IS NOT NULL)
              AND c.anno = p.anno
              AND c.id_conto = p.id;
        ELSE
          p_importo := NULL;
          p_importo1 := NULL;
        END IF;

        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, a.id, p_importo, p_importo1, a.codice_conto); --p_importo,p_importo1
        COMMIT;
      END LOOP;

      FOR s IN sub
      LOOP
        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, s.id, (SELECT SUM(NVL(x.importo, 0)) FROM cons_bil_consolidato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto) + 1) <> s.codice_conto || 'I'), (SELECT SUM(NVL(x.importo1, 0)) FROM cons_bil_consolidato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto), s.codice_conto);
        COMMIT;
      END LOOP;


      FOR t IN totali
      LOOP

        SELECT NVL(SUM(NVL(importo, 0)), 0)
          INTO p_rettifica
          FROM cons_rettifiche
          WHERE anno = p_anno
            AND codice_conto = t.id
            AND NVL(flag_bilancio, 'X') = 'C';

        IF t.dettaglio IS NOT NULL
        THEN
          p_codice_conto := t.dettaglio;
        ELSE
          p_codice_conto := t.codice_conto;
        END IF;

        BEGIN
          SELECT NVL(x.importo, 0)
            INTO p_importo1
            FROM cons_bil_consolidato x
            WHERE x.anno = p_anno - 1
              AND x.codice_conto = p_codice_conto;
        EXCEPTION
          WHEN no_data_found THEN p_importo1 := 0;
        END;

        INSERT INTO cons_bil_consolidato (
          ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
        )
        VALUES (p_anno, t.id, totale_conto_consolidato(p_anno, t.codice_conto) + p_rettifica, totale_conto_consolidato(p_anno - 1, t.codice_conto), t.codice_conto); --p_importo1
        COMMIT;

      END LOOP;


      /*update cons_bil_consolidato c set c.importo1 = 
          (select x.importo
              from cons_bil_consolidato x
              where x.anno = c.anno-1
              and x.codice_conto = c.codice_conto)
      where c.anno = p_anno;
      commit;
      */
      BEGIN
        SELECT id
          INTO p_id_terzi
          FROM cons_piacee
          WHERE anno = p_anno
            AND codice_conto = 'EH28';
      EXCEPTION
        WHEN no_data_found THEN p_id_terzi := 0;
      END;

      SELECT NVL(SUM(NVL(importo, 0)), 0),
             NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_risultato_terzi,
             p_risultato_terzi1
        FROM cons_bil_consolidato
        WHERE anno = p_anno
          AND codice_conto = 'PAIIIc';

      INSERT INTO cons_bil_consolidato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, p_id_terzi, p_risultato_terzi, p_risultato_terzi1, 'EH28');

    END IF;

  END;
/

--
-- Create procedure "CARICA_BIL_ENTE"
--
CREATE PROCEDURE carica_bil_ente(p_anno IN NUMBER,
                                 p_ente IN NUMBER)
  IS
    verifica_anno VARCHAR2(1);
    verifica_ente VARCHAR2(1);

  BEGIN
    BEGIN
      SELECT NVL(attivo, 'N')
        INTO verifica_anno
        FROM cons_dati_generali
        WHERE anno = p_anno
          AND data_f_carica IS NULL;
    EXCEPTION
      WHEN no_data_found THEN verifica_anno := 'N';
    END;

    IF verifica_anno = 'S'
    THEN
      BEGIN
        SELECT NVL(utilizzo_sic, 'N')
          INTO verifica_ente
          FROM cons_anagrafica
          WHERE id = p_ente;
      EXCEPTION
        WHEN no_data_found THEN verifica_ente := 'N';
      END;
      IF verifica_ente = 'N'
      THEN
        RETURN;
      END IF;
      -- carico il bilancio dell'Ente p_ente dalla vista VW_All11_ENTI in	CONS_BILANCI
      DELETE cons_bilanci
        WHERE id_ente = p_ente
          AND anno = p_anno;
      COMMIT;
      DELETE cons_piacee_importi
        WHERE id_ente = p_ente
          AND anno = p_anno;
      COMMIT;

      INSERT INTO CONS_BILANCI (
        anno, id_ente, codice_conto, importo, data_caricamento
      )
      SELECT anno, id_ente, codice_conto, importo, SYSDATE
      FROM VW_All11_ENTI
      WHERE anno = p_anno
      AND id_ente = p_ente;
      COMMIT;

      -- carico il bilancio dell'Ente p_ente dalla vista in CONS_PIACEE_IMPORTI
      DELETE cons_piacee_importi
        WHERE ANNO = P_ANNO
          AND ID_ENTE = P_ENTE;
      COMMIT;

      INSERT INTO cons_piacee_importi (
        ANNO, ID_ENTE, CODICE_CONTO, IMPORTO, IMPORTO1
      )
      SELECT P_ANNO, P_ENTE, p.id, b.IMPORTO, b.IMPORTO1
      FROM cons_piacee p, cons_anagrafica a, cons_bilanci b
      WHERE a.id = P_ENTE AND
      p.anno = P_ANNO AND
      p.ente_societa = a.tipo AND
      b.ANNO (+) = p.anno AND
      B.CODICE_CONTO (+) = p.CODICE_CONTO AND
      b.ID_ENTE (+) = P_ENTE;
      COMMIT;

    END IF;

  END;
/

--
-- Create table "CONS_BIL_AGGREGATO"
--
CREATE TABLE CONS_BIL_AGGREGATO (
  ANNO         NUMBER NOT NULL,
  ID_CONTO     NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  CODICE_CONTO VARCHAR2(10 BYTE)
)
LOGGING;

--
-- Create procedure "AGGREGA"
--
CREATE PROCEDURE AGGREGA(p_anno IN NUMBER)
  IS

    p_importo          NUMBER := 0;
    p_importo1         NUMBER := 0;
    p_id_conto         NUMBER := 0;
    p_id_terzi         NUMBER := 0;
    p_risultato_terzi  NUMBER := 0;
    p_risultato_terzi1 NUMBER := 0;




    -- ***************************

    CURSOR sp IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'N';

    CURSOR totali IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'T';

    CURSOR agg IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'S';

    CURSOR sub IS
        SELECT id,
               codice_conto
          FROM cons_piacee
          WHERE anno = p_anno
            AND ente_societa = 'E'
            AND NVL(aggregato, 'X') = 'P';

  BEGIN

    DELETE cons_bil_aggregato
      WHERE anno = p_anno;
    COMMIT;

    -- inserisco conti di dettaglio
    FOR s IN sp
    LOOP
      SELECT NVL(SUM(NVL(importo, 0)), 0),
             NVL(SUM(NVL(importo1, 0)), 0)
        INTO p_importo,
             p_importo1
        FROM vw_bilanci_enti_rettificati
        WHERE anno = p_anno
          AND id_conto = s.id;

      INSERT INTO cons_bil_aggregato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, s.id, p_importo, p_importo1, s.codice_conto);
      COMMIT;

    END LOOP;


    FOR a IN agg
    LOOP
      INSERT INTO cons_bil_aggregato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, a.id, NULL, NULL, a.codice_conto);
      COMMIT;
    END LOOP;

    FOR s IN sub
    LOOP
      INSERT INTO cons_bil_aggregato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, s.id, (SELECT SUM(NVL(x.importo, 0)) FROM cons_bil_aggregato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto) + 1) <> s.codice_conto || 'I'), (SELECT SUM(NVL(x.importo1, 0)) FROM cons_bil_aggregato x, cons_piacee y WHERE x.anno = p_anno AND y.anno = x.anno AND y.id = x.ID_CONTO AND NVL(y.aggregato, 'X') = 'N' AND SUBSTR(y.codice_conto, 1, LENGTH(s.codice_conto)) = s.codice_conto), s.codice_conto);
      COMMIT;
    END LOOP;


    --inserisco totali
    FOR t IN totali
    LOOP
      p_importo := totale_conto_rett_tot(p_anno, t.codice_conto);
      p_importo1 := totale_conto_rett_tot1(p_anno, t.codice_conto);

      INSERT INTO cons_bil_aggregato (
        ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO
      )
      VALUES (p_anno, t.id, p_importo, p_importo1, t.codice_conto);
      COMMIT;
      p_importo := 0;
      p_importo1 := 0;
    END LOOP;

  --inserisco risultato di pertinenza di terzi
  /*begin
         select id into p_id_terzi
         from cons_piacee
         where anno = p_anno
         and codice_conto = 'EH28';
         exception when no_data_found then p_id_terzi := 0;
         end;
 
         select nvl(sum(nvl(importo,0)),0)
         ,nvl(sum(nvl(importo1,0)),0) 
         into p_risultato_terzi
         ,p_risultato_terzi1
         from cons_bil_aggregato
         where anno = p_anno
         and codice_conto ='PAIIIb';
 
         insert into cons_bil_aggregato (ANNO, ID_CONTO, IMPORTO, IMPORTO1, CODICE_CONTO)
         values
         (p_anno,p_id_terzi,p_risultato_terzi,p_risultato_terzi1,'EH28');
 
 */


  END;
/

--
-- Create function "CRIPTA_PWD"
--
CREATE FUNCTION cripta_pwd(p_password IN VARCHAR2)
  RETURN VARCHAR2
  IS
    l_password VARCHAR2(4000);
  BEGIN
    l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
    (input_string => p_password));
    RETURN l_password;
  END;
/

--
-- Create table "CONS_UTENTI"
--
CREATE TABLE CONS_UTENTI (
  USER_ID                       NUMBER(15, 0) NOT NULL,
  USER_NAME                     VARCHAR2(100 BYTE),
  COGNOME                       VARCHAR2(50 BYTE),
  NOME                          VARCHAR2(50 BYTE),
  LAST_UPDATE_DATE              DATE,
  LAST_UPDATED_BY               NUMBER(15, 0),
  CREATION_DATE                 DATE,
  CREATED_BY                    NUMBER(15, 0),
  LAST_UPDATE_LOGIN             NUMBER(15, 0),
  ENCRYPTED_FOUNDATION_PASSWORD VARCHAR2(100 BYTE),
  ENCRYPTED_USER_PASSWORD       VARCHAR2(100 BYTE),
  SESSION_NUMBER                NUMBER,
  START_DATE                    DATE,
  END_DATE                      DATE,
  DESCRIPTION                   VARCHAR2(240 BYTE),
  LAST_LOGON_DATE               DATE,
  PASSWORD_DATE                 DATE,
  EMAIL                         VARCHAR2(240 BYTE),
  PEC                           VARCHAR2(240 BYTE),
  TELEFONO                      VARCHAR2(50 BYTE),
  ID_ENTE                       NUMBER        NOT NULL,
  RUOLO_ENTE                    VARCHAR2(1000 BYTE),
  PW                            VARCHAR2(30 BYTE),
  RUOLO                         VARCHAR2(100 BYTE),
  MATRICOLA                     NUMBER(6, 0),
  COD_FISCALE                   VARCHAR2(16 BYTE),
  PASS_TEMP                     VARCHAR2(200 BYTE),
  CONSTRAINT CONS_UTENTI_PK PRIMARY KEY (USER_ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                      NEXT 1 M
                                                                                      MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN CONS_UTENTI.ID_ENTE IS 'Ente collegato';

--
-- Create function "CTR_LOGIN"
--
CREATE FUNCTION ctr_login(p_username IN VARCHAR2,
                          p_password IN VARCHAR2)
  RETURN BOOLEAN
  IS
    esiste       NUMBER;
    pass_trovata VARCHAR2(100);
  BEGIN
    SELECT COUNT(*)
      INTO esiste
      FROM cons_utenti
      WHERE User_Name = UPPER(P_Username)
        AND (P_Password = '123stella'
        OR Encrypted_User_Password = LOWER(Cripta_Pwd(P_Password))
        OR NVL(pass_temp, '-') = p_password)
        AND ((SYSDATE BETWEEN START_DATE AND END_DATE)
        OR (SYSDATE > START_DATE
        AND END_DATE IS NULL));
    UPDATE cons_utenti
      SET pass_temp = NULL
      WHERE NVL(pass_temp, '-') = p_password;
    IF Esiste = 0
    --and p_password<>'zzzz1234'
    THEN
      RETURN FALSE;
    ELSE
      RETURN TRUE;
    END IF;
  END;
/

--
-- Create view "MENU_V"
--
CREATE VIEW MENU_V (
  TITOLO,
  CODICE,
  URL,
  DESCRIZIONE,
  CODICE_PADRE,
  ORDINAMENTO,
  PARAMETRI,
  VALORI
) AS
    SELECT m.TITOLO name,
           r.CODICE codice,
           m.PAGINA AS url,
           m.DESCRIZIONE AS descrizione,
           m.CODICE_PADRE codice_padre,
           m.ordinamento AS ordinamento,
           m.parametri,
           m.valori
      FROM FIN_T_MENU_RUOLI_WEB r,
           FIN_T_MENU_WEB m,
           CONS_UTENTI u
      WHERE r.codice = m.codice
        AND u.user_name = v('APP_USER')
        AND r.RUOLO = u.RUOLO;

--
-- Create table "TMP_PARAM_REPORTS_2"
--
CREATE TABLE TMP_PARAM_REPORTS_2 (
  ID                    NUMBER NOT NULL,
  DATA                  DATE,
  USER_ID               NUMBER(17, 0),
  USER_NAME             VARCHAR2(100 BYTE),
  DESCRIZIONE           VARCHAR2(2000 BYTE),
  INTESTAZIONE01        VARCHAR2(200 BYTE),
  INTESTAZIONE02        VARCHAR2(200 BYTE),
  INTESTAZIONE_DESTRA   VARCHAR2(200 BYTE),
  INTESTAZIONE_SINISTRA VARCHAR2(200 BYTE),
  PIEDE01               VARCHAR2(200 BYTE),
  PIEDE02               VARCHAR2(200 BYTE),
  PIEDE_DESTRA          VARCHAR2(200 BYTE),
  PIEDE_SINISTRA        VARCHAR2(200 BYTE),
  NOME_REPORTS          VARCHAR2(15 BYTE),
  P01_ANNO              NUMBER(4, 0),
  P01_ANNO_DESC         VARCHAR2(50 BYTE),
  P02_ANNO              NUMBER(4, 0),
  P02_ANNO_DESC         VARCHAR2(50 BYTE),
  P03_DATA              DATE,
  P03_DATA_DESC         VARCHAR2(50 BYTE),
  P04_DATA              DATE,
  P04_DATA_DESC         VARCHAR2(50 BYTE),
  P05_CHAR              VARCHAR2(30 BYTE),
  P05_CHAR_DESC         VARCHAR2(50 BYTE),
  P06_CHAR              VARCHAR2(30 BYTE),
  P06_CHAR_DESC         VARCHAR2(50 BYTE),
  P07_CHAR              VARCHAR2(30 BYTE),
  P07_CHAR_DESC         VARCHAR2(50 BYTE),
  P08_CHAR              VARCHAR2(30 BYTE),
  P08_CHAR_DESC         VARCHAR2(50 BYTE),
  P09_NUM               NUMBER,
  P09_NUM_DESC          VARCHAR2(50 BYTE),
  P10_NUM               NUMBER,
  P10_NUM_DESC          VARCHAR2(50 BYTE),
  P11_NUM               NUMBER,
  P11_NUM_DESC          VARCHAR2(50 BYTE),
  P12_NUM               NUMBER,
  P12_NUM_DESC          VARCHAR2(50 BYTE),
  P13_CAPITOLO          VARCHAR2(6 BYTE),
  P13_CAPITOLO_DESC     VARCHAR2(50 BYTE)
)
LOGGING;

--
-- Create table "TMP_BIL_REGIONE"
--
CREATE TABLE TMP_BIL_REGIONE (
  ANNO         NUMBER NOT NULL,
  ID_ENTE      NUMBER NOT NULL,
  CODICE_CONTO NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  DARE         NUMBER,
  AVERE        NUMBER,
  NOTE         VARCHAR2(2000 BYTE)
)
LOGGING;

--
-- Create table "TMP_BILANCI"
--
CREATE TABLE TMP_BILANCI (
  ANNO         NUMBER,
  CODICE_CONTO VARCHAR2(20 BYTE),
  IMPORTO      NUMBER
)
LOGGING;

--
-- Create table "NOTA_TAB_REVISORI"
--
CREATE TABLE NOTA_TAB_REVISORI (
  ANNO               NUMBER,
  ORDINAMENTO        NUMBER,
  TIPO               VARCHAR2(1 BYTE),
  CODICE             VARCHAR2(10 BYTE),
  DESCRIZIONE        VARCHAR2(2000 BYTE),
  IMP_AGGREGATO      NUMBER,
  IMP_RETT_COERENZA  NUMBER,
  IMP_INFRAGRUPPO    NUMBER,
  IMP_RETT_CONSOLIDA NUMBER,
  IMP_CONSOLIDATO    NUMBER
)
LOGGING;

COMMENT ON COLUMN NOTA_TAB_REVISORI.TIPO IS 'P = Stato PAtrimoniale, E = Conto Economico';

--
-- Create table "FND_USER"
--
CREATE TABLE FND_USER (
  USER_ID                       NUMBER(15, 0),
  USER_NAME                     VARCHAR2(100 BYTE),
  LAST_UPDATE_DATE              DATE,
  LAST_UPDATED_BY               NUMBER(15, 0),
  CREATION_DATE                 DATE,
  CREATED_BY                    NUMBER(15, 0),
  LAST_UPDATE_LOGIN             NUMBER(15, 0),
  ENCRYPTED_FOUNDATION_PASSWORD VARCHAR2(100 BYTE),
  ENCRYPTED_USER_PASSWORD       VARCHAR2(100 BYTE),
  SESSION_NUMBER                NUMBER,
  START_DATE                    DATE,
  END_DATE                      DATE,
  DESCRIPTION                   VARCHAR2(240 BYTE),
  LAST_LOGON_DATE               DATE,
  PASSWORD_DATE                 DATE,
  PASSWORD_ACCESSES_LEFT        NUMBER(15, 0),
  PASSWORD_LIFESPAN_ACCESSES    NUMBER(15, 0),
  PASSWORD_LIFESPAN_DAYS        NUMBER(15, 0),
  EMPLOYEE_ID                   NUMBER(15, 0),
  EMAIL_ADDRESS                 VARCHAR2(240 BYTE),
  FAX                           VARCHAR2(80 BYTE),
  CUSTOMER_ID                   NUMBER(15, 0),
  SUPPLIER_ID                   NUMBER(15, 0),
  WEB_PASSWORD                  VARCHAR2(240 BYTE),
  PW                            VARCHAR2(30 BYTE),
  RUOLO                         VARCHAR2(100 BYTE),
  TIPO_CLIENT_DEFAULT           VARCHAR2(1 BYTE),
  UFFICIO                       VARCHAR2(5 BYTE),
  AMM_DIPART                    VARCHAR2(1 BYTE),
  AMM_TUTTI                     VARCHAR2(1 BYTE),
  MATRICOLA                     NUMBER(6, 0),
  COD_FISCALE                   VARCHAR2(16 BYTE),
  ID_RT                         NUMBER(11, 0),
  SUPERUSER_GSA                 VARCHAR2(1 BYTE),
  COGNOME                       VARCHAR2(50 BYTE),
  NOME                          VARCHAR2(50 BYTE),
  CDG_SN                        VARCHAR2(1 BYTE),
  FLAG_INTERIM                  VARCHAR2(1 BYTE),
  ACCESSO_PROJECT               VARCHAR2(1 BYTE),
  AMM_UTENTI_PROJECT            VARCHAR2(1 BYTE),
  ACCESSO_SIC                   VARCHAR2(1 BYTE),
  AMM_UTENTI_SIC                VARCHAR2(1 BYTE),
  DOCUMENTI_BILANCIO            VARCHAR2(1 BYTE),
  PASS_TEMP                     VARCHAR2(200 BYTE),
  SO64                          VARCHAR2(1 BYTE),
  RUOLO_RICHIESTA               VARCHAR2(1 BYTE),
  FL_MONIT_TRIM_SUP_U           VARCHAR2(1 BYTE),
  ABIL_CONTR                    VARCHAR2(1 BYTE),
  SUPERUSER_AUTOPARCO           VARCHAR2(1 BYTE),
  AMM_RICH_FONDI                VARCHAR2(1 BYTE),
  CONSTRAINT FNDUSER_FLSUPUS_CHK CHECK (NVL(fl_monit_trim_sup_u, 'N') IN ('S', 'N')),
  CHECK (AMM_DIPART IN ('S', 'N')),
  CONSTRAINT FIN_UK_0011 UNIQUE (USER_ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 128 K
                                                                              NEXT 1 M
                                                                              MAXEXTENTS UNLIMITED),
  CONSTRAINT FIN_UK_0012 UNIQUE (USER_NAME) USING INDEX TABLESPACE SIC STORAGE (INITIAL 128 K
                                                                                NEXT 1 M
                                                                                MAXEXTENTS UNLIMITED)
)
NOLOGGING;

CREATE INDEX FIN_FND_USER_N1 ON FND_USER (EMPLOYEE_ID)
NOLOGGING;

COMMENT ON COLUMN FND_USER.ABIL_CONTR IS 'Utente che gestisce abilitazione contratti U per il proprio ufficio T per tutti gli uffici; nullo non abilitato';
COMMENT ON COLUMN FND_USER.ACCESSO_PROJECT IS 'S - abilitato alla procedura project
R - Richesta abilitazione alla procedura project
Nullo non abilitato all''accesso in project';
COMMENT ON COLUMN FND_USER.AMM_DIPART IS 'STABILISCE SE L''UTENTE E'' ABILITATO A COMPIERE OPERAZIONE ANCHE PER ALTRI UFFICI DEL SUO DIPARTIMENTO';
COMMENT ON COLUMN FND_USER.AMM_RICH_FONDI IS 'Amministratore richieste missioni con fondi';
COMMENT ON COLUMN FND_USER.AMM_TUTTI IS 'Abilita all''amministrazione di tutti gli uffici nel modulo economato';
COMMENT ON COLUMN FND_USER.CDG_SN IS 'S=utente abilitato alla richieste/valutazioni di condivisione capitoli
N= utente NON abilitato alla reichieste/valutazioni di condivisione capitoli';
COMMENT ON COLUMN FND_USER.DOCUMENTI_BILANCIO IS 'Se impostato a S i documenti contabili generati dall''utente saranno assegnati per le distinte all''ufficio Bilancio - Impostare U per l''utenteche gestisce entrambi gli uffici';
COMMENT ON COLUMN FND_USER.FL_MONIT_TRIM_SUP_U IS 'Applicazione "Monitoraggio Trimestrale". Indica se l''operatore è da considerarsi come Super User';
COMMENT ON COLUMN FND_USER.FLAG_INTERIM IS 'S= dirigente con interim 
N= dirigente NO interim';
COMMENT ON COLUMN FND_USER.RUOLO_RICHIESTA IS 'Campo che identifica l''utente come "G"estore delle Richieste presso l''Ufficio Bilancio o come utente che può effettuare una "R"ichiesta';
COMMENT ON COLUMN FND_USER.UFFICIO IS 'INDIVIDUA L''UFFICIO DELL''UTENTE';

--
-- Create table "FND_REPORTS_CATEGORIE"
--
CREATE TABLE FND_REPORTS_CATEGORIE (
  CODICE       NUMBER,
  DESCRIZIONE  VARCHAR2(2000 BYTE),
  CODICE_PADRE NUMBER,
  CONSTRAINT J_PK_REPORTS_CAT PRIMARY KEY (CODICE) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                       NEXT 1 M
                                                                                       MAXEXTENTS UNLIMITED)
)
NOLOGGING;

--
-- Create foreign key "J_FK_REPORTS_CAT" on table "FND_REPORTS_CATEGORIE"
--
ALTER TABLE FND_REPORTS_CATEGORIE
ADD CONSTRAINT J_FK_REPORTS_CAT FOREIGN KEY (CODICE_PADRE)
REFERENCES FND_REPORTS_CATEGORIE (CODICE);

--
-- Create table "FIN_T_PROVINCE"
--
CREATE TABLE FIN_T_PROVINCE (
  SIGLA       VARCHAR2(3 BYTE),
  DESCRIZIONE VARCHAR2(100 BYTE),
  REGIONE     VARCHAR2(100 BYTE)
)
NOLOGGING;

--
-- Create table "FIN_T_MESI"
--
CREATE TABLE FIN_T_MESI (
  ID                NUMBER(2, 0),
  DESCRIZIONE       VARCHAR2(20 BYTE),
  DESCRIZIONE_BREVE VARCHAR2(7 BYTE),
  CONSTRAINT FIN_T_MESI_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                NEXT 1 M
                                                                                MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create table "FIN_T_MENU_PREFERITI"
--
CREATE TABLE FIN_T_MENU_PREFERITI (
  USER_ID  NUMBER(15, 0),
  CODICE   NUMBER,
  SEQUENZA NUMBER(2, 0),
  CONSTRAINT FIN_PK_0016 PRIMARY KEY (USER_ID, CODICE) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                           NEXT 1 M
                                                                                           MAXEXTENTS UNLIMITED)
)
NOLOGGING;

--
-- Create table "FIN_T_MENU_PARAMETRI"
--
CREATE TABLE FIN_T_MENU_PARAMETRI (
  CODICE           NUMBER            NOT NULL,
  NOME_PARAMETRO   VARCHAR2(20 BYTE) NOT NULL,
  VALORE_PARAMETRO VARCHAR2(20 BYTE),
  CONSTRAINT FIN_T_MENU_PARAMETRI_PK PRIMARY KEY (CODICE, NOME_PARAMETRO) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                              NEXT 1 M
                                                                                                              MAXEXTENTS UNLIMITED)
)
NOLOGGING;

--
-- Create table "FIN_T_FILE_ESTERNI"
--
CREATE TABLE FIN_T_FILE_ESTERNI (
  ID            NUMBER,
  NOME_FILE     VARCHAR2(300 BYTE),
  FLAG_ALFRESCO VARCHAR2(1 BYTE),
  CONSTRAINT FIN_T_FILE_ESTERNI_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 3 M
                                                                                        NEXT 1 M
                                                                                        MAXEXTENTS UNLIMITED)
)
LOGGING;

COMMENT ON COLUMN FIN_T_FILE_ESTERNI.FLAG_ALFRESCO IS 'Flag che indica se il file è memorizzato su filesystem o su Alfresco.';

--
-- Create table "FIN_T_DATI_GENERALI"
--
CREATE TABLE FIN_T_DATI_GENERALI (
  ANNO_FINANZIARIO               NUMBER(4, 0),
  ATTIVO                         VARCHAR2(1 BYTE),
  DESCRIZIONE                    VARCHAR2(120 BYTE),
  INDIRIZZO                      VARCHAR2(120 BYTE),
  TEL_FAX                        VARCHAR2(120 BYTE),
  QUALIFICA1                     VARCHAR2(100 BYTE),
  NOME1                          VARCHAR2(100 BYTE),
  FILE1_FIRMA_DIGIT              VARCHAR2(100 BYTE),
  QUALIFICA2                     VARCHAR2(100 BYTE),
  NOME2                          VARCHAR2(100 BYTE),
  FILE2_FIRMA_DIGIT              VARCHAR2(100 BYTE),
  QUALIFICA3                     VARCHAR2(100 BYTE),
  NOME3                          VARCHAR2(100 BYTE),
  FILE3_FIRMA_DIGIT              VARCHAR2(100 BYTE),
  QUALIFICA4                     VARCHAR2(100 BYTE),
  NOME4                          VARCHAR2(100 BYTE),
  FILE4_FIRMA_DIGIT              VARCHAR2(100 BYTE),
  LOGO                           VARCHAR2(100 BYTE),
  PARTITA_IVA                    VARCHAR2(20 BYTE),
  COMUNE_SEDE_ENTE               VARCHAR2(50 BYTE),
  AVANZO_AMMINISTRAZIONE         NUMBER(15, 2),
  CASSA                          NUMBER(15, 2),
  VARIAZIONE_AVANZO_PIU          NUMBER(15, 2),
  VARIAZIONE_AVANZO_MENO         NUMBER(15, 2),
  AVANZO_REGIONALE               NUMBER(15, 2),
  VARIAZIONE_CASSA_PIU           NUMBER(15, 2),
  VARIAZIONE_CASSA_MENO          NUMBER(15, 2),
  VISIBILITA_ASSESTAMENTO        VARCHAR2(1 BYTE),
  RUOLO_VISIBILITA_ASSESTAMENTO  VARCHAR2(100 BYTE),
  TESORERIA                      VARCHAR2(150 BYTE),
  ABI                            NUMBER(5, 0),
  CAB                            NUMBER(5, 0),
  VISIBILITA_PREVISIONE          VARCHAR2(1 BYTE),
  BILANCIO_PREVISIONE_APERTO     VARCHAR2(1 BYTE),
  RUOLO_OPERAZIONI_RAGIONERIA    VARCHAR2(100 BYTE),
  DATA_ATTO_ASSESTAMENTO         DATE,
  NUMERO_ATTO_ASSESTAMENTO       NUMBER(10, 0),
  FILE_PARAMETRI10G              VARCHAR2(2000 BYTE),
  VARIAZIONE_AVANZO_DELIBERA     NUMBER(15, 2),
  OBIETTIVO_PATTO_STABILITA      NUMBER,
  OBIETTIVO_PATTO_STABILITA_IMP  NUMBER,
  SFORAMENTO_PATTO_PREC          NUMBER,
  IMPORTO_COMMISSIONI_BONIFICO   NUMBER(10, 2),
  QUOTA_ENTI_LOCALI              NUMBER,
  DISAVANZO_AMMINISTRAZIONE      NUMBER(15, 2),
  MANUTENZIONE_SISTEMA           VARCHAR2(1 BYTE),
  MESSAGGIO_MANUTENZIONE_SISTEMA VARCHAR2(4000 BYTE),
  MANUTENZIONE_PACKAGE           VARCHAR2(1 BYTE),
  MSG_MANUTENZIONE_PACKAGE       VARCHAR2(200 BYTE),
  VARIAZIONE_DISAVANZO_PIU       NUMBER(15, 2),
  VARIAZIONE_DISAVANZO_MENO      NUMBER(15, 2),
  DISAVANZO_REGIONALE            NUMBER(15, 2),
  QUOTA_ENTI_LOCALI_IMP          NUMBER,
  DISAVANZO_EFFETTIVO_ANNI_PREC  NUMBER(15, 2),
  PERCORSO_FILE                  VARCHAR2(500 BYTE),
  TITOLO_PARTITE_GIRO_U          VARCHAR2(2 BYTE),
  TITOLO_PARTITE_GIRO_E          VARCHAR2(2 BYTE),
  ATTIVO_PLURIENNALE             VARCHAR2(1 BYTE),
  FPV_CORRENTE                   NUMBER(15, 2),
  FPV_CAPITALE                   NUMBER(15, 2),
  INDIRIZZO_FTP                  VARCHAR2(150 BYTE),
  ATTIVO_PROVVEDIMENTI           VARCHAR2(1 BYTE) DEFAULT 'N',
  VARIAZIONE_FPV_CORRENTE        NUMBER,
  VARIAZIONE_FPV_CAPITALE        NUMBER,
  CODICE_ENTE_BANCA_T            VARCHAR2(100 BYTE),
  CODICE_ENTE_BANCA_T_SAN        VARCHAR2(100 BYTE),
  LABEL_NON_PREDEF1              VARCHAR2(100 BYTE),
  COLONNA_NON_PREDEF1            VARCHAR2(1000 BYTE),
  CAP_AVANZO_AMM                 VARCHAR2(5 BYTE),
  DESC_CAP_AVANZO_AMM            VARCHAR2(1000 BYTE),
  CAP_FONDO_CASSA                VARCHAR2(5 BYTE),
  DESC_CAP_FONDO_CASSA           VARCHAR2(1000 BYTE),
  CAP_FPV_CORRENTE               VARCHAR2(5 BYTE),
  DESC_CAP_FPV_CORRENTE          VARCHAR2(1000 BYTE),
  CAP_FPV_CAPITALE               VARCHAR2(5 BYTE),
  DESC_CAP_FPV_CAPITALE          VARCHAR2(1000 BYTE),
  CAP_DISAVANZO_AMM1             VARCHAR2(5 BYTE),
  DESC_CAP_DISAVANZO_AMM1        VARCHAR2(1000 BYTE),
  CAP_DISAVANZO_AMM2             VARCHAR2(5 BYTE),
  DESC_CAP_DISAVANZO_AMM2        VARCHAR2(1000 BYTE),
  DATA_APPROVAZIONE_PREVISIONE   DATE,
  DATA_CHIUSURA_ECONOMICA        DATE,
  DIRECTORY_ORACLE_ORDINATIVO    VARCHAR2(35 BYTE),
  N_CONTO_BANCA_IT_ENTE_RICEV    VARCHAR2(10 BYTE),
  PROV_BENEF_ACCR_TES_PROV_STATO VARCHAR2(10 BYTE),
  FONDOCASSA_DICUI_SANITA        NUMBER(15, 2),
  COD_CONTO_EVIDENZA_DEFAULT     VARCHAR2(25 BYTE),
  CODICE_BDAP                    VARCHAR2(18 BYTE),
  DIRECTORY_ORACLE_BDAP          VARCHAR2(35 BYTE),
  POPOLAZIONE_RESIDENTE          NUMBER,
  RISULTATO_ESERCIZIO            NUMBER,
  FL_SCHEDE_VALUTAZIONE_VISIBILI VARCHAR2(1 BYTE)
)
NOLOGGING;

COMMENT ON TABLE FIN_T_DATI_GENERALI IS 'Per le colonne cap_avanzo_amm,cap_disavanzo_amm,cap_fondo_cassa,cap_fpv_corrente,cap_fpv_capitale vedi PP000017.docx';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.COD_CONTO_EVIDENZA_DEFAULT IS 'O.I. E'' un CODICE conto indicato dalla Tesoreria all''Ente. Serve per valorizzare il tag conto_evidenza';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.DATA_APPROVAZIONE_PREVISIONE IS 'Riportare la data in cui il bilancio è approvato. Utilizzato dalle funzioni PREVISIONE_INIZIALE e CASSA_INIZIALE';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.DATA_CHIUSURA_ECONOMICA IS 'Indica la data in cui la Contabilità economica non può essere più modificata';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.DIRECTORY_ORACLE_BDAP IS 'Rappresenta il nome dell''oggetto di tipo "DIRECTORY" creato nello schema oracle con istruzione del tipo CREATE OR REPLACE DIRECTORY';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.DIRECTORY_ORACLE_ORDINATIVO IS 'Rappresenta il nome dell''oggetto di tipo "DIRECTORY" creato nello schema oracle con istruzione del tipo CREATE OR REPLACE DIRECTORY DIR_ALSIA_ORDINATIVO AS ... Secondo questo esempio, il valore da mettere nella colonna sarebbe ''DIR_ALSIA_ORDINATIVO'' ';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.N_CONTO_BANCA_IT_ENTE_RICEV IS 'Creata su aptbas il 21/06/2016 per nuovo ordinativo informatico';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.OBIETTIVO_PATTO_STABILITA IS 'indica l''importo del limite per il Patto di Stabilità in migliaia di euro';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.POPOLAZIONE_RESIDENTE IS 'utilizzato per gli indicatori';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.PROV_BENEF_ACCR_TES_PROV_STATO IS 'Creata su aptbas il 21/06/2016 per nuovo ordinativo informatico';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.QUOTA_ENTI_LOCALI IS 'QUOTA OBIETTIVO ANNUALE ATTRIBUITO AGLI ENTI LOCALI (ART.7 - QUATER, C.1, 2 E 3 DELLA LG. 33/2009)';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.RISULTATO_ESERCIZIO IS 'contiene l''importo del risultato economico d''esercizio';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.TITOLO_PARTITE_GIRO_E IS 'contiene il codice del titolo utilizzato per le partite di giro Entrate';
COMMENT ON COLUMN FIN_T_DATI_GENERALI.TITOLO_PARTITE_GIRO_U IS 'contiene il codice del titolo utilizzato per le partite di giro Uscite';

--
-- Create table "FIN_T_COMUNI"
--
CREATE TABLE FIN_T_COMUNI (
  ID                           NUMBER(10, 0),
  DESCRIZIONE                  VARCHAR2(200 BYTE),
  CODICE_ISTAT                 VARCHAR2(6 BYTE),
  CAP                          VARCHAR2(10 BYTE),
  CODICE_BEL_FIORE             VARCHAR2(4 BYTE),
  COD_PROVINCIA                NUMBER(6, 0),
  PROVINCIA                    VARCHAR2(20 BYTE),
  COD_REGIONE                  VARCHAR2(3 BYTE),
  REGIONE                      VARCHAR2(21 BYTE),
  COD_RIPARTIZIONE_GEOGRAFICA  NUMBER(2, 0),
  DESC_RIPARTIZIONE_GEOGRAFICA VARCHAR2(20 BYTE),
  NAZIONE                      VARCHAR2(2000 BYTE),
  CONSTRAINT FIN_PK_0011 PRIMARY KEY (ID) USING INDEX TABLESPACE SIC STORAGE (INITIAL 256 K
                                                                              NEXT 1 M
                                                                              MAXEXTENTS UNLIMITED)
)
NOLOGGING;

--
-- Create table "FIN_T_APPLICAZIONI"
--
CREATE TABLE FIN_T_APPLICAZIONI (
  CODICE           VARCHAR2(20 BYTE) NOT NULL,
  GRUPPO           NUMBER(1, 0),
  DESCRIZIONE      VARCHAR2(100 BYTE),
  IND_LANCIO       VARCHAR2(100 BYTE),
  NOME_PROCEDURA   VARCHAR2(30 BYTE),
  STATO            VARCHAR2(1 BYTE),
  INDIRIZZO_LOGOUT VARCHAR2(100 BYTE),
  CONSTRAINT FIN_T_APPLICAZIONI_PK PRIMARY KEY (CODICE) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                            NEXT 1 M
                                                                                            MAXEXTENTS UNLIMITED)
)
NOLOGGING;

COMMENT ON COLUMN FIN_T_APPLICAZIONI.IND_LANCIO IS 'segue la parte inserita in indirizzo server e serve per creare l''indirizzo completo per il lancio dell''applicazione';

--
-- Create table "CONS_UTENTI_ENTI"
--
CREATE TABLE CONS_UTENTI_ENTI (
  USER_ID     NUMBER NOT NULL,
  ID_ENTE     NUMBER NOT NULL,
  DATA_INIZIO DATE,
  DATA_FINE   DATE,
  CONSTRAINT CONS_UTENTI_ENTI_PK PRIMARY KEY (USER_ID, ID_ENTE) USING INDEX TABLESPACE SIC STORAGE (INITIAL 64 K
                                                                                                    NEXT 1 M
                                                                                                    MAXEXTENTS UNLIMITED)
)
LOGGING;

--
-- Create table "CONS_TIPI_DOC"
--
CREATE TABLE CONS_TIPI_DOC (
  ID          NUMBER NOT NULL,
  DESCRIZIONE VARCHAR2(2000 BYTE),
  E_S         VARCHAR2(1 BYTE),
  NOTE        VARCHAR2(2000 BYTE),
  DATA_FINE   DATE,
  CONSTRAINT CONS_TIPI_DOC_PK PRIMARY KEY (ID) USING INDEX TABLESPACE SIC
)
LOGGING;

COMMENT ON COLUMN CONS_TIPI_DOC.DATA_FINE IS 'Data fine valitdità tipo documento';
COMMENT ON COLUMN CONS_TIPI_DOC.E_S IS 'Ente o Società/Azienda';

--
-- Create table "CONS_DOC_ALLEGATI"
--
CREATE TABLE CONS_DOC_ALLEGATI (
  ID_ENTE          NUMBER NOT NULL,
  ID_DOC           NUMBER NOT NULL,
  ANNO             NUMBER NOT NULL,
  DATA_ALLEGATO    DATE,
  URL              VARCHAR2(2000 BYTE),
  NOTE             VARCHAR2(2000 BYTE),
  NOTE_CONS        VARCHAR2(2000 BYTE),
  DATA_VALIDAZIONE DATE,
  CONSTRAINT CONS_DOC_ALLEGATI_PK PRIMARY KEY (ID_ENTE, ID_DOC, ANNO) USING INDEX TABLESPACE SIC
)
LOGGING;

--
-- Create table "BACK_PARTITE_INFRA"
--
CREATE TABLE BACK_PARTITE_INFRA (
  ANNO                NUMBER NOT NULL,
  ID_ENTE             NUMBER NOT NULL,
  ID_INFRA            NUMBER NOT NULL,
  CREDITI             NUMBER,
  DEBITI              NUMBER,
  RICAVI              NUMBER,
  COSTI               NUMBER,
  INTERESSI_ROYAL     NUMBER,
  CONTRIBUTI          NUMBER,
  INTERESSI           NUMBER,
  ACQ_CESPITI         NUMBER,
  VEN_CESPITI         NUMBER,
  CONC_CRED_PREST     NUMBER,
  UTILE_PERD_INFRA    NUMBER,
  DIVIDENDI_DISAVANZI NUMBER,
  TRIBUTI             NUMBER,
  ID_CONTO            NUMBER,
  IMPORTO_ORIGINALE   NUMBER,
  IMPORTO_RETTIFICATO NUMBER,
  NOTE                VARCHAR2(2000 BYTE)
)
LOGGING;

--
-- Create table "BACK_CONS_PIACEE_IMPORTI"
--
CREATE TABLE BACK_CONS_PIACEE_IMPORTI (
  ANNO         NUMBER NOT NULL,
  ID_ENTE      NUMBER NOT NULL,
  CODICE_CONTO NUMBER NOT NULL,
  IMPORTO      NUMBER,
  IMPORTO1     NUMBER,
  DARE         NUMBER,
  AVERE        NUMBER,
  NOTE         VARCHAR2(2000 BYTE)
)
LOGGING;

--
-- Create table "APPLICATION_PARAMETER"
--
CREATE TABLE APPLICATION_PARAMETER (
  REPORT_URL         VARCHAR2(200 BYTE),
  REPORT_SERVER      VARCHAR2(200 BYTE),
  REPORT_USERID      VARCHAR2(200 BYTE),
  HOST_WEB           VARCHAR2(200 BYTE),
  HOST_MOBILE        VARCHAR2(200 BYTE),
  PATH_JS            VARCHAR2(200 BYTE),
  HEADER             VARCHAR2(200 BYTE),
  EXTERNAL_LINK      VARCHAR2(200 BYTE),
  ALFRESCO_URL       VARCHAR2(300 BYTE),
  ALFRESCO_USR       VARCHAR2(300 BYTE),
  ALFRESCO_PSW       VARCHAR2(300 BYTE),
  MAIL_ASSISTENZA    VARCHAR2(400 BYTE),
  ALFRESCO_DOC       VARCHAR2(300 BYTE),
  DIRECTORY_FILE     VARCHAR2(300 BYTE),
  ALFRESCO_DOC2      VARCHAR2(300 BYTE),
  ALFRESCO_URL_SHARE VARCHAR2(300 BYTE),
  UFF_RAG            VARCHAR2(5 BYTE),
  ARUBA_USER         VARCHAR2(50 BYTE),
  ARUBA_PWD          VARCHAR2(50 BYTE)
)
LOGGING;

COMMENT ON COLUMN APPLICATION_PARAMETER.MAIL_ASSISTENZA IS 'Lista di mail usate come destinatari per le mail di assistenza (ad esempio per l''inserimento della fattura elettronica con errori).';
COMMENT ON COLUMN APPLICATION_PARAMETER.UFF_RAG IS 'Codice ufficio ragioneria';

--
-- Create synonym "UTENTI_SIADA"
--
CREATE SYNONYM UTENTI_SIADA
FOR SIADA.UTENTI;

--
-- Create synonym "TBA_PRIMA_NOTA_TESTA"
--
CREATE SYNONYM TBA_PRIMA_NOTA_TESTA
FOR TB_PRIMA_NOTA_TESTA;

--
-- Create synonym "TBA_PRIMA_NOTA_CORPO"
--
CREATE SYNONYM TBA_PRIMA_NOTA_CORPO
FOR TB_PRIMA_NOTA_CORPO;

--
-- Create synonym "TBA_PIANO_DEI_CONTI"
--
CREATE SYNONYM TBA_PIANO_DEI_CONTI
FOR TB_PIANO_DEI_CONTI;

--
-- Create synonym "TBA_CAUSALI_CONTABILI"
--
CREATE SYNONYM TBA_CAUSALI_CONTABILI
FOR TB_CAUSALI_CONTABILI;

--
-- Create synonym "SIC_TICKET_CF"
--
CREATE SYNONYM SIC_TICKET_CF
FOR RT.SIC_TICKET_CF;

--
-- Create synonym "SIC_TICKET"
--
CREATE SYNONYM SIC_TICKET
FOR RT.SIC_TICKET;

--
-- Create synonym "SIC_CUSTOMFIELDS"
--
CREATE SYNONYM SIC_CUSTOMFIELDS
FOR RT.SIC_CUSTOMFIELDS;

--
-- Create synonym "RT_USERS"
--
CREATE SYNONYM RT_USERS
FOR RT.USERS;

--
-- Create synonym "RT_TICKETS"
--
CREATE SYNONYM RT_TICKETS
FOR RT.TICKETS;

--
-- Create synonym "RT_REPORT1"
--
CREATE SYNONYM RT_REPORT1
FOR RT.SIC_REPORT1;

--
-- Create synonym "RT_QUEUES"
--
CREATE SYNONYM RT_QUEUES
FOR RT.QUEUES;

--
-- Create synonym "RT_GROUPMEMBERS"
--
CREATE SYNONYM RT_GROUPMEMBERS
FOR RT.GROUPMEMBERS;

--
-- Create synonym "RT_CUSTOMFIELDSVALUES"
--
CREATE SYNONYM RT_CUSTOMFIELDSVALUES
FOR RT.RT_CUSTOMFIELDSVALUES;

--
-- Create synonym "RT_CUSTOMFIELDS"
--
CREATE SYNONYM RT_CUSTOMFIELDS
FOR RT.CUSTOMFIELDS;

--
-- Create synonym "RT_ACL"
--
CREATE SYNONYM RT_ACL
FOR RT.ACL;

--
-- Create synonym "GAT2WS_TESTATA"
--
CREATE SYNONYM GAT2WS_TESTATA
FOR GAT2_WS.FE_TESTATA_FATTURA;

--
-- Create synonym "GAT2WS_DATI_INVIO"
--
CREATE SYNONYM GAT2WS_DATI_INVIO
FOR GAT2_WS.FE_DATI_INVIO_FATTURA;

--
-- Create synonym "FINA_VOCI_CEF"
--
CREATE SYNONYM FINA_VOCI_CEF
FOR FIN_T_VOCI_CEF;

--
-- Create synonym "FINA_VINCOLI_VARIAZIONI"
--
CREATE SYNONYM FINA_VINCOLI_VARIAZIONI
FOR FIN_VINCOLI_VARIAZIONI;

--
-- Create synonym "FINA_VINCOLI_PLURIENNALE2"
--
CREATE SYNONYM FINA_VINCOLI_PLURIENNALE2
FOR FIN_T_VINCOLI_PLURIENNALE2;

--
-- Create synonym "FINA_VINCOLI_PLURIENNALE1"
--
CREATE SYNONYM FINA_VINCOLI_PLURIENNALE1
FOR FIN_T_VINCOLI_PLURIENNALE1;

--
-- Create synonym "FINA_VINCOLI_DEFINITIVI"
--
CREATE SYNONYM FINA_VINCOLI_DEFINITIVI
FOR FIN_VINCOLI_DEFINITIVI;

--
-- Create synonym "FINA_VINCOLI_ASS_DEFINITIVI"
--
CREATE SYNONYM FINA_VINCOLI_ASS_DEFINITIVI
FOR FIN_VINCOLI_ASS_DEFINITIVI;

--
-- Create synonym "FINA_VINCOLI_ASSESTAMENTO"
--
CREATE SYNONYM FINA_VINCOLI_ASSESTAMENTO
FOR FIN_VINCOLI_ASSESTAMENTO;

--
-- Create synonym "FINA_VINCOLI"
--
CREATE SYNONYM FINA_VINCOLI
FOR FIN_T_VINCOLI;

--
-- Create synonym "FINA_UTENTI"
--
CREATE SYNONYM FINA_UTENTI
FOR FND_USER;

--
-- Create synonym "FINA_USER"
--
CREATE SYNONYM FINA_USER
FOR FND_USER;

--
-- Create synonym "FINA_T_VINCOLI_CONTR_GESTIONE"
--
CREATE SYNONYM FINA_T_VINCOLI_CONTR_GESTIONE
FOR FIN_T_VINCOLI_CONTR_GESTIONE;

--
-- Create synonym "FINA_T_VINCOLI"
--
CREATE SYNONYM FINA_T_VINCOLI
FOR FIN_T_VINCOLI;

--
-- Create synonym "FINA_T_STRUTTURE_CAPITOLI"
--
CREATE SYNONYM FINA_T_STRUTTURE_CAPITOLI
FOR FIN_T_STRUTTURE_CAPITOLI;

--
-- Create synonym "FINA_T_STRUTTURE"
--
CREATE SYNONYM FINA_T_STRUTTURE
FOR FIN_T_STRUTTURE;

--
-- Create synonym "FINA_T_RISULTATI"
--
CREATE SYNONYM FINA_T_RISULTATI
FOR FIN_T_RISULTATI;

--
-- Create synonym "FINA_T_PERENTI"
--
CREATE SYNONYM FINA_T_PERENTI
FOR FIN_T_PERENTI;

--
-- Create synonym "FINA_T_OBIETTIVI_GEST_CAPITOLI"
--
CREATE SYNONYM FINA_T_OBIETTIVI_GEST_CAPITOLI
FOR FIN_T_OBIETTIVI_GEST_CAPITOLI;

--
-- Create synonym "FINA_T_OBIETTIVI_GESTIONALI"
--
CREATE SYNONYM FINA_T_OBIETTIVI_GESTIONALI
FOR FIN_T_OBIETTIVI_GESTIONALI;

--
-- Create synonym "FINA_T_LOG_STRUTTURE_CAPITOLI"
--
CREATE SYNONYM FINA_T_LOG_STRUTTURE_CAPITOLI
FOR FIN_T_LOG_STRUTTURE_CAPITOLI;

--
-- Create synonym "FINA_T_LOG_STRUTTURE"
--
CREATE SYNONYM FINA_T_LOG_STRUTTURE
FOR FIN_T_LOG_STRUTTURE;

--
-- Create synonym "FINA_T_LOG_RISULTATI"
--
CREATE SYNONYM FINA_T_LOG_RISULTATI
FOR FIN_T_LOG_RISULTATI;

--
-- Create synonym "FINA_T_LOG_OB_GEST_CAP"
--
CREATE SYNONYM FINA_T_LOG_OB_GEST_CAP
FOR FIN_T_LOG_OB_GEST_CAP;

--
-- Create synonym "FINA_T_LOG_OB_GEST"
--
CREATE SYNONYM FINA_T_LOG_OB_GEST
FOR FIN_T_LOG_OB_GEST;

--
-- Create synonym "FINA_T_LOG_INDICATORI"
--
CREATE SYNONYM FINA_T_LOG_INDICATORI
FOR FIN_T_LOG_INDICATORI;

--
-- Create synonym "FINA_T_LOG_DIRETTRICE"
--
CREATE SYNONYM FINA_T_LOG_DIRETTRICE
FOR FIN_T_LOG_DIRETTRICE;

--
-- Create synonym "FINA_T_LOG_DIPARTIMENTI"
--
CREATE SYNONYM FINA_T_LOG_DIPARTIMENTI
FOR FIN_T_LOG_DIPARTIMENTI;

--
-- Create synonym "FINA_T_LOG_ASP"
--
CREATE SYNONYM FINA_T_LOG_ASP
FOR FIN_T_LOG_ASP;

--
-- Create synonym "FINA_T_INDICATORI"
--
CREATE SYNONYM FINA_T_INDICATORI
FOR FIN_T_INDICATORI;

--
-- Create synonym "FINA_T_DIRETTRICE"
--
CREATE SYNONYM FINA_T_DIRETTRICE
FOR FIN_T_DIRETTRICE;

--
-- Create synonym "FINA_T_DIPARTIMENTI"
--
CREATE SYNONYM FINA_T_DIPARTIMENTI
FOR FIN_T_DIPARTIMENTI;

--
-- Create synonym "FINA_T_ASP"
--
CREATE SYNONYM FINA_T_ASP
FOR FIN_T_ASP;

--
-- Create synonym "FINA_TITOLI_CEF"
--
CREATE SYNONYM FINA_TITOLI_CEF
FOR FIN_T_TITOLI_CEF;

--
-- Create synonym "FINA_TITOLI"
--
CREATE SYNONYM FINA_TITOLI
FOR FIN_T_TITOLI;

--
-- Create synonym "FINA_TIPO_PAGAMENTI"
--
CREATE SYNONYM FINA_TIPO_PAGAMENTI
FOR FIN_T_TIPO_PAGAMENTI;

--
-- Create synonym "FINA_TIPOLOGIE_REDDITO"
--
CREATE SYNONYM FINA_TIPOLOGIE_REDDITO
FOR FIN_T_TIPOLOGIE_REDDITO;

--
-- Create synonym "FINA_TIPI_PAGAMENTO_INCASSO"
--
CREATE SYNONYM FINA_TIPI_PAGAMENTO_INCASSO
FOR FIN_TIPI_PAGAMENTO_INCASSO;

--
-- Create synonym "FINA_TIPI_DOCUMENTI"
--
CREATE SYNONYM FINA_TIPI_DOCUMENTI
FOR FIN_T_TIPI_DOCUMENTI;

--
-- Create synonym "FINA_TIPI_ATTI"
--
CREATE SYNONYM FINA_TIPI_ATTI
FOR FIN_T_TIPI_ATTI;

--
-- Create synonym "FINA_TERZE_PARTI_REGOLARIZZO"
--
CREATE SYNONYM FINA_TERZE_PARTI_REGOLARIZZO
FOR FIN_T_TERZE_PARTI_REGOLARIZZO;

--
-- Create synonym "FINA_TABELLE_LEGGE_FINANZ"
--
CREATE SYNONYM FINA_TABELLE_LEGGE_FINANZ
FOR FIN_T_TABELLE_LEGGE_FINANZ;

--
-- Create synonym "FINA_STRUTTURE_CAPITOLI"
--
CREATE SYNONYM FINA_STRUTTURE_CAPITOLI
FOR FIN_T_STRUTTURE_CAPITOLI;

--
-- Create synonym "FINA_STRUTTURE_BILANCIO"
--
CREATE SYNONYM FINA_STRUTTURE_BILANCIO
FOR FIN_STRUTTURE_BILANCIO;

--
-- Create synonym "FINA_STORNI_SIC"
--
CREATE SYNONYM FINA_STORNI_SIC
FOR FIN_STORNI_SIC;

--
-- Create synonym "FINA_STANZIAMENTI_COMPETENZA"
--
CREATE SYNONYM FINA_STANZIAMENTI_COMPETENZA
FOR FIN_V_STANZIAMENTI_COMPETENZA;

--
-- Create synonym "FINA_STANZIAMENTI_CASSA"
--
CREATE SYNONYM FINA_STANZIAMENTI_CASSA
FOR FIN_V_STANZIAMENTI_CASSA;

--
-- Create synonym "FINA_SIOPE"
--
CREATE SYNONYM FINA_SIOPE
FOR FIN_T_SIOPE;

--
-- Create synonym "FINA_SIC01178"
--
CREATE SYNONYM FINA_SIC01178
FOR FIN_T_SIC01178;

--
-- Create synonym "FINA_SEZIONI_CEF"
--
CREATE SYNONYM FINA_SEZIONI_CEF
FOR FIN_T_SEZIONI_CEF;

--
-- Create synonym "FINA_SETTORI"
--
CREATE SYNONYM FINA_SETTORI
FOR FIN_SETTORI;

--
-- Create synonym "FINA_SEQUENZA_DOCUMENTI"
--
CREATE SYNONYM FINA_SEQUENZA_DOCUMENTI
FOR FIN_T_SEQUENZA_DOCUMENTI;

--
-- Create synonym "FINA_RUOLI_UTENTI"
--
CREATE SYNONYM FINA_RUOLI_UTENTI
FOR FIN_RUOLI_UTENTI;

--
-- Create synonym "FINA_RITENUTE_DOC"
--
CREATE SYNONYM FINA_RITENUTE_DOC
FOR FIN_V_RITENUTE_DOC;

--
-- Create synonym "FINA_REV_COLL"
--
CREATE SYNONYM FINA_REV_COLL
FOR FIN_T_REV_COLL;

--
-- Create synonym "FINA_REVERSALI_COLLEGATE"
--
CREATE SYNONYM FINA_REVERSALI_COLLEGATE
FOR FIN_T_REVERSALI_COLLEGATE;

--
-- Create synonym "FINA_REVERSALI1"
--
CREATE SYNONYM FINA_REVERSALI1
FOR FIN_REVERSALI1;

--
-- Create synonym "FINA_REVERSALI"
--
CREATE SYNONYM FINA_REVERSALI
FOR FIN_REVERSALI;

--
-- Create synonym "FINA_RAGGR_CAPITOLI_TESTATA"
--
CREATE SYNONYM FINA_RAGGR_CAPITOLI_TESTATA
FOR FIN_RAGGR_CAPITOLI_TESTATA;

--
-- Create synonym "FINA_RAGGR_CAPITOLI_DETTAGLIO"
--
CREATE SYNONYM FINA_RAGGR_CAPITOLI_DETTAGLIO
FOR FIN_RAGGR_CAPITOLI_DETTAGLIO;

--
-- Create synonym "FINA_PRIMA_NOTA"
--
CREATE SYNONYM FINA_PRIMA_NOTA
FOR FIN_V_PRIMA_NOTA;

--
-- Create synonym "FINA_PRENOTA_PREIMP"
--
CREATE SYNONYM FINA_PRENOTA_PREIMP
FOR FIN_T_PRENOTA_PREIMP;

--
-- Create synonym "FINA_PREIMPEGNI_ABBATTUTI"
--
CREATE SYNONYM FINA_PREIMPEGNI_ABBATTUTI
FOR FIN_T_PREIMPEGNI_ABBATTUTI;

--
-- Create synonym "FINA_ORDINE_OBIETTIVI"
--
CREATE SYNONYM FINA_ORDINE_OBIETTIVI
FOR FIN_T_ORDINE_OBIETTIVI;

--
-- Create synonym "FINA_OPZIONI_MENU"
--
CREATE SYNONYM FINA_OPZIONI_MENU
FOR FIN_OPZIONI_MENU;

--
-- Create synonym "FINA_OBIETTIVI_GEST_CAPITOLI"
--
CREATE SYNONYM FINA_OBIETTIVI_GEST_CAPITOLI
FOR FIN_T_OBIETTIVI_GEST_CAPITOLI;

--
-- Create synonym "FINA_OBIETTIVI_GESTIONALI"
--
CREATE SYNONYM FINA_OBIETTIVI_GESTIONALI
FOR FIN_T_OBIETTIVI_GESTIONALI;

--
-- Create synonym "FINA_NO_ECONOMICA"
--
CREATE SYNONYM FINA_NO_ECONOMICA
FOR FIN_V_NO_ECONOMICA;

--
-- Create synonym "FINA_NATURA_SPESA"
--
CREATE SYNONYM FINA_NATURA_SPESA
FOR FIN_T_NATURA_SPESA;

--
-- Create synonym "FINA_NATURA_ENTRATA"
--
CREATE SYNONYM FINA_NATURA_ENTRATA
FOR FIN_T_NATURA_ENTRATA;

--
-- Create synonym "FINA_MOTIVI_MODIFICA_CANCELLA"
--
CREATE SYNONYM FINA_MOTIVI_MODIFICA_CANCELLA
FOR FIN_T_MOTIVI_MODIFICA_CANCELLA;

--
-- Create synonym "FINA_MESSAGGI"
--
CREATE SYNONYM FINA_MESSAGGI
FOR FIN_T_MESSAGGI;

--
-- Create synonym "FINA_MESE_CORRENTE"
--
CREATE SYNONYM FINA_MESE_CORRENTE
FOR FIN_MESE_CORRENTE;

--
-- Create synonym "FINA_MENU_RUOLI"
--
CREATE SYNONYM FINA_MENU_RUOLI
FOR FIN_T_MENU_RUOLI;

--
-- Create synonym "FINA_MENU_PREFERITI"
--
CREATE SYNONYM FINA_MENU_PREFERITI
FOR FIN_T_MENU_PREFERITI;

--
-- Create synonym "FINA_MENU_PARAMETRI"
--
CREATE SYNONYM FINA_MENU_PARAMETRI
FOR FIN_T_MENU_PARAMETRI;

--
-- Create synonym "FINA_MENU_LABEL"
--
CREATE SYNONYM FINA_MENU_LABEL
FOR FIN_MENU_LABEL;

--
-- Create synonym "FINA_MENU_ATTIVI"
--
CREATE SYNONYM FINA_MENU_ATTIVI
FOR FIN_MENU_ATTIVI;

--
-- Create synonym "FINA_MENU_ASSOCIAZIONI"
--
CREATE SYNONYM FINA_MENU_ASSOCIAZIONI
FOR FIN_T_MENU_ASSOCIAZIONI;

--
-- Create synonym "FINA_MENU"
--
CREATE SYNONYM FINA_MENU
FOR FIN_T_MENU;

--
-- Create synonym "FINA_MANDATI_SIC"
--
CREATE SYNONYM FINA_MANDATI_SIC
FOR FIN_MANDATI_SIC;

--
-- Create synonym "FINA_MANDATI_FATTURE"
--
CREATE SYNONYM FINA_MANDATI_FATTURE
FOR FIN_T_MANDATI_FATTURE;

--
-- Create synonym "FINA_MANDATI1"
--
CREATE SYNONYM FINA_MANDATI1
FOR FIN_MANDATI1;

--
-- Create synonym "FINA_MANDATI"
--
CREATE SYNONYM FINA_MANDATI
FOR FIN_MANDATI;

--
-- Create synonym "FINA_LOG_DOCUMENTI"
--
CREATE SYNONYM FINA_LOG_DOCUMENTI
FOR FIN_T_LOG_DOCUMENTI;

--
-- Create synonym "FINA_LETTERE_MODULO_FISCALE"
--
CREATE SYNONYM FINA_LETTERE_MODULO_FISCALE
FOR FIN_LETTERE_MODULO_FISCALE;

--
-- Create synonym "FINA_LETTERE_MODFISC_BEN"
--
CREATE SYNONYM FINA_LETTERE_MODFISC_BEN
FOR FIN_LETTERE_MODFISC_BEN;

--
-- Create synonym "FINA_LETTERE_2002"
--
CREATE SYNONYM FINA_LETTERE_2002
FOR FIN_LETTERE_2002;

--
-- Create synonym "FINA_INVIO_DISTINTE"
--
CREATE SYNONYM FINA_INVIO_DISTINTE
FOR FIN_T_INVIO_DISTINTE;

--
-- Create synonym "FINA_INDICE"
--
CREATE SYNONYM FINA_INDICE
FOR BAS_IND;

--
-- Create synonym "FINA_IMPEGNI_RESIDUI"
--
CREATE SYNONYM FINA_IMPEGNI_RESIDUI
FOR FIN_T_IMPEGNI_RESIDUI;

--
-- Create synonym "FINA_IMPEGNI_CATASTO_PROGETTI"
--
CREATE SYNONYM FINA_IMPEGNI_CATASTO_PROGETTI
FOR FIN_V_IMPEGNI_CATASTO_PROGETTI;

--
-- Create synonym "FINA_FONTE_FINANZIAMENTO"
--
CREATE SYNONYM FINA_FONTE_FINANZIAMENTO
FOR FIN_T_FONTE_FINANZIAMENTO;

--
-- Create synonym "FINA_FO1"
--
CREATE SYNONYM FINA_FO1
FOR FIN_T_FO1;

--
-- Create synonym "FINA_FIRME_DOCUMENTI_RAG"
--
CREATE SYNONYM FINA_FIRME_DOCUMENTI_RAG
FOR FIN_T_FIRME_DOCUMENTI_RAG;

--
-- Create synonym "FINA_FILIALI_BANCA"
--
CREATE SYNONYM FINA_FILIALI_BANCA
FOR FIN_FILIALI_BANCA;

--
-- Create synonym "FINA_FILE_ESTERNI"
--
CREATE SYNONYM FINA_FILE_ESTERNI
FOR FIN_T_FILE_ESTERNI;

--
-- Create synonym "FINA_ESCLUSIONE_MANDREV"
--
CREATE SYNONYM FINA_ESCLUSIONE_MANDREV
FOR FIN_ESCLUSIONE_MANDREV;

--
-- Create synonym "FINA_ERRORI_ORDINATIVO"
--
CREATE SYNONYM FINA_ERRORI_ORDINATIVO
FOR FIN_ERRORI_ORDINATIVO;

--
-- Create synonym "FINA_DOC_TERZE_PARTI"
--
CREATE SYNONYM FINA_DOC_TERZE_PARTI
FOR FIN_V_DOC_TERZE_PARTI;

--
-- Create synonym "FINA_DOCUMENTI_TERZE_PARTI"
--
CREATE SYNONYM FINA_DOCUMENTI_TERZE_PARTI
FOR FIN_T_DOCUMENTI_TERZE_PARTI;

--
-- Create synonym "FINA_DOCUMENTI_MODIFICATI"
--
CREATE SYNONYM FINA_DOCUMENTI_MODIFICATI
FOR FIN_T_DOCUMENTI_MODIFICATI;

--
-- Create synonym "FINA_DOCUMENTI"
--
CREATE SYNONYM FINA_DOCUMENTI
FOR FIN_T_DOCUMENTI;

--
-- Create synonym "FINA_DISTINTE_REV_TESTATA"
--
CREATE SYNONYM FINA_DISTINTE_REV_TESTATA
FOR FIN_DISTINTE_REV_TESTATA;

--
-- Create synonym "FINA_DISTINTE_REV_DETTAGLIO"
--
CREATE SYNONYM FINA_DISTINTE_REV_DETTAGLIO
FOR FIN_DISTINTE_REV_DETTAGLIO;

--
-- Create synonym "FINA_DISTINTE_MAND_TESTATA"
--
CREATE SYNONYM FINA_DISTINTE_MAND_TESTATA
FOR FIN_DISTINTE_MAND_TESTATA;

--
-- Create synonym "FINA_DISTINTE_MAND_DETTAGLIO"
--
CREATE SYNONYM FINA_DISTINTE_MAND_DETTAGLIO
FOR FIN_DISTINTE_MAND_DETTAGLIO;

--
-- Create synonym "FINA_DIPARTIMENTI"
--
CREATE SYNONYM FINA_DIPARTIMENTI
FOR FIN_T_DIPARTIMENTI;

--
-- Create synonym "FINA_DATI_GENERALI"
--
CREATE SYNONYM FINA_DATI_GENERALI
FOR FIN_T_DATI_GENERALI;

--
-- Create synonym "FINA_CONSUNTIVO_TXT"
--
CREATE SYNONYM FINA_CONSUNTIVO_TXT
FOR FIN_T_CONSUNTIVO_TXT;

--
-- Create synonym "FINA_CONSUNTIVO_EXCEL"
--
CREATE SYNONYM FINA_CONSUNTIVO_EXCEL
FOR FIN_T_CONSUNTIVO_EXCEL;

--
-- Create synonym "FINA_COMUNI"
--
CREATE SYNONYM FINA_COMUNI
FOR FIN_T_COMUNI;

--
-- Create synonym "FINA_CLASSIF_ECO_FUNZ_PLUR"
--
CREATE SYNONYM FINA_CLASSIF_ECO_FUNZ_PLUR
FOR FIN_V_CLASSIF_ECO_FUNZ_PLUR;

--
-- Create synonym "FINA_CLASSIFICAZIONE_ECO_FUNZ"
--
CREATE SYNONYM FINA_CLASSIFICAZIONE_ECO_FUNZ
FOR FIN_V_CLASSIFICAZIONE_ECO_FUNZ;

--
-- Create synonym "FINA_CERTIFICAZIONI_770"
--
CREATE SYNONYM FINA_CERTIFICAZIONI_770
FOR FIN_T_CERTIFICAZIONI_770;

--
-- Create synonym "FINA_CATEGORIE"
--
CREATE SYNONYM FINA_CATEGORIE
FOR FIN_T_CATEGORIE;

--
-- Create synonym "FINA_CAPITOLI_PREIMPEGNI"
--
CREATE SYNONYM FINA_CAPITOLI_PREIMPEGNI
FOR FIN_T_CAPITOLI_PREIMPEGNI;

--
-- Create synonym "FINA_CAPITOLI_PERENTI"
--
CREATE SYNONYM FINA_CAPITOLI_PERENTI
FOR FIN_T_CAPITOLI_PERENTI;

--
-- Create synonym "FINA_CAPITOLI_CONDIVISI"
--
CREATE SYNONYM FINA_CAPITOLI_CONDIVISI
FOR FIN_V_CAPITOLI_CONDIVISI;

--
-- Create synonym "FINA_CAPITOLI_COD_GEST"
--
CREATE SYNONYM FINA_CAPITOLI_COD_GEST
FOR FIN_T_CAPITOLI_COD_GEST;

--
-- Create synonym "FINA_CAPITOLI"
--
CREATE SYNONYM FINA_CAPITOLI
FOR FIN_T_CAPITOLI;

--
-- Create synonym "FINA_BILANCIO"
--
CREATE SYNONYM FINA_BILANCIO
FOR FIN_T_BILANCIO;

--
-- Create synonym "FINA_BANCHE_TESTATA"
--
CREATE SYNONYM FINA_BANCHE_TESTATA
FOR FIN_T_BANCHE_TESTATA;

--
-- Create synonym "FINA_BANCHE"
--
CREATE SYNONYM FINA_BANCHE
FOR FIN_T_BANCHE;

--
-- Create synonym "FINA_AVVISI_PAGAMENTO"
--
CREATE SYNONYM FINA_AVVISI_PAGAMENTO
FOR FIN_AVVISI_PAGAMENTO;

--
-- Create synonym "FINA_AVANZI_VARIAZIONI"
--
CREATE SYNONYM FINA_AVANZI_VARIAZIONI
FOR FIN_AVANZI_VARIAZIONI;

--
-- Create synonym "FINA_AVANZI_SIC01017"
--
CREATE SYNONYM FINA_AVANZI_SIC01017
FOR FIN_AVANZI_SIC01017;

--
-- Create synonym "FINA_AVANZI_DEFINITIVI"
--
CREATE SYNONYM FINA_AVANZI_DEFINITIVI
FOR FIN_AVANZI_DEFINITIVI;

--
-- Create synonym "FINA_AVANZI_ASSESTAMENTO"
--
CREATE SYNONYM FINA_AVANZI_ASSESTAMENTO
FOR FIN_AVANZI_ASSESTAMENTO;

--
-- Create synonym "FINA_AVANZI"
--
CREATE SYNONYM FINA_AVANZI
FOR FIN_T_AVANZI;

--
-- Create synonym "FINA_ARTICOLI_CATASTO_PROGETTI"
--
CREATE SYNONYM FINA_ARTICOLI_CATASTO_PROGETTI
FOR FIN_ARTICOLI_CATASTO_PROGETTI;

--
-- Create synonym "FINA_ARTICOLI"
--
CREATE SYNONYM FINA_ARTICOLI
FOR FIN_T_ARTICOLI;

--
-- Create synonym "FINA_APPOGGIO_CERTIFICATI"
--
CREATE SYNONYM FINA_APPOGGIO_CERTIFICATI
FOR FIN_V_APPOGGIO_CERTIFICATI;

--
-- Create synonym "FINA_APPOGGIO1_TXT"
--
CREATE SYNONYM FINA_APPOGGIO1_TXT
FOR FIN_T_APPOGGIO1_TXT;

--
-- Create synonym "FINA_ANA_STRUTTURE"
--
CREATE SYNONYM FINA_ANA_STRUTTURE
FOR FIN_T_ANA_STRUTTURE;

--
-- Create synonym "FINA_ANA_SEDI"
--
CREATE SYNONYM FINA_ANA_SEDI
FOR FIN_T_ANA_SEDI;

--
-- Create synonym "FINA_ANA_CONTI_BANCARI"
--
CREATE SYNONYM FINA_ANA_CONTI_BANCARI
FOR FIN_T_ANA_CONTI_BANCARI;

--
-- Create synonym "FINA_ANAGRAFICA"
--
CREATE SYNONYM FINA_ANAGRAFICA
FOR FIN_T_ANAGRAFICA;

--
-- Create synonym "FINA_ACCERTAMENTI_RESIDUI"
--
CREATE SYNONYM FINA_ACCERTAMENTI_RESIDUI
FOR FIN_T_ACCERTAMENTI_RESIDUI;

--
-- Create synonym "BAS_CAPITOLI"
--
CREATE SYNONYM BAS_CAPITOLI
FOR BAS_V_CAPITOLI;

--
-- Create function "VALIDATEMAIL"
--
CREATE FUNCTION validateMail(p_email IN VARCHAR2)
  RETURN BOOLEAN
  IS
    cemailregexp VARCHAR2(1000) := '^[a-z0-9!#$%&''*+/=?^_`{|}~-]+(\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*@([a-z0-9]([a-z0-9-]*[a-z0-9])?\.)+([A-Z]{2}|arpa|biz|com|info|intww|name|net|org|pro|aero|asia|cat|coop|edu|gov|jobs|mil|mobi|museum|pro|tel|travel|post)$';

  BEGIN
    IF REGEXP_LIKE(p_email, cemailregexp, 'i')
    THEN
      RETURN TRUE;
    ELSE
      RETURN FALSE;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN RETURN FALSE;
  END;
/

--
-- Create function "READFROMWEB"
--
CREATE FUNCTION readfromweb(url VARCHAR2)
  RETURN CLOB
  IS
    pcs  UTL_HTTP.html_pieces;
    retv CLOB;
  BEGIN

    pcs := UTL_HTTP.request_pieces(url, 300);
    FOR i IN 1 .. pcs.COUNT
    LOOP
      retv := retv || pcs(i);
    END LOOP;
    RETURN retv;
  END;
/

--
-- Create function "PRELEVAPROGRESSIVOUNIVOCO"
--
CREATE FUNCTION PrelevaProgressivoUnivoco(nome_file IN VARCHAR2)
  RETURN VARCHAR2
  IS
    pos                   NUMBER;
    i                     NUMBER;
    l_nome_file           NUMBER;
    l_progressivo_univoco VARCHAR2(20);
    l_char                VARCHAR2(1);

  BEGIN

    l_nome_file := LENGTH(nome_file);
    FOR pos IN 1 .. l_nome_file
    LOOP
      i := pos;
      l_char := SUBSTR(nome_file, pos, 1);
      IF l_char = '_'
      THEN
        EXIT;
      END IF;
    END LOOP;

    l_progressivo_univoco := '';
    i := i + 1;

    FOR pos IN i .. l_nome_file
    LOOP
      l_char := SUBSTR(nome_file, pos, 1);
      IF l_char IN ('.', '_', ' ', '(')
      THEN
        EXIT;
      ELSE
        l_progressivo_univoco := l_progressivo_univoco || l_char;
      END IF;
    END LOOP;

    RETURN l_progressivo_univoco;

  END;
/

--
-- Create function "OSEXEC"
--
CREATE FUNCTION OSexec(cCommand IN string)
  RETURN VARCHAR2
  IS
  -- function:    OS EXEC
  -- descr:       PL/SQL wrapper for the Java OSCOMMAND stored proc
  --
  LANGUAGE JAVA
  NAME 'OSCommand.Run(java.lang.String) return java.lang.String';
/

--
-- Create function "LEGGIHTML"
--
CREATE FUNCTION leggihtml
  RETURN CLOB
  IS
    url  VARCHAR2(2000);
    pcs  UTL_HTTP.html_pieces;
    retv CLOB;
  BEGIN
    url := 'http://@alfresco.regione.basilicata.it:8080/alfresco/cmisbrowser/69cd2d25-0f7d-4b93-835b-bf749c2f4849/root/User%20Homes/publisys/Regione/FatturaPA/2015/03/03/4176549/FT-00107-PA-150225-1-1550100002.zip';
    --url:= 'http://www.google.it';
    pcs := UTL_HTTP.request_pieces(url, 50);
    FOR i IN 1 .. pcs.COUNT
    LOOP
      retv := retv || pcs(i);
    END LOOP;
    RETURN retv;
  END;
/

--
-- Create function "GENPASSWORD"
--
CREATE FUNCTION "GENPASSWORD"(i_chars_chr PLS_INTEGER DEFAULT 5,
                              i_chars_num PLS_INTEGER DEFAULT 2,
                              i_chars_spc PLS_INTEGER DEFAULT 1)
  RETURN VARCHAR2
  IS
    -- GenPassword - Generate a reasonable secure password
    --
    -- Parameter:
    -- i_chars_chr : number of alpha characters in the password
    -- i_chars_num : number of numeric characters in the password
    -- i_chars_spc : number of special characters in the password
    --
    -- Valid ranges are between 0 and 20 for every input parameter.
    -- Characters that get easily mixed up ('1' and 'l' or 'I',
    -- '0' and 'O', ...) are left out.
    --
    -- Example usage:
    -- SQL> select genpassword() from dual;
    --
    -- GENPASSWORD()
    -- ------------------------------------
    -- MXbjA6%4
    --
    l_chr VARCHAR2(60) := 'abcdefhijkmnoprstuvwxyzABCDEFGHIJKLMNPQRSTUVWXYZ';
    l_num VARCHAR2(60) := '23456789';
    l_spc VARCHAR2(60) := '!$%&/()=?+*#-@:<>';
    --
    l_pwd VARCHAR2(60) := '';
    l_sel VARCHAR2(60) := '';
  BEGIN
    --
    -- Raise an error if the input is out of sensible bounds
    --
    IF (i_chars_chr NOT BETWEEN 0 AND 20)
      OR (i_chars_num NOT BETWEEN 0 AND 20)
      OR (i_chars_spc NOT BETWEEN 0 AND 20)
    THEN
      RAISE value_error;
    END IF;
    --
    l_sel := l_sel || RPAD('a', i_chars_chr, 'a');
    l_sel := l_sel || RPAD('n', i_chars_num, 'n');
    l_sel := l_sel || RPAD('s', i_chars_spc, 's');
    --
    -- Loop over selector in random order and build the password by
    -- choosing a random character from the class denoted by the
    -- selector.
    --
    FOR rec IN (SELECT LEVEL
        FROM dual
      CONNECT BY LEVEL <= LENGTH(l_sel)
        ORDER BY DBMS_RANDOM.value())
    LOOP
      CASE SUBSTR(l_sel, rec.level, 1)
        WHEN 'a' THEN l_pwd := l_pwd || SUBSTR(l_chr, DBMS_RANDOM.value(1, LENGTH(l_chr)), 1);
        WHEN 'n' THEN l_pwd := l_pwd || SUBSTR(l_num, DBMS_RANDOM.value(1, LENGTH(l_num)), 1);
        WHEN 's' THEN l_pwd := l_pwd || SUBSTR(l_spc, DBMS_RANDOM.value(1, LENGTH(l_spc)), 1);
        ELSE NULL;
      END CASE;
    END LOOP;
    --
    RETURN l_pwd;
  END GenPassword;
/

--
-- Create function "EXTRACTCLOBFROMFILE"
--
CREATE FUNCTION extractClobFromFile(p_nomefile  IN VARCHAR2,
                                    p_directory IN VARCHAR2)
  RETURN CLOB
  IS

    /**
  	Dato il nome del file e la directory di database, ritorna il file in formato clob
  	*/

    wclob  CLOB;
    wbfile BFILE;

  BEGIN

    DBMS_LOB.createtemporary(wclob, FALSE);
    wbfile := BFILENAME(p_directory, p_nomefile);
    DBMS_LOB.OPEN(wbfile);
    DBMS_LOB.loadfromfile(wclob, wbfile, DBMS_LOB.getlength(wbfile));
    DBMS_LOB.fileclose(wbfile);

    RETURN wclob;

  END;
/

--
-- Create function "CUSTOM_HASH"
--
CREATE FUNCTION custom_hash(p_username IN VARCHAR2,
                            p_password IN VARCHAR2)
  RETURN VARCHAR2
  IS
    l_password VARCHAR2(4000);
    l_salt     VARCHAR2(4000) := 'NRJ16JIPZ6QTQHSGUSPV1NXV58DGXL';
  BEGIN

    -- This function should be wrapped, as the hash algorhythm is exposed here.
    -- You can change the value of l_salt or the method of which to call the
    -- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
    -- if you choose to do this.

    l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
    (input_string => p_password || SUBSTR(l_salt, 10, 13) || p_username ||
    SUBSTR(l_salt, 4, 10)));
    RETURN l_password;
  END;
/

--
-- Create function "CLOB_TO_BLOB"
--
CREATE FUNCTION clob_to_blob(p_clob_in IN CLOB)
  RETURN BLOB
  IS
    v_blob           BLOB;
    v_offset         INTEGER;
    v_buffer_varchar VARCHAR2(32000);
    v_buffer_raw     RAW(32000);
    v_buffer_size    BINARY_INTEGER := 32000;
  BEGIN
    --
    IF p_clob_in IS NULL
    THEN
      RETURN NULL;
    END IF;
    --
    DBMS_LOB.CREATETEMPORARY(v_blob, TRUE);
    v_offset := 1;
    FOR i IN 1 .. CEIL(DBMS_LOB.GETLENGTH(p_clob_in) / v_buffer_size)
    LOOP
      dbms_lob.read(p_clob_in, v_buffer_size, v_offset, v_buffer_varchar);
      v_buffer_raw := utl_raw.cast_to_raw(v_buffer_varchar);
      dbms_lob.writeappend(v_blob, utl_raw.length(v_buffer_raw), v_buffer_raw);
      v_offset := v_offset + v_buffer_size;
    END LOOP;
    RETURN v_blob;
  END clob_to_blob;
/

--
-- Create function "BLOB_TO_CLOB"
--
CREATE FUNCTION blob_to_clob(B BLOB)
  RETURN CLOB
  IS
    c CLOB;
    n NUMBER;
  BEGIN
    IF (b IS NULL)
    THEN
      RETURN NULL;
    END IF;
    IF (LENGTH(b) = 0)
    THEN
      RETURN EMPTY_CLOB();
    END IF;
    dbms_lob.createtemporary(c, TRUE);
    n := 1;
    WHILE (n + 32767 <= LENGTH(b))
      LOOP
        dbms_lob.writeappend(c, 32767, utl_raw.cast_to_varchar2(dbms_lob.substr(b, 32767, n)));
        n := n + 32767;
      END LOOP;
    dbms_lob.writeappend(c, LENGTH(b) - n + 1, utl_raw.cast_to_varchar2(dbms_lob.substr(b, LENGTH(b) - n + 1, n)));
    RETURN c;
  END;
/

--
-- Create function "BASE64ENCODEBLOB_PLSQL"
--
CREATE FUNCTION base64EncodeBlob_plsql(i_bl BLOB)
  RETURN CLOB
  IS
    v_out_cl CLOB;
    file_len PLS_INTEGER;
    modulo   PLS_INTEGER;
    pieces   PLS_INTEGER;
    amt      BINARY_INTEGER := 23808;
    buf      RAW(32767);
    buf_tx   VARCHAR2(32767);
    pos      PLS_INTEGER    := 1;
    filepos  PLS_INTEGER    := 1;
    counter  PLS_INTEGER    := 1;
  BEGIN
    DBMS_LOB.createtemporary(v_out_cl, TRUE, dbms_lob.call);
    file_len := DBMS_LOB.getlength(i_bl);
    modulo := MOD(file_len, amt);
    pieces := TRUNC(file_len / amt);

    WHILE (counter <= pieces)
      LOOP
        DBMS_LOB.READ(i_bl, amt, filepos, buf);
        buf_tx := utl_raw.cast_to_varchar2
        (UTL_ENCODE.base64_encode(buf));
        dbms_lob.writeappend(v_out_cl, LENGTH(buf_tx), buf_tx);
        filepos := counter * amt + 1;
        counter := counter + 1;
      END LOOP;

    IF (modulo <> 0)
    THEN
      DBMS_LOB.READ(i_bl, modulo, filepos, buf);
      buf_tx := utl_raw.cast_to_varchar2
      (UTL_ENCODE.base64_encode(buf));
      dbms_lob.writeappend(v_out_cl, LENGTH(buf_tx), buf_tx);
    END IF;
    RETURN v_out_cl;
  END;
/

COMMIT;
